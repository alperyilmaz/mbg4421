[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "MBG4421 Biyoinformatik",
    "section": "",
    "text": "Ders notları bu sayfada paylaşılacaktır. Ders notlarımız Türkçe olacktır fakat takip edilen site (Galaxy Training) İngilizce dilindedir. Gerektiğinde tarayıcınızın çeviri özelliğini kullanıp içerikleri Türkçe’ye çevirebilirsiniz.\nUygulamaları gerçekleştirmek için, öğrencilerin Galaxy ortamında hesap açması gerekmektedir. Halka açık bir çok Galaxy sunucu bulunmaktadır, yoğunluk veya içerik açısından farklar olabileceğinden usegalaxy.org , usegalaxy.eu ve usegalaxy.org.au sitelerinde hesap açmanız yararlı olacaktır.\n\n\n\n1 Ekim 2024 Salı tarihinde Galaxy sitesi tanıtıldı\n\n\n\n8 Ekim 2024 Salı tarihinde Galaxy kullanımını gösteren üç örnek yapılacaktır. Sunum linki\n\n\n\n15 Ekim 2024 Salı tarihinde Docking (Yanaştırma) konusu işlenecektir. Sunum linki\n\n\n\n22 Ekim 2024 Salı tarihinde NGS (yeni nesil dizileme) verileri konusuna giriş yapılacaktır. Sunum linki"
  },
  {
    "objectID": "index.html#ders1",
    "href": "index.html#ders1",
    "title": "MBG4421 Biyoinformatik",
    "section": "",
    "text": "1 Ekim 2024 Salı tarihinde Galaxy sitesi tanıtıldı"
  },
  {
    "objectID": "index.html#ders2",
    "href": "index.html#ders2",
    "title": "MBG4421 Biyoinformatik",
    "section": "",
    "text": "8 Ekim 2024 Salı tarihinde Galaxy kullanımını gösteren üç örnek yapılacaktır. Sunum linki"
  },
  {
    "objectID": "index.html#ders3",
    "href": "index.html#ders3",
    "title": "MBG4421 Biyoinformatik",
    "section": "",
    "text": "15 Ekim 2024 Salı tarihinde Docking (Yanaştırma) konusu işlenecektir. Sunum linki"
  },
  {
    "objectID": "ders3.html#içerik",
    "href": "ders3.html#içerik",
    "title": "Galaxy Üzerinde Docking",
    "section": "İçerik",
    "text": "İçerik\nBugün bahsedilecek Galaxy analizleri:\n\nProtein-ligand docking"
  },
  {
    "objectID": "ders3.html#örnek1-protein-ligand-docking",
    "href": "ders3.html#örnek1-protein-ligand-docking",
    "title": "Galaxy Üzerinde Docking",
    "section": "Örnek1: Protein-ligand docking",
    "text": "Örnek1: Protein-ligand docking\nBu eğitimde\n\nPDB dosyası indirme, temizleme\nReceptor ve ligand hazırlama\nLigand kütüphanesi hazırlama\nDocking/yanaştırma\n\ngösterilecektir."
  },
  {
    "objectID": "ders3.html#dockingmoleküler-kenetlenme-nedir",
    "href": "ders3.html#dockingmoleküler-kenetlenme-nedir",
    "title": "Galaxy Üzerinde Docking",
    "section": "Docking/Moleküler Kenetlenme Nedir?",
    "text": "Docking/Moleküler Kenetlenme Nedir?\n\nMoleküllerin bağlanma yönelimini tahmin etmek için kullanılan hesaplamalı bir yöntem\nGenellikle küçük bir molekül (ligand) ve daha büyük bir protein (reseptör) içerir\nMoleküller arasındaki ilişki gücünü veya bağlanma afinitesini tahmin etmeyi amaçlar\nİlaç keşfi ve tasarım süreçlerinde esastır"
  },
  {
    "objectID": "ders3.html#moleküler-kenetlenmenin-uygulamaları",
    "href": "ders3.html#moleküler-kenetlenmenin-uygulamaları",
    "title": "Galaxy Üzerinde Docking",
    "section": "Moleküler Kenetlenmenin Uygulamaları",
    "text": "Moleküler Kenetlenmenin Uygulamaları\n\nİlaç keşfi ve geliştirilmesi\nProtein-protein etkileşimlerini anlama\nEnzim-substrat etkileşimlerini inceleme"
  },
  {
    "objectID": "ders3.html#yaygın-kenetlenme-yazılımları",
    "href": "ders3.html#yaygın-kenetlenme-yazılımları",
    "title": "Galaxy Üzerinde Docking",
    "section": "Yaygın Kenetlenme Yazılımları",
    "text": "Yaygın Kenetlenme Yazılımları\n\nAutoDock Vina\n\nAçık kaynaklı, hızlı ve doğru\nBüyük ölçekli sanal tarama için uygun\n\nGOLD (Ligand Kenetlenmesi için Genetik Optimizasyon)\n\nYüksek doğruluklu ticari yazılım\nKenetlenme için genetik algoritma kullanır\n\nGlide (Enerjetiklerle Izgara Tabanlı Ligand Kenetlenmesi)\n\nSchrödinger paketinin bir parçası\nHızı ve doğruluğu ile bilinir\n\nSwissDock\n\nWeb tabanlı kenetlenme aracı\nKullanıcı dostu arayüz, yeni başlayanlar için uygun"
  },
  {
    "objectID": "ders3.html#dockingkenetlenme",
    "href": "ders3.html#dockingkenetlenme",
    "title": "Galaxy Üzerinde Docking",
    "section": "Docking/kenetlenme",
    "text": "Docking/kenetlenme\n\n\nResim kaynağı"
  },
  {
    "objectID": "ders3.html#pdb-formatı-protein-veri-bankası",
    "href": "ders3.html#pdb-formatı-protein-veri-bankası",
    "title": "Galaxy Üzerinde Docking",
    "section": "PDB Formatı: Protein Veri Bankası",
    "text": "PDB Formatı: Protein Veri Bankası\n\nBiyomoleküllerin 3B yapılarını temsil etmek için standart dosya formatı\nAtomik koordinatları ve diğer bilgileri içerir\nPDB dosyasındaki tipik bilgiler:\n\nAtom türleri ve koordinatları\nİkincil yapı atamaları\nKristalografik bilgiler\nDeneysel yöntem ve koşullar"
  },
  {
    "objectID": "ders3.html#pdb-dosya-örneği",
    "href": "ders3.html#pdb-dosya-örneği",
    "title": "Galaxy Üzerinde Docking",
    "section": "PDB Dosya Örneği",
    "text": "PDB Dosya Örneği\nATOM     1  N   ASP A  30     31.904  -0.904  -0.904  1.00 25.00          N\nATOM     2  CA  ASP A  30     31.904  -0.904  -0.904  1.00 25.00          C\nATOM     3  C   ASP A  30     32.904  -1.904  -1.904  1.00 25.00          C\n...\n\nHer satır bir atomu temsil eder\nSütunlar belirli bilgileri içerir (örn. atom türü, amino asit, koordinatlar)\nProteine ait olmayan atomlar (örn. ligandlar) HETATM ile gösterilir."
  },
  {
    "objectID": "ders3.html#pdb-içerik",
    "href": "ders3.html#pdb-içerik",
    "title": "Galaxy Üzerinde Docking",
    "section": "PDB içerik",
    "text": "PDB içerik\nGalaxy örneğinde kullanılacak olan 2BRC numaralı 3B yapıyı RCSB PDB sitesinden indirip:\n\nnot defterinde\nPyMOL programında açalım\n\nNot: “HETATM” ile başlayan satırları silip, hem HETATM hem de HETATM içermeyen dosyayı ayrı ayrı görüntüleyiniz.\nNot2: 2BRC numaralı yapıyı RCSB PDB sitesinde de 3B olarak görüntüleyebilirsiniz."
  },
  {
    "objectID": "ders3.html#pdbqt-formatı",
    "href": "ders3.html#pdbqt-formatı",
    "title": "Galaxy Üzerinde Docking",
    "section": "PDBQT Formatı",
    "text": "PDBQT Formatı\nPDBQT (Protein Veri Bankası, Kısmi Yük (Q) ve Atom Türü (T))\n\nÖzellikle moleküler kenetlenme için kullanılan dosya formatı\nPDB formatına dayanır, ek bilgiler içerir\n\nTemel Özellikler:\n\nAtomlar için kısmi yükleri içerir\nKuvvet alanı hesaplamalarında kullanılmak üzere atom türlerini belirtir\nAutoDock ve AutoDock Vina kenetlenme yazılımları tarafından kullanılır"
  },
  {
    "objectID": "ders3.html#pdbqt-örnek",
    "href": "ders3.html#pdbqt-örnek",
    "title": "Galaxy Üzerinde Docking",
    "section": "PDBQT örnek",
    "text": "PDBQT örnek\nATOM    1  A1  INH I        1.054   3.021   1.101  0.00  0.00    0.002 A\nATOM    2  A2  INH I        1.150   1.704   0.764  0.00  0.00    0.012 A\nATOM    3  A3  INH I       -0.006   0.975   0.431  0.00  0.00   -0.024 A"
  },
  {
    "objectID": "ders3.html#smiles-formatı",
    "href": "ders3.html#smiles-formatı",
    "title": "Galaxy Üzerinde Docking",
    "section": "SMILES Formatı",
    "text": "SMILES Formatı\nSMILES (Basitleştirilmiş Moleküler Giriş Satır Giriş Sistemi)\n\nMoleküler yapıyı temsil eden dize notasyonu\nKompakt ve insan tarafından okunabilir\n\nÖrnek: Aspirin\nCC(=O)OC1=CC=CC=C1C(=O)O\nAvantajlar:\n\nOluşturması ve ayrıştırması kolay\nVeritabanı depolama ve araması için uygun\n\nSınırlamalar:\n\n3B bilgi içermez\nAynı molekül için birden fazla geçerli SMILES olabilir"
  },
  {
    "objectID": "ders3.html#smiles-örnekleri",
    "href": "ders3.html#smiles-örnekleri",
    "title": "Galaxy Üzerinde Docking",
    "section": "SMILES Örnekleri",
    "text": "SMILES Örnekleri\n\nEtanol: CCO\nBenzen: c1ccccc1\nKafein: CN1C=NC2=C1C(=O)N(C(=O)N2C)C\n\nSMILES şunları temsil edebilir:\n\nAtomlar ve bağlar\nAromatiklik\nDallanma\nSiklik yapılar\nStereokimya"
  },
  {
    "objectID": "ders3.html#sdf-formatı",
    "href": "ders3.html#sdf-formatı",
    "title": "Galaxy Üzerinde Docking",
    "section": "SDF Formatı",
    "text": "SDF Formatı\nSDF (Yapı-Veri Dosyası)\n\nBirden çok molekülü ve ilişkili verileri temsil etmek için dosya formatı\n\nÖzellikler:\n\n3B koordinatları içerir\nEk özellikleri içerebilir (örn. moleküler ağırlık, LogP)\nÇok sayıda bileşiği depolamak için uygundur"
  },
  {
    "objectID": "ders3.html#sdf-formatı-örnek",
    "href": "ders3.html#sdf-formatı-örnek",
    "title": "Galaxy Üzerinde Docking",
    "section": "SDF formatı örnek",
    "text": "SDF formatı örnek\nAspirin\n  -OEChem-01172403242D\n\n 13 13  0     0  0  0  0  0  0999 V2000\n    2.8660   -0.2500    0.0000 O   0  0  0  0  0  0  0  0  0  0  0  0\n    4.5981    1.2500    0.0000 O   0  0  0  0  0  0  0  0  0  0  0  0\n    [Daha fazla koordinat satırı...]\n  1  2  1  0  0  0  0\n  [Daha fazla bağ satırı...]\nM  END\n$$$$"
  },
  {
    "objectID": "ders3.html#bağlanma-bölgesi-boşluk-veya-cep",
    "href": "ders3.html#bağlanma-bölgesi-boşluk-veya-cep",
    "title": "Galaxy Üzerinde Docking",
    "section": "Bağlanma Bölgesi: Boşluk veya Cep",
    "text": "Bağlanma Bölgesi: Boşluk veya Cep\n\nTanım: Bir ligandın bağlanabileceği protein yüzeyindeki bir bölge\nÖzellikler:\n\nGenellikle içbükey şekilde\nBelirli kimyasal özelliklere sahip olabilir (hidrofobik, yüklü vb.)\nRijit veya esnek olabilir\n\nTürleri:\n\nOrtosterik bölgeler: Doğal ligand için birincil bağlanma bölgesi\nAllosterik bölgeler: Protein işlevini modüle edebilen ikincil bölgeler"
  },
  {
    "objectID": "ders3.html#bağlanma-bölgelerinin-belirlenmesi",
    "href": "ders3.html#bağlanma-bölgelerinin-belirlenmesi",
    "title": "Galaxy Üzerinde Docking",
    "section": "Bağlanma Bölgelerinin Belirlenmesi",
    "text": "Bağlanma Bölgelerinin Belirlenmesi\n\nDeneysel yöntemler:\n\nX-ışını kristalografisi\nNMR spektroskopisi\n\nHesaplamalı yöntemler:\n\nGeometri tabanlı algoritmalar\nEnerji tabanlı yaklaşımlar\nMakine öğrenimi teknikleri"
  },
  {
    "objectID": "ders3.html#reseptör-moleküllerinin-hazırlanması",
    "href": "ders3.html#reseptör-moleküllerinin-hazırlanması",
    "title": "Galaxy Üzerinde Docking",
    "section": "Reseptör Moleküllerinin Hazırlanması",
    "text": "Reseptör Moleküllerinin Hazırlanması\n\n3B yapıyı elde edin\n\nX-ışını kristalografisi, NMR veya homoloji modellemesi\n\nYapıyı temizleyin\n\nSu moleküllerini ve standart olmayan kalıntıları kaldırın\nEksik atomları veya kalıntıları ekleyin\n\nHidrojen bağlarını optimize edin\n\nHidrojenleri ekleyin ve uygun protonasyon durumlarını atayın\n\nEnerjiyi minimize edin\n\nSterik çakışmaları gidermek için kısa bir enerji minimizasyonu gerçekleştirin\n\nBağlanma bölgesini tanımlayın\n\nKenetlenme için ilgilenilen bölgeyi belirtin"
  },
  {
    "objectID": "ders3.html#ligand-moleküllerinin-hazırlanması",
    "href": "ders3.html#ligand-moleküllerinin-hazırlanması",
    "title": "Galaxy Üzerinde Docking",
    "section": "Ligand Moleküllerinin Hazırlanması",
    "text": "Ligand Moleküllerinin Hazırlanması\n\nLigand yapısını elde edin\n\nManuel olarak çizin veya veritabanlarından alın (örn. PubChem, ZINC)\n\n3B konformasyon oluşturun\n\nGerekirse 2B’den 3B yapıya dönüştürün\n\nHidrojenleri ekleyin ve yükleri atayın\n\nUygun protonasyon durumlarını ve yük dağılımını sağlayın\n\nBirden çok konformer oluşturun (isteğe bağlı)\n\nLigand esnekliğini hesaba katın\n\nEnerjiyi minimize edin\n\nLigand geometrisini optimize edin"
  },
  {
    "objectID": "page-sample.html",
    "href": "page-sample.html",
    "title": "Some title",
    "section": "",
    "text": "Galaxy örnek"
  },
  {
    "objectID": "ders2.html#içerik",
    "href": "ders2.html#içerik",
    "title": "Galaxy Analizlerine Giriş",
    "section": "İçerik",
    "text": "İçerik\nBugün bahsedilecek Galaxy analizleri:\n\nA short introduction to Galaxy\nGalaxy Basics for genomics\nIntroduction to Genomics and Galaxy"
  },
  {
    "objectID": "ders2.html#örnek1-a-short-introduction-to-galaxy",
    "href": "ders2.html#örnek1-a-short-introduction-to-galaxy",
    "title": "Galaxy Analizlerine Giriş",
    "section": "Örnek1: A short introduction to Galaxy",
    "text": "Örnek1: A short introduction to Galaxy\nBu eğitimde\n\ndosya yükleme\ndosya görüntüleme\ntool kullanma\nbir tool’u tekrar kullanma\n\ngösterilecektir."
  },
  {
    "objectID": "ders2.html#örnek2-galaxy-basics-for-genomics",
    "href": "ders2.html#örnek2-galaxy-basics-for-genomics",
    "title": "Galaxy Analizlerine Giriş",
    "section": "Örnek2: Galaxy Basics for genomics",
    "text": "Örnek2: Galaxy Basics for genomics\nBu eğitimde:\n\nlink kullanarak dosya yükleme\ngenom aritmetiği\ndatamash ile veri analizi\n\nherhangi bir kolondaki verilerin sayımı\nherhangi bir kolona göre sıralama\niki dosyayı birleştirme\n\nUCSC genom browser’da görüntüleme\n\ngösterilecektir."
  },
  {
    "objectID": "ders2.html#örnek3-introduction-to-genomics-and-galaxy",
    "href": "ders2.html#örnek3-introduction-to-genomics-and-galaxy",
    "title": "Galaxy Analizlerine Giriş",
    "section": "Örnek3: Introduction to Genomics and Galaxy",
    "text": "Örnek3: Introduction to Genomics and Galaxy\nBu eğitimde:\nchr22’de pozitif ve negatif zincirde çakışan genler tespit edilecektir ve aşağıdaki adımlar takip edilecektir.\n\nUCSC’den veri çekimi (insan genlerinin koordinatları)\nFilter yardımıyla, genleri iki dosyaya ayırma\ngenom aritmetiği, çakışan bölgeleri bulma\nUCSC genome browser’da görüntüleme"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "MBG4421 Ders Notları",
    "section": "",
    "text": "YTÜ MBG bölümü MBG4421 Biyoinformatik 2024/2025GÜZ dönemi ders notları.\n\n\nSorularınız oldukça bu kısımda cevaplanacaktır.."
  },
  {
    "objectID": "about.html#sıkça-sorulan-sorular",
    "href": "about.html#sıkça-sorulan-sorular",
    "title": "MBG4421 Ders Notları",
    "section": "",
    "text": "Sorularınız oldukça bu kısımda cevaplanacaktır.."
  },
  {
    "objectID": "index.html#ders4",
    "href": "index.html#ders4",
    "title": "MBG4421 Biyoinformatik",
    "section": "",
    "text": "22 Ekim 2024 Salı tarihinde NGS (yeni nesil dizileme) verileri konusuna giriş yapılacaktır. Sunum linki"
  },
  {
    "objectID": "ders4.html#içerik",
    "href": "ders4.html#içerik",
    "title": "Galaxy Üzerinde Yeni Nesil Dizileme - Giriş",
    "section": "İçerik",
    "text": "İçerik\nBugün bahsedilecek Galaxy analizi:\n\nNGS data logistics"
  },
  {
    "objectID": "ders4.html#fastq-formatı",
    "href": "ders4.html#fastq-formatı",
    "title": "Galaxy Üzerinde Yeni Nesil Dizileme - Giriş",
    "section": "FASTQ formatı",
    "text": "FASTQ formatı\n@M02286:19:000000000-AA549:1:1101:12677:1273 1:N:0:23\nCCTACGGGTGGCAGCAGTGAGGAATATTGGTCAATGGACGGAAGTCTGAACCAGCCAAGTAGCGTGCAG\n+\nABC8C,:@F:CE8,B-,C,-6-9-C,CE9-CC--C-&lt;-C++,,+;CE&lt;,,CD,CEFC,@E9&lt;FCFCF?9\n@M02286:19:000000000-AA549:1:1101:15048:1299 1:N:0:23\nCCTACGGGTGGCTGCAGTGAGGAATATTGGACAATGGTCGGAAGACTGATCCAGCCATGCCGCGTGCAG\n+\nABC@CC77CFCEG;F9&lt;F89&lt;9--C,CE,--C-6C-,CE:++7:,CF&lt;,CEF,CFGGD8FFCFCFEGCF\n@M02286:19:000000000-AA549:1:1101:11116:1322 1:N:0:23\nCCTACGGGAGGCAGCAGTAGGGAATCTTCGGCAATGGACGGAAGTCTGACCGAGCAACGCCGCGTGAGT\n+\nAAC&lt;CCF+@@&gt;CC,C9,F9C9@9-CFFFE@7@:+CC8-C@:7,@EFE,6CF:+8F7EFEEF@EGGGEEE"
  },
  {
    "objectID": "ngs.html",
    "href": "ngs.html",
    "title": "ngs logistics",
    "section": "",
    "text": "FASTQ is not a very well defined format. In the beginning various manufacturers of sequencing instruments were free to interpret FASTQ as they saw fit, resulting in a multitude of FASTQ flavors. This variation stemmed primarily from different ways of encoding quality values as described on the Wikipedia article for FASTQ (below you will find an explanation of quality scores and their meaning). Today, the FASTQ Sanger version of the format is considered to be the standard form of FASTQ. Galaxy is using FASTQ Sanger as the only legitimate input for downstream processing tools and provides a number of utilities for converting FASTQ files into this form (see FASTQ Quality Control section of Galaxy tools).\nThe FASTQ format looks like this:\n@M02286:19:000000000-AA549:1:1101:12677:1273 1:N:0:23\nCCTACGGGTGGCAGCAGTGAGGAATATTGGTCAATGGACGGAAGTCTGAACCAGCCAAGTAGCGTGCAG\n+\nABC8C,:@F:CE8,B-,C,-6-9-C,CE9-CC--C-&lt;-C++,,+;CE&lt;,,CD,CEFC,@E9&lt;FCFCF?9\n@M02286:19:000000000-AA549:1:1101:15048:1299 1:N:0:23\nCCTACGGGTGGCTGCAGTGAGGAATATTGGACAATGGTCGGAAGACTGATCCAGCCATGCCGCGTGCAG\n+\nABC@CC77CFCEG;F9&lt;F89&lt;9--C,CE,--C-6C-,CE:++7:,CF&lt;,CEF,CFGGD8FFCFCFEGCF\n@M02286:19:000000000-AA549:1:1101:11116:1322 1:N:0:23\nCCTACGGGAGGCAGCAGTAGGGAATCTTCGGCAATGGACGGAAGTCTGACCGAGCAACGCCGCGTGAGT\n+\nAAC&lt;CCF+@@&gt;CC,C9,F9C9@9-CFFFE@7@:+CC8-C@:7,@EFE,6CF:+8F7EFEEF@EGGGEEE\nEach sequencing read is represented by four lines:\n\n@ followed by read ID and optional information about sequencing run\nsequenced bases\n+ (optionally followed by the read ID and some additional info)\nquality scores for each base of the sequence encoded as ASCII symbols\n\n\n\n\nIt is common to prepare pair-end and mate-pair sequencing libraries. This is highly beneficial for a number of applications discussed in subsequent topics. For now let’s just briefly discuss what these are and how they manifest themselves in FASTQ form.\n\n\n\n\n\n\nPaired-end and mate-pair reads. In paired end sequencing (left) the actual ends of rather short DNA molecules (less than 1kb) are determined, while for mate pair sequencing (right) the ends of long molecules are joined and prepared in special sequencing libraries. In these mate pair protocols, the ends of long, size-selected molecules are connected with an internal adapter sequence (i.e. linker, yellow) in a circularization reaction. The circular molecule is then processed using restriction enzymes or fragmentation. Fragments are enriched for the linker and outer library adapters are added around the two combined molecule ends. The internal adapter can then be used as a second priming site for an additional sequencing reaction in the same orientation or sequencing can be performed from the second adapter, from the reverse strand. (From “Understanding and improving high-throughput sequencing data production and analysis”, Ph.D. dissertation by Martin Kircher)\n\n\n\nThus in both cases (paired-end and mate-pair) a single physical piece of DNA (or RNA in the case of RNA-seq) is sequenced from two ends and so generates two reads. These can be represented as separate files (two FASTQ files with first and second reads) or a single file were reads for each end are interleaved. Here are examples:\n\n\nFile 1\n @M02286:19:000000000-AA549:1:1101:12677:1273 1:N:0:23\n CCTACGGGTGGCAGCAGTGAGGAATATTGGTCAATGGACGGAAGTCT\n +\n ABC8C,:@F:CE8,B-,C,-6-9-C,CE9-CC--C-&lt;-C++,,+;CE\n @M02286:19:000000000-AA549:1:1101:15048:1299 1:N:0:23\n CCTACGGGTGGCTGCAGTGAGGAATATTGGACAATGGTCGGAAGACT\n +\n ABC@CC77CFCEG;F9&lt;F89&lt;9--C,CE,--C-6C-,CE:++7:,CF\nFile 2\n@M02286:19:000000000-AA549:1:1101:12677:1273 2:N:0:23\nCACTACCCGTGTATCTAATCCTGTTTGATACCCGCACCTTCGAGCTTA\n+\n--8A,CCE+,,;,&lt;CC,,&lt;CE@,CFD,,C,CFF+@+@CCEF,,,B+C,\n@M02286:19:000000000-AA549:1:1101:15048:1299 2:N:0:23\nCACTACCGGGGTATCTAATCCTGTTCGCTCCCCACGCTTTCGTCCATC\n+\n-6AC,EE@::CF7CFF&lt;&lt;FFGGDFFF,@FGGGG?F7FEGGGDEFF&gt;FF\n\nComment: Read order is important\nNote that read IDs are identical in two files and they are listed in the same order. In some cases read IDs in the first and second file may be appended with /1 and /2 tags, respectively.\n\n\n\n\n@1/1\nAGGGATGTGTTAGGGTTAGGGTTAGGGTTAGGGTTAGGGTTAGGGTTA\n+\nEGGEGGGDFGEEEAEECGDEGGFEEGEFGBEEDDECFEFDD@CDD&lt;ED\n@1/2\nCCTAACCCTAACCCTAACCCTAACCCTAACCCTAACCCTAACCCTAAC\n+\nGHHHDFDFGFGEGFBGEGGEGEGGGHGFGHFHFHHHHHHHEF?EFEFF\n@2/1\nAGGGATGTGTTAGGGTTAGGGTTAGGGTTAGGGTTAGGGTTAGGGTTA\n+\nHHHHHHEGFHEEFEEHEEHHGGEGGGGEFGFGGGGHHHHFBEEEEEFG\n@2/2\nCCTAACCCTAACCCTAACCCTAACCCTAACCCTAACCCTAACCCTAAC\n+\nHHHHHHHHHHHHHGHHHHHHGHHHHHHHHHHHFHHHFHHHHHHHHHHH\nHere the first and the second reads are identified with /1 and /2 tags.\n\nComment: FASTQ format is a loose standard\nFASTQ format is not strictly defined and its variations will always cause headache for you. See this page for more information.\n\n\n\n\n\nAs we’ve seen above, FASTQ datasets contain two types of information:\n\nsequence of the read\nbase qualities for each nucleotide in the read.\n\nThe base qualities allow us to judge how trustworthy each base in a sequencing read is. The following excerpt from an excellent tutorial by Friederike Dündar, Luce Skrabanek, Paul Zumbo explains what base qualities are:\n\nComment: From “Introduction to differential gene expression analysis using RNA-seq”\nIllumina sequencing is based on identifying the individual nucleotides by the fluorescence signal emitted upon their incorporation into the growing sequencing read. Once the fluorescence intensities are extracted and translated into the four letter code. The deduction of nucleotide sequences from the images acquired during sequencing is commonly referred to as base calling. Due to the imperfect nature of the sequencing process and limitations of the optical instruments, base calling will always have inherent uncertainty. This is the reason why FASTQ files store the DNA sequence of each read together with a position-specific quality score that represents the error probability, i.e., how likely it is that an individual base call may be incorrect. The score is called Phred score, Q\n\n, which is proportional to the probability p that a base call is incorrect, where Q=−10lg(p). For example, a Phred score of 10 corresponds to one error in every ten base calls (Q=−10lg(0.1)\n\n), or 90% accuracy; a Phred score of 20 corresponds to one error in every 100 base calls, or 99% accuracy. A higher Phred score thus reflects higher confidence in the reported base. To assign each base a unique score identifier (instead of numbers of varying character length), Phred scores are typically represented as ASCII characters. At http://ascii-code.com/ you can see which characters are assigned to what number. For raw reads, the range of scores will depend on the sequencing technology and the base caller used (Illumina, for example, used a tool called Bustard, or, more recently, RTA). Unfortunately, Illumina has been anything but consistent in how they calculated and ASCII-encoded the Phred score (see below)! In addition, Illumina now allows Phred scores for base calls with as high as 45, while 41 used to be the maximum score until the HiSeq X. This may cause issues with downstream sapplications that expect an upper limit of 41.\n\n\n\n\nIllumina quality score.\n\n\nBase call quality scores are represented with the Phred range. Different Illumina (formerly Solexa) versions used different scores and ASCII offsets. Starting with Illumina format 1.8, the score now represents the standard Sanger/Phred format that is also used by other sequencing platforms and the sequencing archives.\n\n\n\n\n\n\nThe ASCII interpretation and ranges of the different Phred score notations used by Illumina and the original Sanger interpretation. Although the Sanger format allows a theoretical score of 93, raw sequencing reads typically do not exceed a Phred score of 60. In fact, most Illumina-based sequencing will result in maximum scores of 41 to 45 (image from Wikipedia)\n\n\n\n\n\n\nOne of the first steps in the analysis of NGS data is seeing how good the data actually is. FastqQC is a fantastic tool allowing you to assess the quality of FASTQ datasets (and deciding whether to blame or not to blame whoever has done sequencing for you).\n\n\n\n\n\n\n\nA. Excellent quality\nB. Hmmm…OK\n\n\n\nHere you can see FastQC base quality reports (the tools gives you many other types of data) for two datasets: A and B. The A dataset has long reads (250 bp) and very good quality profile with no qualities dropping below phred score of 30. The B dataset is significantly worse with ends of the reads dipping below phred score of 20. The B reads may need to be trimmed for further processing.\n\n\n\nMapping of NGS reads against reference sequences is one of the key steps of the analysis. Now it is time to see how this is done in practice. Below is a list of key publications highlighting mainstream mapping tools:\n\n2009 Bowtie 1 - Langmead et al.\n2012 Bowtie 2 - Langmead and Salzberg\n2009 BWA - Li and Durbin\n2010 BWA - Li and Durbin\n2013 BWA-MEM - Li\n\n\n\nMappers usually compare reads against a reference sequence that has been transformed into a highly accessible data structure called genome index. Such indexes should be generated before mapping begins. Galaxy instances typically store indexes for a number of publicly available genome builds.\n\n\n\n\n\n\nMapping against a pre-computed index in Galaxy.\n\n\n\nFor example, the image above shows indexes for hg38 version of the human genome. You can see that there are actually three choices: (1) hg38, (2) hg38 canonical and (3) hg38 canonical female. The hg38 contains all chromosomes as well as all unplaced contigs. The hg38 canonical does not contain unplaced sequences and only consists of chromosomes 1 through 22, X, Y, and mitochondria. The hg38 canonical female contains everything from the canonical set with the exception of chromosome Y.\n\n\n\nIf Galaxy does not have a genome you need to map against, you can upload your genome sequence as a FASTA file and use it in the mapper directly as shown below (Load reference genome is set to History).\n\n\n\n\n\n\nMapping against a pre-computed index in Galaxy\n\n\n\nIn this case Galaxy will first create an index from this dataset and then run mapping analysis against it.\n\n\n\n\nThe SAM/BAM format is an accepted standard for storing aligned reads (it can also store unaligned reads and some mappers such as BWA are accepting unaligned BAM as input). The binary form of the format (BAM) is compact and can be rapidly searched (if indexed). In Galaxy BAM datasets are always indexed (accompanies by a .bai file) and sorted in coordinate order. In the following duscussion I once again rely on tutorial by Friederike Dündar, Luce Skrabanek, and Paul Zumbo.\nThe Sequence Alignment/Map (SAM) format is, in fact, a generic nucleotide alignment format that describes the alignment of sequencing reads (or query sequences) to a reference. The human readable, TABdelimited SAM files can be compressed into the Binary Alignment/Map format. These BAM files are bigger than simply gzipped SAM files, because they have been optimized for fast random access rather than size reduction. Position-sorted BAM files can be indexed so that all reads aligning to a locus can be efficiently retrieved without loading the entire file into memory.\nAs shown below, SAM files typically contain a short header section and a very long alignment section where each row represents a single read alignment. The following sections will explain the SAM format in a bit more detail. For the most comprehensive and updated information go to https://github.com/samtools/hts-specs.\n\n\n\n\n\n\nSchematic representation of a SAM file. Each line of the optional header section starts with “@”, followed by the appropriate abbreviation (e.g., SQ for sequence dictionary which lists all chromosomes names (SN) and their lengths (LN)). The vast majority of lines within a SAM file typically correspond to read alignments where each read is described by the 11 mandatory entries (black font) and a variable number of optional fields (grey font). From tutorial by Friederike Dündar, Luce Skrabanek, and Paul Zumbo.\n\n\n\n\n\nThe header section includes information about how the alignment was generated and stored. All lines in the header section are tab-delimited and begin with the “@” character, followed by tag:value pairs, where tag is a two-letter string that defines the content and the format of value. For example, the “@SQ” line in the header section contains the information about the names and lengths of the *reference sequences to which the reads were aligned. For a hypothetical organism with three chromosomes of length 1,000 bp, the SAM header should contain the following three lines:\n@SQ SN:chr1 LN:1000\n@SQ SN:chr2 LN:1000\n@SQ SN:chr3 LN:1000\n\n\n\nThe optional header section is followed by the alignment section where each line corresponds to one sequenced read. For each read, there are 11 mandatory fields that always appear in the same order:\n&lt;QNAME&gt; &lt;FLAG&gt; &lt;RNAME&gt; &lt;POS&gt; &lt;MAPQ&gt; &lt;CIGAR&gt; &lt;MRNM&gt; &lt;MPOS&gt; &lt;ISIZE&gt; &lt;SEQ&gt; &lt;QUAL&gt;\nIf the corresponding information is unavailable or irrelevant, field values can be ‘0’ or ’*’ (depending on the field, see below), but they cannot be missing! After the 11 mandatory fields, a variable number of optional fields can be present. Here’s an example of one single line of a real-life SAM file (you may need to scroll sideways):\nERR458493 .552967 16 chrI 140 255 12 M61232N37M2S * 0 0 CCACTCGTTCACCAGGGCCGGCGGGCTGATCACTTTATCGTGCATCTTGGC BB?HHJJIGHHJIGIIJJIJGIJIJJIIIGHBJJJJJJHHHHFFDDDA1+B NH:i:1 HI:i:1 AS:i:41 nM:i:2\nThe following table explains the format and content of each field. The FLAG, CIGAR, and the optional fields (marked in blue) are explained in more detail below. The number of optional fields can vary widely between different SAM files and even between reads within in the same file. The field types marked in blue are explained in more detail in the main text below.\n\n\n\nSAM fields.\n\n\n\n\n\nThe FLAG field encodes various pieces of information about the individual read, which is particularly important for PE reads. It contains an integer that is generated from a sequence of bits (0, 1). This way, answers to multiple binary (Yes/No) questions can be compactly stored as a series of bits, where each of the single bits can be addressed and assigned separately.\nThe following table gives an overview of the different properties that can be encoded in the FLAG field. The developers of the SAM format and samtools tend to use the hexadecimal encoding as a means to refer to the different bits in their documentation. The value of the FLAG field in a given SAM file, however, will always be the decimal representation of the sum of the underlying binary values (as shown in Table below, row 2).\n\n\n\n\n\n\nThe FLAG field of SAM files stores information about the respective read alignment in one single decimal number. The decimal number is the sum of all the answers to the Yes/No questions associated with each binary bit. The hexadecimal representation is used to refer to the individual bits (questions). A bit is set if the corresponding state is true. For example, if a read is paired, 0x1 will be set, returning the decimal value of 1. Therefore, all FLAG values associated with paired reads must be uneven decimal numbers. Conversely, if the 0x1 bit is unset (= read is not paired), no assumptions can be made about 0x2, 0x8, 0x20, 0x40 and 0x80 because they refer to paired reads. From tutorial by Friederike Dündar, Luce Skrabanek, and Paul Zumbo\n\n\n\nIn a run with single reads, the flags you most commonly see are:\n\n0: This read has been mapped to the forward strand. (None of the bit-wise flags have been set.)\n4: The read is unmapped (0x4 is set).\n16: The read is mapped to the reverse strand (0x10 is set)\n\n(0x100, 0x200 and 0x400 are not used by most aligners/mappers, but could, in principle be set for single reads.) Some common FLAG values that you may see in a PE experiment include:\n\n\n\n\n\n\n\n69 (= 1 + 4 + 64)\nThe read is paired, is the first read in the pair, and is unmapped.\n\n\n77 (= 1 + 4 + 8 + 64)\nThe read is paired, is the first read in the pair, both are unmapped.\n\n\n83 (= 1 + 2 + 16 + 64)\nThe read is paired, mapped in a proper pair, is the first read in the pair, and it is mapped to the reverse strand.\n\n\n99 (= 1 + 2 + 32 + 64)\nThe read is paired, mapped in a proper pair, is the first read in the pair, and its mate is mapped to the reverse strand.\n\n\n133 (= 1 + 4 + 128)\nThe read is paired, is the second read in the pair, and it is unmapped.\n\n\n137 (= 1 + 8 + 128)\nThe read is paired, is the second read in the pair, and it is mapped while its mate is not.\n\n\n141 (= 1 + 4 + 8 + 128)\nThe read is paired, is the second read in the pair, but both are unmapped.\n\n\n147 (= 1 + 2 + 16 + 128)\nThe read is paired, mapped in a proper pair, is the second read in the pair, and mapped to the reverse strand.\n\n\n163 (= 1 + 2 + 32 + 128)\nThe read is paired, mapped in a proper pair, is the second read in the pair, and its mate is mapped to the reverse strand.\n\n\n\nA useful website for quickly translating the FLAG integers into plain English explanations like the ones shown above is: https://broadinstitute.github.io/picard/explain-flags.html\n\n\n\nCIGAR stands for Concise Idiosyncratic Gapped Alignment Report. This sixth field of a SAM file contains a so-called CIGAR string indicating which operations were necessary to map the read to the reference sequence at that particular locus.\nThe following operations are defined in CIGAR format (also see figure below):\n\nM - Alignment (can be a sequence match or mismatch!)\nI - Insertion in the read compared to the reference\nD - Deletion in the read compared to the reference\nN - Skipped region from the reference. For mRNA-to-genome alignments, an N operation represents an intron. For other types of alignments, the interpretation of N is not defined.\nS - Soft clipping (clipped sequences are present in read); S may only have H operations between them and the ends of the string\nH - Hard clipping (clipped sequences are NOT present in the alignment record); can only be present as the first and/or last operation\nP - Padding (silent deletion from padded reference)\n= - Sequence match (not widely used)\nX - Sequence mismatch (not widely used)\n\nThe sum of lengths of the M, I, S, =, X operations must equal the length of the read. Here are some examples:\n\n\n\n\n\n\nFrom tutorial by Friederike Dündar, Luce Skrabanek, and Paul Zumbo.\n\n\n\n\n\n\nFollowing the eleven mandatory SAM file fields, the optional fields are presented as key-value pairs in the format of &lt;TAG&gt;:&lt;TYPE&gt;:&lt;VALUE&gt;, where TYPE is one of:\n\nA - Character\ni - Integer\nf - Float number\nZ - String\nH - Hex string\n\nThe information stored in these optional fields will vary widely depending on the mapper and new tags can be added freely. In addition, reads within the same SAM file may have different numbers of optional fields, depending on the program that generated the SAM file. Commonly used optional tags include:\n\nAS:i - Alignment score\nBC:Z - Barcode sequence\nHI:i - Match is i-th hit to the read\nNH:i - Number of reported alignments for the query sequence\nNM:i - Edit distance of the query to the reference\nMD:Z - String that contains the exact positions of mismatches (should complement the CIGAR string)\nRG:Z - Read group (should match the entry after ID if @RG is present in the header.\n\nThus, for example, we can use the NM:i:0 tag to select only those reads which map perfectly to the reference(i.e., have no mismatches). While the optional fields listed above are fairly standardized, tags that begin with X, Y, and Z are reserved for particularly free usage and will never be part of the official SAM file format specifications. XS, for example, is used by TopHat (an RNA-seq analysis tool we will discuss later) to encode the strand information (e.g., XS:A:+) while Bowtie2 and BWA use XS:i: for reads with multiple alignments to store the alignment score for the next-best-scoring alignment (e.g., XS:i:30).\n\n\n\nOne of the key features of SAM/BAM format is the ability to label individual reads with readgroup tags. This allows pooling results of multiple experiments into a single BAM dataset. This significantly simplifies downstream logistics: instead of dealing with multiple datasets one can handle just one. Many downstream analysis tools such as variant callers are designed to recognize readgroup data and output results on per-readgroup basis.\nOne of the best descriptions of BAM readgroups is on GATK support site. We have gratefully stolen two tables describing the most important readgroup tags - ID, SM, LB, and PL - from GATK forum and provide them here:\n\n\n\nRead groups.\n\n\nGATK forum also provides the following example:\n\n\n\nRead group example.\n\n\n\n\n\nWe support four major toolsets for processing of SAM/BAM datasets:\n\nDeepTools - a suite of user-friendly tools for the visualization, quality control and normalization of data from deep-sequencing DNA sequencing experiments.\nSAMtools - various utilities for manipulating alignments in the SAM/BAM format, including sorting, merging, indexing and generating alignments in a per-position format.\nBEDtools - a toolkit originally written for BED format was expanded for analysis of BAM and VCF datasets.\nPicard - a set of Java tools for manipulating high-throughput sequencing data (HTS) data and formats.\n\n\n\n\n\n\n\nPreparation of sequencing libraries (at least at the time of writing) for technologies such as Illumina (used in this example) involves PCR amplification. It is required to generate sufficient number of sequencing templates so that a reliable detection can be performed by base callers. Yet PCR has its biases, which are especially profound in cases of multitemplate PCR used for construction of sequencing libraries (Kanagawa et al. 2003).\n\n\n\n\n\n\nAnalyzing molecules aligning with the same outer coordinates, a mapping quality of at least 30 and a length of at least 30nt, resulted in an average coverage of 12.9 per PCR duplicate and an empirical coverage distribution similar to an exponential/power law distribution (left upper panel). This indicates that many molecules are only observed for deeper sequencing while other molecules are available at higher frequencies. Analyzing length (left middle panel) and GC content (left lower panel) patterns as well as the combination (right panel) shows higher PCR duplicate counts for a GC content between 30% to 70% as well as for shorter molecules compared to longer molecules. This effect may be due to an amplification bias from the polymerase or the cluster generation process necessary for Illumina sequencing. From Ph.D. dissertation of Martin Kircher).\n\n\n\nDuplicates can be identified based on their outer alignment coordinates or using sequence-based clustering. One of the common ways for identification of duplicate reads is the MarkDuplicates utility from Picard package. It is designed to identify both PCR and optical duplicates:\nDuplicates are identified as read pairs having identical 5’ positions (coordinate and strand) for both reads in a mate pair (and optionally, matching unique molecular identifier reads; see BARCODE_TAG option). Optical, or more broadly Sequencing, duplicates are duplicates that appear clustered together spatially during sequencing and can arise from optical/imagine-processing artifacts or from bio-chemical processes during clonal amplification and sequencing; they are identified using the READ_NAME_REGEX and the OPTICAL_DUPLICATE_PIXEL_DISTANCE options. The tool’s main output is a new SAM or BAM file in which duplicates have been identified in the SAM flags field, or optionally removed (see REMOVE_DUPLICATE and REMOVE_SEQUENCING_DUPLICATES), and optionally marked with a duplicate type in the ‘DT’ optional attribute. In addition, it also outputs a metrics file containing the numbers of READ_PAIRS_EXAMINED, UNMAPPED_READS, UNPAIRED_READS, UNPAIRED_READ DUPLICATES, READ_PAIR_DUPLICATES, and READ_PAIR_OPTICAL_DUPLICATES. Usage example: java -jar picard.jar MarkDuplicates I=input.bam   O=marked_duplicates.bam M=marked_dup_metrics.txt.`\n\n\n\nHowever, one has to be careful when removing duplicates in cases when the sequencing targets are small (e.g., sequencing of bacterial, viral, or organellar genomes as well as amplicons). This is because when sequencing target is small reads will have the same coordinates by chance and not because of PCR amplification issues. The figure below illustrates the fine balance between estimates allele frequency, coverage, and variation in insert size:\n\n\n\n\n\n\nThe Variant Allele Frequency (VAF) bias determined by coverage and insert size variance. Reads are paired-end and read length is 76. The insert size distribution is modeled as a Gaussian distribution with mean at 200 and standard deviation shown on the x-axis. The true VAF is 0.05. The darkness at each position indicates the magnitude of the bias in the VAF. (From Zhou et al. 2013)."
  },
  {
    "objectID": "ngs.html#fastq-manipulation-and-quality-control",
    "href": "ngs.html#fastq-manipulation-and-quality-control",
    "title": "ngs logistics",
    "section": "",
    "text": "FASTQ is not a very well defined format. In the beginning various manufacturers of sequencing instruments were free to interpret FASTQ as they saw fit, resulting in a multitude of FASTQ flavors. This variation stemmed primarily from different ways of encoding quality values as described on the Wikipedia article for FASTQ (below you will find an explanation of quality scores and their meaning). Today, the FASTQ Sanger version of the format is considered to be the standard form of FASTQ. Galaxy is using FASTQ Sanger as the only legitimate input for downstream processing tools and provides a number of utilities for converting FASTQ files into this form (see FASTQ Quality Control section of Galaxy tools).\nThe FASTQ format looks like this:\n@M02286:19:000000000-AA549:1:1101:12677:1273 1:N:0:23\nCCTACGGGTGGCAGCAGTGAGGAATATTGGTCAATGGACGGAAGTCTGAACCAGCCAAGTAGCGTGCAG\n+\nABC8C,:@F:CE8,B-,C,-6-9-C,CE9-CC--C-&lt;-C++,,+;CE&lt;,,CD,CEFC,@E9&lt;FCFCF?9\n@M02286:19:000000000-AA549:1:1101:15048:1299 1:N:0:23\nCCTACGGGTGGCTGCAGTGAGGAATATTGGACAATGGTCGGAAGACTGATCCAGCCATGCCGCGTGCAG\n+\nABC@CC77CFCEG;F9&lt;F89&lt;9--C,CE,--C-6C-,CE:++7:,CF&lt;,CEF,CFGGD8FFCFCFEGCF\n@M02286:19:000000000-AA549:1:1101:11116:1322 1:N:0:23\nCCTACGGGAGGCAGCAGTAGGGAATCTTCGGCAATGGACGGAAGTCTGACCGAGCAACGCCGCGTGAGT\n+\nAAC&lt;CCF+@@&gt;CC,C9,F9C9@9-CFFFE@7@:+CC8-C@:7,@EFE,6CF:+8F7EFEEF@EGGGEEE\nEach sequencing read is represented by four lines:\n\n@ followed by read ID and optional information about sequencing run\nsequenced bases\n+ (optionally followed by the read ID and some additional info)\nquality scores for each base of the sequence encoded as ASCII symbols"
  },
  {
    "objectID": "ngs.html#paired-end-data",
    "href": "ngs.html#paired-end-data",
    "title": "ngs logistics",
    "section": "",
    "text": "It is common to prepare pair-end and mate-pair sequencing libraries. This is highly beneficial for a number of applications discussed in subsequent topics. For now let’s just briefly discuss what these are and how they manifest themselves in FASTQ form.\n\n\n\n\n\n\nPaired-end and mate-pair reads. In paired end sequencing (left) the actual ends of rather short DNA molecules (less than 1kb) are determined, while for mate pair sequencing (right) the ends of long molecules are joined and prepared in special sequencing libraries. In these mate pair protocols, the ends of long, size-selected molecules are connected with an internal adapter sequence (i.e. linker, yellow) in a circularization reaction. The circular molecule is then processed using restriction enzymes or fragmentation. Fragments are enriched for the linker and outer library adapters are added around the two combined molecule ends. The internal adapter can then be used as a second priming site for an additional sequencing reaction in the same orientation or sequencing can be performed from the second adapter, from the reverse strand. (From “Understanding and improving high-throughput sequencing data production and analysis”, Ph.D. dissertation by Martin Kircher)\n\n\n\nThus in both cases (paired-end and mate-pair) a single physical piece of DNA (or RNA in the case of RNA-seq) is sequenced from two ends and so generates two reads. These can be represented as separate files (two FASTQ files with first and second reads) or a single file were reads for each end are interleaved. Here are examples:\n\n\nFile 1\n @M02286:19:000000000-AA549:1:1101:12677:1273 1:N:0:23\n CCTACGGGTGGCAGCAGTGAGGAATATTGGTCAATGGACGGAAGTCT\n +\n ABC8C,:@F:CE8,B-,C,-6-9-C,CE9-CC--C-&lt;-C++,,+;CE\n @M02286:19:000000000-AA549:1:1101:15048:1299 1:N:0:23\n CCTACGGGTGGCTGCAGTGAGGAATATTGGACAATGGTCGGAAGACT\n +\n ABC@CC77CFCEG;F9&lt;F89&lt;9--C,CE,--C-6C-,CE:++7:,CF\nFile 2\n@M02286:19:000000000-AA549:1:1101:12677:1273 2:N:0:23\nCACTACCCGTGTATCTAATCCTGTTTGATACCCGCACCTTCGAGCTTA\n+\n--8A,CCE+,,;,&lt;CC,,&lt;CE@,CFD,,C,CFF+@+@CCEF,,,B+C,\n@M02286:19:000000000-AA549:1:1101:15048:1299 2:N:0:23\nCACTACCGGGGTATCTAATCCTGTTCGCTCCCCACGCTTTCGTCCATC\n+\n-6AC,EE@::CF7CFF&lt;&lt;FFGGDFFF,@FGGGG?F7FEGGGDEFF&gt;FF\n\nComment: Read order is important\nNote that read IDs are identical in two files and they are listed in the same order. In some cases read IDs in the first and second file may be appended with /1 and /2 tags, respectively.\n\n\n\n\n@1/1\nAGGGATGTGTTAGGGTTAGGGTTAGGGTTAGGGTTAGGGTTAGGGTTA\n+\nEGGEGGGDFGEEEAEECGDEGGFEEGEFGBEEDDECFEFDD@CDD&lt;ED\n@1/2\nCCTAACCCTAACCCTAACCCTAACCCTAACCCTAACCCTAACCCTAAC\n+\nGHHHDFDFGFGEGFBGEGGEGEGGGHGFGHFHFHHHHHHHEF?EFEFF\n@2/1\nAGGGATGTGTTAGGGTTAGGGTTAGGGTTAGGGTTAGGGTTAGGGTTA\n+\nHHHHHHEGFHEEFEEHEEHHGGEGGGGEFGFGGGGHHHHFBEEEEEFG\n@2/2\nCCTAACCCTAACCCTAACCCTAACCCTAACCCTAACCCTAACCCTAAC\n+\nHHHHHHHHHHHHHGHHHHHHGHHHHHHHHHHHFHHHFHHHHHHHHHHH\nHere the first and the second reads are identified with /1 and /2 tags.\n\nComment: FASTQ format is a loose standard\nFASTQ format is not strictly defined and its variations will always cause headache for you. See this page for more information."
  },
  {
    "objectID": "ngs.html#what-are-base-qualities",
    "href": "ngs.html#what-are-base-qualities",
    "title": "ngs logistics",
    "section": "",
    "text": "As we’ve seen above, FASTQ datasets contain two types of information:\n\nsequence of the read\nbase qualities for each nucleotide in the read.\n\nThe base qualities allow us to judge how trustworthy each base in a sequencing read is. The following excerpt from an excellent tutorial by Friederike Dündar, Luce Skrabanek, Paul Zumbo explains what base qualities are:\n\nComment: From “Introduction to differential gene expression analysis using RNA-seq”\nIllumina sequencing is based on identifying the individual nucleotides by the fluorescence signal emitted upon their incorporation into the growing sequencing read. Once the fluorescence intensities are extracted and translated into the four letter code. The deduction of nucleotide sequences from the images acquired during sequencing is commonly referred to as base calling. Due to the imperfect nature of the sequencing process and limitations of the optical instruments, base calling will always have inherent uncertainty. This is the reason why FASTQ files store the DNA sequence of each read together with a position-specific quality score that represents the error probability, i.e., how likely it is that an individual base call may be incorrect. The score is called Phred score, Q\n\n, which is proportional to the probability p that a base call is incorrect, where Q=−10lg(p). For example, a Phred score of 10 corresponds to one error in every ten base calls (Q=−10lg(0.1)\n\n), or 90% accuracy; a Phred score of 20 corresponds to one error in every 100 base calls, or 99% accuracy. A higher Phred score thus reflects higher confidence in the reported base. To assign each base a unique score identifier (instead of numbers of varying character length), Phred scores are typically represented as ASCII characters. At http://ascii-code.com/ you can see which characters are assigned to what number. For raw reads, the range of scores will depend on the sequencing technology and the base caller used (Illumina, for example, used a tool called Bustard, or, more recently, RTA). Unfortunately, Illumina has been anything but consistent in how they calculated and ASCII-encoded the Phred score (see below)! In addition, Illumina now allows Phred scores for base calls with as high as 45, while 41 used to be the maximum score until the HiSeq X. This may cause issues with downstream sapplications that expect an upper limit of 41.\n\n\n\n\nIllumina quality score.\n\n\nBase call quality scores are represented with the Phred range. Different Illumina (formerly Solexa) versions used different scores and ASCII offsets. Starting with Illumina format 1.8, the score now represents the standard Sanger/Phred format that is also used by other sequencing platforms and the sequencing archives.\n\n\n\n\n\n\nThe ASCII interpretation and ranges of the different Phred score notations used by Illumina and the original Sanger interpretation. Although the Sanger format allows a theoretical score of 93, raw sequencing reads typically do not exceed a Phred score of 60. In fact, most Illumina-based sequencing will result in maximum scores of 41 to 45 (image from Wikipedia)"
  },
  {
    "objectID": "ngs.html#assessing-data-quality",
    "href": "ngs.html#assessing-data-quality",
    "title": "ngs logistics",
    "section": "",
    "text": "One of the first steps in the analysis of NGS data is seeing how good the data actually is. FastqQC is a fantastic tool allowing you to assess the quality of FASTQ datasets (and deciding whether to blame or not to blame whoever has done sequencing for you).\n\n\n\n\n\n\n\nA. Excellent quality\nB. Hmmm…OK\n\n\n\nHere you can see FastQC base quality reports (the tools gives you many other types of data) for two datasets: A and B. The A dataset has long reads (250 bp) and very good quality profile with no qualities dropping below phred score of 30. The B dataset is significantly worse with ends of the reads dipping below phred score of 20. The B reads may need to be trimmed for further processing."
  },
  {
    "objectID": "ngs.html#mapping-your-data",
    "href": "ngs.html#mapping-your-data",
    "title": "ngs logistics",
    "section": "",
    "text": "Mapping of NGS reads against reference sequences is one of the key steps of the analysis. Now it is time to see how this is done in practice. Below is a list of key publications highlighting mainstream mapping tools:\n\n2009 Bowtie 1 - Langmead et al.\n2012 Bowtie 2 - Langmead and Salzberg\n2009 BWA - Li and Durbin\n2010 BWA - Li and Durbin\n2013 BWA-MEM - Li\n\n\n\nMappers usually compare reads against a reference sequence that has been transformed into a highly accessible data structure called genome index. Such indexes should be generated before mapping begins. Galaxy instances typically store indexes for a number of publicly available genome builds.\n\n\n\n\n\n\nMapping against a pre-computed index in Galaxy.\n\n\n\nFor example, the image above shows indexes for hg38 version of the human genome. You can see that there are actually three choices: (1) hg38, (2) hg38 canonical and (3) hg38 canonical female. The hg38 contains all chromosomes as well as all unplaced contigs. The hg38 canonical does not contain unplaced sequences and only consists of chromosomes 1 through 22, X, Y, and mitochondria. The hg38 canonical female contains everything from the canonical set with the exception of chromosome Y.\n\n\n\nIf Galaxy does not have a genome you need to map against, you can upload your genome sequence as a FASTA file and use it in the mapper directly as shown below (Load reference genome is set to History).\n\n\n\n\n\n\nMapping against a pre-computed index in Galaxy\n\n\n\nIn this case Galaxy will first create an index from this dataset and then run mapping analysis against it."
  },
  {
    "objectID": "ngs.html#sambam-datasets",
    "href": "ngs.html#sambam-datasets",
    "title": "ngs logistics",
    "section": "",
    "text": "The SAM/BAM format is an accepted standard for storing aligned reads (it can also store unaligned reads and some mappers such as BWA are accepting unaligned BAM as input). The binary form of the format (BAM) is compact and can be rapidly searched (if indexed). In Galaxy BAM datasets are always indexed (accompanies by a .bai file) and sorted in coordinate order. In the following duscussion I once again rely on tutorial by Friederike Dündar, Luce Skrabanek, and Paul Zumbo.\nThe Sequence Alignment/Map (SAM) format is, in fact, a generic nucleotide alignment format that describes the alignment of sequencing reads (or query sequences) to a reference. The human readable, TABdelimited SAM files can be compressed into the Binary Alignment/Map format. These BAM files are bigger than simply gzipped SAM files, because they have been optimized for fast random access rather than size reduction. Position-sorted BAM files can be indexed so that all reads aligning to a locus can be efficiently retrieved without loading the entire file into memory.\nAs shown below, SAM files typically contain a short header section and a very long alignment section where each row represents a single read alignment. The following sections will explain the SAM format in a bit more detail. For the most comprehensive and updated information go to https://github.com/samtools/hts-specs.\n\n\n\n\n\n\nSchematic representation of a SAM file. Each line of the optional header section starts with “@”, followed by the appropriate abbreviation (e.g., SQ for sequence dictionary which lists all chromosomes names (SN) and their lengths (LN)). The vast majority of lines within a SAM file typically correspond to read alignments where each read is described by the 11 mandatory entries (black font) and a variable number of optional fields (grey font). From tutorial by Friederike Dündar, Luce Skrabanek, and Paul Zumbo.\n\n\n\n\n\nThe header section includes information about how the alignment was generated and stored. All lines in the header section are tab-delimited and begin with the “@” character, followed by tag:value pairs, where tag is a two-letter string that defines the content and the format of value. For example, the “@SQ” line in the header section contains the information about the names and lengths of the *reference sequences to which the reads were aligned. For a hypothetical organism with three chromosomes of length 1,000 bp, the SAM header should contain the following three lines:\n@SQ SN:chr1 LN:1000\n@SQ SN:chr2 LN:1000\n@SQ SN:chr3 LN:1000\n\n\n\nThe optional header section is followed by the alignment section where each line corresponds to one sequenced read. For each read, there are 11 mandatory fields that always appear in the same order:\n&lt;QNAME&gt; &lt;FLAG&gt; &lt;RNAME&gt; &lt;POS&gt; &lt;MAPQ&gt; &lt;CIGAR&gt; &lt;MRNM&gt; &lt;MPOS&gt; &lt;ISIZE&gt; &lt;SEQ&gt; &lt;QUAL&gt;\nIf the corresponding information is unavailable or irrelevant, field values can be ‘0’ or ’*’ (depending on the field, see below), but they cannot be missing! After the 11 mandatory fields, a variable number of optional fields can be present. Here’s an example of one single line of a real-life SAM file (you may need to scroll sideways):\nERR458493 .552967 16 chrI 140 255 12 M61232N37M2S * 0 0 CCACTCGTTCACCAGGGCCGGCGGGCTGATCACTTTATCGTGCATCTTGGC BB?HHJJIGHHJIGIIJJIJGIJIJJIIIGHBJJJJJJHHHHFFDDDA1+B NH:i:1 HI:i:1 AS:i:41 nM:i:2\nThe following table explains the format and content of each field. The FLAG, CIGAR, and the optional fields (marked in blue) are explained in more detail below. The number of optional fields can vary widely between different SAM files and even between reads within in the same file. The field types marked in blue are explained in more detail in the main text below.\n\n\n\nSAM fields.\n\n\n\n\n\nThe FLAG field encodes various pieces of information about the individual read, which is particularly important for PE reads. It contains an integer that is generated from a sequence of bits (0, 1). This way, answers to multiple binary (Yes/No) questions can be compactly stored as a series of bits, where each of the single bits can be addressed and assigned separately.\nThe following table gives an overview of the different properties that can be encoded in the FLAG field. The developers of the SAM format and samtools tend to use the hexadecimal encoding as a means to refer to the different bits in their documentation. The value of the FLAG field in a given SAM file, however, will always be the decimal representation of the sum of the underlying binary values (as shown in Table below, row 2).\n\n\n\n\n\n\nThe FLAG field of SAM files stores information about the respective read alignment in one single decimal number. The decimal number is the sum of all the answers to the Yes/No questions associated with each binary bit. The hexadecimal representation is used to refer to the individual bits (questions). A bit is set if the corresponding state is true. For example, if a read is paired, 0x1 will be set, returning the decimal value of 1. Therefore, all FLAG values associated with paired reads must be uneven decimal numbers. Conversely, if the 0x1 bit is unset (= read is not paired), no assumptions can be made about 0x2, 0x8, 0x20, 0x40 and 0x80 because they refer to paired reads. From tutorial by Friederike Dündar, Luce Skrabanek, and Paul Zumbo\n\n\n\nIn a run with single reads, the flags you most commonly see are:\n\n0: This read has been mapped to the forward strand. (None of the bit-wise flags have been set.)\n4: The read is unmapped (0x4 is set).\n16: The read is mapped to the reverse strand (0x10 is set)\n\n(0x100, 0x200 and 0x400 are not used by most aligners/mappers, but could, in principle be set for single reads.) Some common FLAG values that you may see in a PE experiment include:\n\n\n\n\n\n\n\n69 (= 1 + 4 + 64)\nThe read is paired, is the first read in the pair, and is unmapped.\n\n\n77 (= 1 + 4 + 8 + 64)\nThe read is paired, is the first read in the pair, both are unmapped.\n\n\n83 (= 1 + 2 + 16 + 64)\nThe read is paired, mapped in a proper pair, is the first read in the pair, and it is mapped to the reverse strand.\n\n\n99 (= 1 + 2 + 32 + 64)\nThe read is paired, mapped in a proper pair, is the first read in the pair, and its mate is mapped to the reverse strand.\n\n\n133 (= 1 + 4 + 128)\nThe read is paired, is the second read in the pair, and it is unmapped.\n\n\n137 (= 1 + 8 + 128)\nThe read is paired, is the second read in the pair, and it is mapped while its mate is not.\n\n\n141 (= 1 + 4 + 8 + 128)\nThe read is paired, is the second read in the pair, but both are unmapped.\n\n\n147 (= 1 + 2 + 16 + 128)\nThe read is paired, mapped in a proper pair, is the second read in the pair, and mapped to the reverse strand.\n\n\n163 (= 1 + 2 + 32 + 128)\nThe read is paired, mapped in a proper pair, is the second read in the pair, and its mate is mapped to the reverse strand.\n\n\n\nA useful website for quickly translating the FLAG integers into plain English explanations like the ones shown above is: https://broadinstitute.github.io/picard/explain-flags.html\n\n\n\nCIGAR stands for Concise Idiosyncratic Gapped Alignment Report. This sixth field of a SAM file contains a so-called CIGAR string indicating which operations were necessary to map the read to the reference sequence at that particular locus.\nThe following operations are defined in CIGAR format (also see figure below):\n\nM - Alignment (can be a sequence match or mismatch!)\nI - Insertion in the read compared to the reference\nD - Deletion in the read compared to the reference\nN - Skipped region from the reference. For mRNA-to-genome alignments, an N operation represents an intron. For other types of alignments, the interpretation of N is not defined.\nS - Soft clipping (clipped sequences are present in read); S may only have H operations between them and the ends of the string\nH - Hard clipping (clipped sequences are NOT present in the alignment record); can only be present as the first and/or last operation\nP - Padding (silent deletion from padded reference)\n= - Sequence match (not widely used)\nX - Sequence mismatch (not widely used)\n\nThe sum of lengths of the M, I, S, =, X operations must equal the length of the read. Here are some examples:\n\n\n\n\n\n\nFrom tutorial by Friederike Dündar, Luce Skrabanek, and Paul Zumbo.\n\n\n\n\n\n\nFollowing the eleven mandatory SAM file fields, the optional fields are presented as key-value pairs in the format of &lt;TAG&gt;:&lt;TYPE&gt;:&lt;VALUE&gt;, where TYPE is one of:\n\nA - Character\ni - Integer\nf - Float number\nZ - String\nH - Hex string\n\nThe information stored in these optional fields will vary widely depending on the mapper and new tags can be added freely. In addition, reads within the same SAM file may have different numbers of optional fields, depending on the program that generated the SAM file. Commonly used optional tags include:\n\nAS:i - Alignment score\nBC:Z - Barcode sequence\nHI:i - Match is i-th hit to the read\nNH:i - Number of reported alignments for the query sequence\nNM:i - Edit distance of the query to the reference\nMD:Z - String that contains the exact positions of mismatches (should complement the CIGAR string)\nRG:Z - Read group (should match the entry after ID if @RG is present in the header.\n\nThus, for example, we can use the NM:i:0 tag to select only those reads which map perfectly to the reference(i.e., have no mismatches). While the optional fields listed above are fairly standardized, tags that begin with X, Y, and Z are reserved for particularly free usage and will never be part of the official SAM file format specifications. XS, for example, is used by TopHat (an RNA-seq analysis tool we will discuss later) to encode the strand information (e.g., XS:A:+) while Bowtie2 and BWA use XS:i: for reads with multiple alignments to store the alignment score for the next-best-scoring alignment (e.g., XS:i:30).\n\n\n\nOne of the key features of SAM/BAM format is the ability to label individual reads with readgroup tags. This allows pooling results of multiple experiments into a single BAM dataset. This significantly simplifies downstream logistics: instead of dealing with multiple datasets one can handle just one. Many downstream analysis tools such as variant callers are designed to recognize readgroup data and output results on per-readgroup basis.\nOne of the best descriptions of BAM readgroups is on GATK support site. We have gratefully stolen two tables describing the most important readgroup tags - ID, SM, LB, and PL - from GATK forum and provide them here:\n\n\n\nRead groups.\n\n\nGATK forum also provides the following example:\n\n\n\nRead group example.\n\n\n\n\n\nWe support four major toolsets for processing of SAM/BAM datasets:\n\nDeepTools - a suite of user-friendly tools for the visualization, quality control and normalization of data from deep-sequencing DNA sequencing experiments.\nSAMtools - various utilities for manipulating alignments in the SAM/BAM format, including sorting, merging, indexing and generating alignments in a per-position format.\nBEDtools - a toolkit originally written for BED format was expanded for analysis of BAM and VCF datasets.\nPicard - a set of Java tools for manipulating high-throughput sequencing data (HTS) data and formats."
  },
  {
    "objectID": "ngs.html#the-challenge-of-read-duplicates",
    "href": "ngs.html#the-challenge-of-read-duplicates",
    "title": "ngs logistics",
    "section": "",
    "text": "Preparation of sequencing libraries (at least at the time of writing) for technologies such as Illumina (used in this example) involves PCR amplification. It is required to generate sufficient number of sequencing templates so that a reliable detection can be performed by base callers. Yet PCR has its biases, which are especially profound in cases of multitemplate PCR used for construction of sequencing libraries (Kanagawa et al. 2003).\n\n\n\n\n\n\nAnalyzing molecules aligning with the same outer coordinates, a mapping quality of at least 30 and a length of at least 30nt, resulted in an average coverage of 12.9 per PCR duplicate and an empirical coverage distribution similar to an exponential/power law distribution (left upper panel). This indicates that many molecules are only observed for deeper sequencing while other molecules are available at higher frequencies. Analyzing length (left middle panel) and GC content (left lower panel) patterns as well as the combination (right panel) shows higher PCR duplicate counts for a GC content between 30% to 70% as well as for shorter molecules compared to longer molecules. This effect may be due to an amplification bias from the polymerase or the cluster generation process necessary for Illumina sequencing. From Ph.D. dissertation of Martin Kircher).\n\n\n\nDuplicates can be identified based on their outer alignment coordinates or using sequence-based clustering. One of the common ways for identification of duplicate reads is the MarkDuplicates utility from Picard package. It is designed to identify both PCR and optical duplicates:\nDuplicates are identified as read pairs having identical 5’ positions (coordinate and strand) for both reads in a mate pair (and optionally, matching unique molecular identifier reads; see BARCODE_TAG option). Optical, or more broadly Sequencing, duplicates are duplicates that appear clustered together spatially during sequencing and can arise from optical/imagine-processing artifacts or from bio-chemical processes during clonal amplification and sequencing; they are identified using the READ_NAME_REGEX and the OPTICAL_DUPLICATE_PIXEL_DISTANCE options. The tool’s main output is a new SAM or BAM file in which duplicates have been identified in the SAM flags field, or optionally removed (see REMOVE_DUPLICATE and REMOVE_SEQUENCING_DUPLICATES), and optionally marked with a duplicate type in the ‘DT’ optional attribute. In addition, it also outputs a metrics file containing the numbers of READ_PAIRS_EXAMINED, UNMAPPED_READS, UNPAIRED_READS, UNPAIRED_READ DUPLICATES, READ_PAIR_DUPLICATES, and READ_PAIR_OPTICAL_DUPLICATES. Usage example: java -jar picard.jar MarkDuplicates I=input.bam   O=marked_duplicates.bam M=marked_dup_metrics.txt.`\n\n\n\nHowever, one has to be careful when removing duplicates in cases when the sequencing targets are small (e.g., sequencing of bacterial, viral, or organellar genomes as well as amplicons). This is because when sequencing target is small reads will have the same coordinates by chance and not because of PCR amplification issues. The figure below illustrates the fine balance between estimates allele frequency, coverage, and variation in insert size:\n\n\n\n\n\n\nThe Variant Allele Frequency (VAF) bias determined by coverage and insert size variance. Reads are paired-end and read length is 76. The insert size distribution is modeled as a Gaussian distribution with mean at 200 and standard deviation shown on the x-axis. The true VAF is 0.05. The darkness at each position indicates the magnitude of the bias in the VAF. (From Zhou et al. 2013)."
  },
  {
    "objectID": "ngs.html#from-your-computer",
    "href": "ngs.html#from-your-computer",
    "title": "ngs logistics",
    "section": "From your computer",
    "text": "From your computer\nThis works well for small files because web browser do not like lengthy file transfers:\n\n\nVideo: Uploading data from your computer"
  },
  {
    "objectID": "ngs.html#using-ftp",
    "href": "ngs.html#using-ftp",
    "title": "ngs logistics",
    "section": "Using FTP",
    "text": "Using FTP\nFTP (file transfer protocol) allows transferring large collection of files:\n\n\nVideo: Uploading with FTP"
  },
  {
    "objectID": "ngs.html#from-ncbi-short-read-archive",
    "href": "ngs.html#from-ncbi-short-read-archive",
    "title": "ngs logistics",
    "section": "From NCBI short read archive",
    "text": "From NCBI short read archive\nFinally, datasets can be uploaded directly from NCBI’s short read archive:\n\n\nVideo: Uploading from SRA\n\nComment\nWe will use this last approach, getting data from NCBI SRA, in this tutorial."
  },
  {
    "objectID": "ngs.html#find-necessary-data-in-sra",
    "href": "ngs.html#find-necessary-data-in-sra",
    "title": "ngs logistics",
    "section": "Find necessary data in SRA",
    "text": "Find necessary data in SRA\nFirst we need to find a good dataset to play with. The Sequence Read Archive (SRA) is the primary archive of unassembled reads operated by the US National Institutes of Health (NIH). SRA is a great place to get the sequencing data that underlie publications and studies. Let’s do that:\n\nHands-on: Get Metadata from NCBI SRA\n\nGo to NCBI’s SRA page by pointing your browser to https://www.ncbi.nlm.nih.gov/sra\nIn the search box enter SARS-CoV-2 Patient Sequencing From Partners / MGH:  (Alternatively, you simply click on this link directly to the data)\nThe web page will show a large number of SRA datasets (at the time of writing there were 2,223). This is data from a study describing analysis of SARS-CoV-2 in Boston area.\nDownload metadata describing these datasets by:\n\nclicking on Send to: dropdown\nSelecting File\nChanging Format to RunInfo\nClicking Create file Here is how it should look like: \n\nThis would create a rather large SraRunInfo.csv file in your Downloads folder.\n\n​ Link to here | FAQs | Gitter Chat | Help Forum\n\nNow that we have downloaded this file we can go to a Galaxy instance and start processing it.\n\nComment\nNote that the file we just downloaded is not sequencing data itself. Rather, it is metadata describing properties of sequencing reads. We will filter this list down to just a few accessions that will be used in the remainder of this tutorial."
  },
  {
    "objectID": "ngs.html#process-and-filter-sraruninfo.csv-file-in-galaxy",
    "href": "ngs.html#process-and-filter-sraruninfo.csv-file-in-galaxy",
    "title": "ngs logistics",
    "section": "Process and filter SraRunInfo.csv file in Galaxy",
    "text": "Process and filter SraRunInfo.csv file in Galaxy\n\nHands-on: Upload SraRunInfo.csv file into Galaxy\n\nGo to your Galaxy instance of choice such as one of the UseGalaxy.* instances or any other. (This tutorial uses usegalaxy.org).\nClick Upload Data button: \nIn the dialog box that would appear click “Choose local files” button: \nFind and select SraRunInfo.csv file from your computer\nClick Start button\nClose dialog by pressing Close button\nYou can now look at the content of this file by clicking galaxy-eye (eye) icon. You will see that this file contains a lot of information about individual SRA accessions. In this study every accession corresponds to an individual patient whose samples were sequenced.\n\n​ Link to here | FAQs | Gitter Chat | Help Forum\n\nGalaxy can process all 2,000+ datasets, but to make this tutorial bearable we need to selected a smaller subset. In particular our previous experience with this data shows two interesting datasets SRR11954102 and SRR12733957. So, let’s pull them out.\n\nWarning: Beware of Cuts\nThe section below uses Cut tool. There are two cut tools in Galaxy due to historical reasons. This example uses tool with the full name Cut columns from a table (cut). However, the same logic applies to the other tool. It simply has a slightly different interface.\n\n\nHands-on: Creating a subset of data\n\nFind\nSelect lines that match an expression\ntool in\nFilter and Sort\nsection of the tool panel.\n\n\n\n\n\n\n\n\nMake sure the SraRunInfo.csv dataset we just uploaded is listed in the param-file “Select lines from” field of the tool form.\nIn “the pattern” field enter the following expression → SRR12733957|SRR11954102. These are two accession we want to find separated by the pipe symbol |. The | means or: find lines containing SRR12733957 or SRR11954102.\nClick the Run Tool button.\nThis will generate a file containing two lines (well … one line is also used as the header, so it will appear the the file has three lines. It is OK.)\nCut the first column from the file using Advanced Cut ( Galaxy version 1.1.0) tool, which you will find in Text Manipulation section of the tool pane.\nMake sure the dataset produced by the previous step is selected in the “File to cut” field of the tool form.\nChange “Delimited by” to Comma\nIn “List of fields” select Column: 1.\nHit Run Tool This will produce a text file with just two lines:\n\n\n   SRR12733957\n   SRR11954102\n\n​ Link to here | FAQs | Gitter Chat | Help Forum\n\nNow that we have identifiers of datasets we want we need to download the actual sequencing data. You can also watch this video."
  },
  {
    "objectID": "ngs.html#download-sequencing-data",
    "href": "ngs.html#download-sequencing-data",
    "title": "ngs logistics",
    "section": "Download sequencing data",
    "text": "Download sequencing data\n\nHands-on: Get data from SRA\n\nRun\nFaster Download and Extract Reads in FASTQ ( Galaxy version 2.10.9+galaxy0)\nwith the following parameters:\n\n\n“select input type”\n\n\n\n\nList of SRA accession, one per line\n\nThe parameter param-file “sra accession list” should point the output of the tool “Advanced Cut” from the previous step.\n\nClick the Run Tool button. This will run the tool, which retrieves the sequence read datasets for the runs that were listed in the SRA dataset. It may take some time. So this may be a good time to take a break.\n\nSeveral entries are created in your history panel when you submit this job:\n\nPair-end data (fasterq-dump): Contains Paired-end datasets (if available)\nSingle-end data (fasterq-dump) Contains Single-end datasets (if available)\nOther data (fasterq-dump) Contains Unpaired datasets (if available)\nfasterq-dump log Contains Information about the tool execution\n\n\n​ Link to here | FAQs | Gitter Chat | Help Forum\n\nThe first three items are actually collections of datasets. Collections in Galaxy are logical groupings of datasets that reflect the semantic relationships between them in the experiment / analysis. In this case the tool creates separate collections for paired-end reads, single reads, and other. See the Collections tutorial and watch videos (with names beginning with “Dataset Collections”) for more information.\nExplore the collections by first clicking on the collection name in the history panel. This takes you inside the collection and shows you the datasets in it. You can then navigate back to the outer level of your history.\nOnce fasterq finishes transferring data (all boxes are green / done), we are ready to analyze it."
  },
  {
    "objectID": "ngs.html#now-what",
    "href": "ngs.html#now-what",
    "title": "ngs logistics",
    "section": "Now what?",
    "text": "Now what?\nYou can now analyze the retrieved data using any sequence analysis tools and workflows in Galaxy. SRA holds backing data for every imaginable type of *-seq experiment.\nIf you ran this tutorial, but retrieved datasets that you were interested in, then see the rest of the GTN library for ideas on how to analyze in Galaxy.\nHowever, if you retrieved the datasets used in this tutorial’s examples above, then you are ready to run the SARS-CoV-2 variant analysis below.\nIn this part of the tutorial we will perform variant calling and basic analysis of the datasets downloaded above. We will start by downloading the Wuhan-Hu-1 SARS-CoV-2 reference sequence, then run adapter trimming, alignment and variant calling.\n\nComment: The usegalaxy.* COVID-19 analysis project\nThis tutorial uses a subset of the data and runs through the Variation Analysis section of covid19.galaxyproject.org. The data for covid19.galaxyproject.org is being updated continuously as new datasets are made public."
  },
  {
    "objectID": "ngs.html#get-the-reference-genome-data",
    "href": "ngs.html#get-the-reference-genome-data",
    "title": "ngs logistics",
    "section": "Get the reference genome data",
    "text": "Get the reference genome data\nThe reference genome data for today is for SARS-CoV-2, “Severe acute respiratory syndrome coronavirus 2 isolate Wuhan-Hu-1, complete genome”, having the accession ID of NC_045512.2.\nThis data is available from directly from GenBank.\n\nHands-on: Get the reference genome data\n\nImport the following file into your history:\n\n\nhttps://ftp.ncbi.nlm.nih.gov/genomes/all/GCF/009/858/895/GCF_009858895.2_ASM985889v3/GCF_009858895.2_ASM985889v3_genomic.fna.gz\n\n\n\n\n\n\n\n\n​ Link to here | FAQs | Gitter Chat | Help Forum"
  },
  {
    "objectID": "ngs-tr.html",
    "href": "ngs-tr.html",
    "title": "Yeni Nesil Veri Tiplerine Giriş",
    "section": "",
    "text": "FASTQ çok iyi tanımlanmamış bir formattır. Başlangıçta, çeşitli sekanslama cihazı üreticileri FASTQ’yu kendi gördükleri şekilde yorumlama özgürlüğüne sahipti, bu da birçok FASTQ çeşidinin ortaya çıkmasına neden oldu. Bu varyasyon öncelikle FASTQ için Wikipedia makalesinde açıklandığı gibi kalite değerlerinin farklı şekillerde kodlanmasından kaynaklanıyordu (kalite skorları ve anlamları hakkında aşağıda açıklama bulacaksınız). Bugün, FASTQ Sanger versiyonu formatın standart formu olarak kabul edilmektedir. Galaxy, downstream işleme araçları için tek meşru girdi olarak FASTQ Sanger’ı kullanmakta ve FASTQ dosyalarını bu forma dönüştürmek için bir dizi araç sunmaktadır (Galaxy araçlarının FASTQ Kalite Kontrolü bölümüne bakınız).\nFASTQ formatı şu şekilde görünür:\n@M02286:19:000000000-AA549:1:1101:12677:1273 1:N:0:23\nCCTACGGGTGGCAGCAGTGAGGAATATTGGTCAATGGACGGAAGTCTGAACCAGCCAAGTAGCGTGCAG\n+\nABC8C,:@F:CE8,B-,C,-6-9-C,CE9-CC--C-&lt;-C++,,+;CE&lt;,,CD,CEFC,@E9&lt;FCFCF?9\n@M02286:19:000000000-AA549:1:1101:15048:1299 1:N:0:23\nCCTACGGGTGGCTGCAGTGAGGAATATTGGACAATGGTCGGAAGACTGATCCAGCCATGCCGCGTGCAG\n+\nABC@CC77CFCEG;F9&lt;F89&lt;9--C,CE,--C-6C-,CE:++7:,CF&lt;,CEF,CFGGD8FFCFCFEGCF\n@M02286:19:000000000-AA549:1:1101:11116:1322 1:N:0:23\nCCTACGGGAGGCAGCAGTAGGGAATCTTCGGCAATGGACGGAAGTCTGACCGAGCAACGCCGCGTGAGT\n+\nAAC&lt;CCF+@@&gt;CC,C9,F9C9@9-CFFFE@7@:+CC8-C@:7,@EFE,6CF:+8F7EFEEF@EGGGEEE\nHer sekanslama okuması dört satırla temsil edilir:\n\nOkuma ID’si ve sekanslama çalışması hakkında isteğe bağlı bilgiler ile başlayan @\nSekanslanmış bazlar\n+ (isteğe bağlı olarak okuma ID’si ve bazı ek bilgilerle birlikte)\nASCII sembolleri olarak kodlanmış sekansın her bazı için kalite skorları\n\n\n\n\nEşlenmiş-uç ve mate-pair sekanslama kütüphaneleri hazırlamak yaygındır. Bu, sonraki konularda tartışılan birçok uygulama için oldukça faydalıdır. Şimdilik bunların ne olduğunu ve FASTQ formunda nasıl göründüklerini kısaca tartışalım.\n\n\n\nGörsel: Eşlenmiş-uç ve mate-pair okumalar\n\n\nEşlenmiş-uç ve mate-pair okumalar. Eşlenmiş uç sekanslama işleminde (sol) oldukça kısa DNA moleküllerinin (1kb’den az) gerçek uçları belirlenirken, mate pair sekanslama için (sağ) uzun moleküllerin uçları birleştirilir ve özel sekanslama kütüphanelerinde hazırlanır. Bu mate pair protokollerinde, uzun, boyut seçimli moleküllerin uçları bir daireselleştirme reaksiyonunda dahili bir adaptör sekansı (yani bağlayıcı, sarı) ile bağlanır. Dairesel molekül daha sonra restriksiyon enzimleri veya fragmentasyon kullanılarak işlenir. Fragmentler bağlayıcı için zenginleştirilir ve dış kütüphane adaptörleri iki birleştirilmiş molekül ucunun etrafına eklenir. Dahili adaptör daha sonra aynı yönde ek bir sekanslama reaksiyonu için ikinci bir başlatma bölgesi olarak kullanılabilir veya sekanslama ikinci adaptörden, ters zincirden gerçekleştirilebilir. (Martin Kircher’ın “Understanding and improving high-throughput sequencing data production and analysis” başlıklı doktora tezinden)\nBu nedenle her iki durumda da (eşlenmiş-uç ve mate-pair) tek bir fiziksel DNA parçası (veya RNA-seq durumunda RNA) iki uçtan sekanslanır ve böylece iki okuma oluşturur. Bunlar ayrı dosyalar (birinci ve ikinci okumalar için iki FASTQ dosyası) veya her uç için okumaların iç içe geçtiği tek bir dosya olarak gösterilebilir. İşte örnekler:\n\n\nDosya 1\n@M02286:19:000000000-AA549:1:1101:12677:1273 1:N:0:23\nCCTACGGGTGGCAGCAGTGAGGAATATTGGTCAATGGACGGAAGTCT\n+\nABC8C,:@F:CE8,B-,C,-6-9-C,CE9-CC--C-&lt;-C++,,+;CE\n@M02286:19:000000000-AA549:1:1101:15048:1299 1:N:0:23\nCCTACGGGTGGCTGCAGTGAGGAATATTGGACAATGGTCGGAAGACT\n+\nABC@CC77CFCEG;F9&lt;F89&lt;9--C,CE,--C-6C-,CE:++7:,CF\nDosya 2\n@M02286:19:000000000-AA549:1:1101:12677:1273 2:N:0:23\nCACTACCCGTGTATCTAATCCTGTTTGATACCCGCACCTTCGAGCTTA\n+\n--8A,CCE+,,;,&lt;CC,,&lt;CE@,CFD,,C,CFF+@+@CCEF,,,B+C,\n@M02286:19:000000000-AA549:1:1101:15048:1299 2:N:0:23\nCACTACCGGGGTATCTAATCCTGTTCGCTCCCCACGCTTTCGTCCATC\n+\n-6AC,EE@::CF7CFF&lt;&lt;FFGGDFFF,@FGGGG?F7FEGGGDEFF&gt;FF\n\nYorum: Okuma sırası önemlidir\nİki dosyadaki okuma ID’lerinin aynı olduğuna ve aynı sırada listelendiğine dikkat edin. Bazı durumlarda birinci ve ikinci dosyadaki okuma ID’lerine sırasıyla /1 ve /2 etiketleri eklenebilir.\n\n\n\n\n@1/1\nAGGGATGTGTTAGGGTTAGGGTTAGGGTTAGGGTTAGGGTTAGGGTTA\n+\nEGGEGGGDFGEEEAEECGDEGGFEEGEFGBEEDDECFEFDD@CDD&lt;ED\n@1/2\nCCTAACCCTAACCCTAACCCTAACCCTAACCCTAACCCTAACCCTAAC\n+\nGHHHDFDFGFGEGFBGEGGEGEGGGHGFGHFHFHHHHHHHEF?EFEFF\n@2/1\nAGGGATGTGTTAGGGTTAGGGTTAGGGTTAGGGTTAGGGTTAGGGTTA\n+\nHHHHHHEGFHEEFEEHEEHHGGEGGGGEFGFGGGGHHHHFBEEEEEFG\n@2/2\nCCTAACCCTAACCCTAACCCTAACCCTAACCCTAACCCTAACCCTAAC\n+\nHHHHHHHHHHHHHGHHHHHHGHHHHHHHHHHHFHHHFHHHHHHHHHHH\nBurada birinci ve ikinci okumalar /1 ve /2 etiketleriyle tanımlanmıştır.\n\nYorum: FASTQ formatı katı kuralları olmayan bir standarttır\nFASTQ formatı katı bir şekilde tanımlanmamıştır ve varyasyonları her zaman size baş ağrısı yaratacaktır. Daha fazla bilgi için bu sayfaya bakın.\n\n\n\n\n\nYukarıda gördüğümüz gibi, FASTQ veri setleri iki tür bilgi içerir:\n\nokumanın sekansı\nokumadaki her nükleotid için baz kaliteleri.\n\nBaz kaliteleri, sekanslama okumasındaki her bazın ne kadar güvenilir olduğunu değerlendirmemize olanak tanır. Friederike Dündar, Luce Skrabanek, Paul Zumbo tarafından hazırlanan mükemmel bir öğreticiden alınan aşağıdaki alıntı baz kalitelerinin ne olduğunu açıklamaktadır:\n\nYorum: “RNA-seq kullanarak diferansiyel gen ekspresyon analizine giriş”ten\nIllumina sekanslama, büyüyen sekanslama okumasına dahil edilmeleri üzerine yayılan floresan sinyalini tanımlayarak tek tek nükleotidleri belirlemeye dayanır. Floresan yoğunlukları çıkarıldıktan ve dört harfli koda çevrildikten sonra, sekanslama sırasında elde edilen görüntülerden nükleotid sekanslarının çıkarılması genellikle baz çağırma olarak adlandırılır. Sekanslama işleminin kusurlu doğası ve optik cihazların sınırlamaları nedeniyle, baz çağırma her zaman doğal bir belirsizliğe sahip olacaktır. Bu nedenle FASTQ dosyaları, her okumanın DNA sekansını, pozisyona özgü bir kalite skoruyla birlikte saklar; bu skor hata olasılığını, yani tek bir baz çağrısının yanlış olma olasılığını temsil eder. Skora Phred skoru denir, Q, bir baz çağrısının yanlış olma olasılığı p ile orantılıdır, burada Q=−10lg(p)’dir.\n\nÖrneğin, 10’luk bir Phred skoru her on baz çağrısında bir hata anlamına gelir (Q=−10lg(0.1)), yani %90 doğruluk; 20’lik bir Phred skoru her yüz baz çağrısında bir hata, yani %99 doğruluk anlamına gelir. Dolayısıyla, daha yüksek bir Phred skoru, raporlanan baza olan güvenin daha yüksek olduğunu gösterir.\nHer baza benzersiz bir skor tanımlayıcısı atamak için (değişken uzunluktaki sayılar yerine), Phred skorları genellikle ASCII karakterleri olarak temsil edilir. http://ascii-code.com/ adresinde hangi karakterlerin hangi sayıya atandığını görebilirsiniz.\nHam okumalar için, skorların aralığı sekanslama teknolojisine ve kullanılan baz çağırıcıya bağlı olacaktır (örneğin Illumina, Bustard adlı bir araç veya daha yakın zamanda RTA kullanıyordu). Ne yazık ki, Illumina Phred skorunu nasıl hesapladıkları ve ASCII-kodladıkları konusunda tutarlı olmaktan uzak olmuştur (aşağıya bakın)! Ayrıca, Illumina artık HiSeq X’e kadar 41 maksimum skor olana kadar, baz çağrıları için 45’e kadar yüksek Phred skorlarına izin vermektedir. Bu, 41’lik bir üst limit bekleyen downstream uygulamalarla sorunlara neden olabilir.\n\n\n\nIllumina quality score.\n\n\nBaz çağrısı kalite skorları Phred aralığı ile temsil edilir. Farklı Illumina (eski adıyla Solexa) versiyonları farklı skorlar ve ASCII ofsetleri kullanmıştır. Illumina format 1.8’den başlayarak, skor artık diğer sekanslama platformları ve sekanslama arşivleri tarafından da kullanılan standart Sanger/Phred formatını temsil etmektedir.\n\n\n\nFASTQ quality score.\n\n\nIllumina tarafından kullanılan farklı Phred skoru gösterimlerinin ve orijinal Sanger yorumunun ASCII yorumlaması ve aralıkları. Sanger formatı teorik olarak 93’lük bir skora izin verse de, ham sekanslama okumaları genellikle 60’lık bir Phred skorunu aşmaz. Aslında, çoğu Illumina tabanlı sekanslama 41 ila 45’lik maksimum skorlarla sonuçlanacaktır (görsel Wikipedia’dan alınmıştır)\n\n\n\nNGS verilerinin analizindeki ilk adımlardan biri verinin gerçekte ne kadar iyi olduğunu görmektir. FastqQC, FASTQ veri setlerinin kalitesini değerlendirmenize olanak tanıyan (ve sizin için sekanslama yapanı suçlayıp suçlamama konusunda karar vermenizi sağlayan) harika bir araçtır.\n\n\n\n\n\n\n\nA. Mükemmel kalite\nB. Hmm…Tamam\n\n\n\n\n\n\n\n\n\nBurada iki veri seti için FastQC baz kalite raporlarını görebilirsiniz (araç size başka türde veriler de sunar): A ve B. A veri seti uzun okumalara (250 bp) ve hiçbir kalitenin phred skoru 30’un altına düşmediği çok iyi bir kalite profiline sahiptir. B veri seti, okumaların uçlarının phred skoru 20’nin altına düştüğü önemli ölçüde daha kötüdür. B okumalarının ileri işleme için kırpılması gerekebilir.\n\n\n\nNGS okumalarının referans sekanslarına karşı haritalanması, analizin temel adımlarından biridir. Şimdi bunun pratikte nasıl yapıldığını göreceğiz. Aşağıda ana akım haritalama araçlarını vurgulayan temel yayınların bir listesi bulunmaktadır:\n\n2009 Bowtie 1 - Langmead ve ark.\n2012 Bowtie 2 - Langmead ve Salzberg\n2009 BWA - Li ve Durbin\n2010 BWA - Li ve Durbin\n2013 BWA-MEM - Li\n\n\n\nHaritalayıcılar genellikle okumaları, genom indeksi adı verilen yüksek erişilebilir bir veri yapısına dönüştürülmüş bir referans sekansa karşı karşılaştırır. Bu tür indeksler haritalama başlamadan önce oluşturulmalıdır. Galaxy örnekleri genellikle halka açık olan bir dizi genom yapısı için indeksler depolar.\n\n\n\nÖnbelleğe alınmış genom görseli\n\n\nÖrneğin, yukarıdaki görsel insan genomunun hg38 versiyonu için indeksleri göstermektedir. Aslında üç seçenek olduğunu görebilirsiniz: (1) hg38, (2) hg38 canonical ve (3) hg38 canonical female. hg38 tüm kromozomları ve yerleştirilmemiş tüm contig’leri içerir. hg38 canonical yerleştirilmemiş sekansları içermez ve sadece 1’den 22’ye kadar olan kromozomlardan, X, Y ve mitokondriyal DNA’dan oluşur. hg38 canonical female Y kromozomu hariç canonical setteki her şeyi içerir.\n\n\n\nEğer Galaxy’de haritalama yapmak istediğiniz genom mevcut değilse, genom sekansınızı FASTA dosyası olarak yükleyebilir ve aşağıda gösterildiği gibi doğrudan haritalayıcıda kullanabilirsiniz (Referans genom yükle History olarak ayarlanmıştır).\n\n\n\nYüklenmiş genom görseli\n\n\nBu durumda Galaxy önce bu veri setinden bir indeks oluşturacak ve ardından ona karşı haritalama analizi yapacaktır.\n\n\n\n\nSAM/BAM formatı, hizalanmış okumaları depolamak için kabul edilen bir standarttır (hizalanmamış okumaları da depolayabilir ve BWA gibi bazı haritalayıcılar girdi olarak hizalanmamış BAM kabul eder). Formatın ikili formu (BAM) kompakttır ve (indekslenmişse) hızlıca aranabilir. Galaxy’de BAM veri setleri her zaman indekslidir (bir .bai dosyası eşlik eder) ve koordinat sırasına göre sıralanmıştır. Daha fazla bilgi için tıklayınız.\nSequence Alignment/Map (SAM) formatı, aslında sekanslama okumalarının (veya sorgu sekanslarının) bir referansa hizalanmasını tanımlayan genel bir nükleotid hizalama formatıdır. İnsan tarafından okunabilir, TAB ile ayrılmış SAM dosyaları Binary Alignment/Map formatına sıkıştırılabilir. Bu BAM dosyaları basitçe gzip’lenmiş SAM dosyalarından daha büyüktür, çünkü boyut küçültmeden ziyade hızlı rastgele erişim için optimize edilmişlerdir. Pozisyona göre sıralanmış BAM dosyaları, tüm dosyayı belleğe yüklemeden bir lokusa hizalanan tüm okumaların verimli bir şekilde alınabilmesi için indekslenebilir.\nAşağıda gösterildiği gibi, SAM dosyaları genellikle kısa bir başlık bölümü ve her satırın tek bir okuma hizalamasını temsil ettiği çok uzun bir hizalama bölümü içerir. Aşağıdaki bölümler SAM formatını biraz daha ayrıntılı olarak açıklayacaktır. En kapsamlı ve güncel bilgi için https://github.com/samtools/hts-specs adresine gidin.\n\n\n\nBAM yapısı görseli\n\n\nSAM dosyasının şematik gösterimi. İsteğe bağlı başlık bölümündeki her satır “@” ile başlar, ardından uygun kısaltma gelir (örneğin, tüm kromozom adlarını (SN) ve uzunluklarını (LN) listeleyen sekans sözlüğü için SQ). Bir SAM dosyasındaki satırların büyük çoğunluğu genellikle okuma hizalamalarına karşılık gelir; burada her okuma 11 zorunlu giriş (siyah yazı tipi) ve değişken sayıda isteğe bağlı alan (gri yazı tipi) ile tanımlanır. Friederike Dündar, Luce Skrabanek ve Paul Zumbo’nun öğreticisinden alınmıştır.\n\n\nBaşlık bölümü, hizalamanın nasıl oluşturulduğu ve saklandığı hakkında bilgi içerir. Başlık bölümündeki tüm satırlar tab ile ayrılmıştır ve “@” karakteri ile başlar, ardından etiket:değer çiftleri gelir; burada etiket, değerin içeriğini ve formatını tanımlayan iki harfli bir dizedir. Örneğin, başlık bölümündeki “@SQ” satırı, okumaların hizalandığı referans sekansların adları ve uzunlukları hakkında bilgi içerir. Her biri 1.000 bp uzunluğunda üç kromozoma sahip varsayımsal bir organizma için, SAM başlığı aşağıdaki üç satırı içermelidir:\n@SQ SN:chr1 LN:1000\n@SQ SN:chr2 LN:1000\n@SQ SN:chr3 LN:1000\n\n\n\nİsteğe bağlı başlık bölümünün ardından, her satırın bir sekanslanmış okumaya karşılık geldiği hizalama bölümü gelir. Her okuma için, her zaman aynı sırada görünen 11 zorunlu alan vardır:\n&lt;QNAME&gt; &lt;FLAG&gt; &lt;RNAME&gt; &lt;POS&gt; &lt;MAPQ&gt; &lt;CIGAR&gt; &lt;MRNM&gt; &lt;MPOS&gt; &lt;ISIZE&gt; &lt;SEQ&gt; &lt;QUAL&gt;\nİlgili bilgi mevcut değilse veya geçersizse, alan değerleri (alana bağlı olarak) ‘0’ veya ’*’ olabilir, ancak eksik olamazlar! 11 zorunlu alandan sonra, değişken sayıda isteğe bağlı alan bulunabilir. İşte gerçek bir SAM dosyasından tek bir satır örneği (yana kaydırmanız gerekebilir):\nERR458493.552967 16 chrI 140 255 12M61232N37M2S * 0 0 CCACTCGTTCACCAGGGCCGGCGGGCTGATCACTTTATCGTGCATCTTGGC BB?HHJJIGHHJIGIIJJIJGIJIJJIIIGHBJJJJJJHHHHFFDDDA1+B NH:i:1 HI:i:1 AS:i:41 nM:i:2\nAşağıdaki tablo her alanın formatını ve içeriğini açıklamaktadır. FLAG, CIGAR ve isteğe bağlı alanlar (mavi ile işaretlenmiş) aşağıda daha ayrıntılı olarak açıklanmıştır. İsteğe bağlı alanların sayısı farklı SAM dosyaları arasında ve hatta aynı dosya içindeki okumalar arasında büyük ölçüde değişebilir.\n\n\n\nSAM alanları görseli\n\n\n\n\n\nFLAG alanı, özellikle PE (eşlenmiş uç) okumalar için önemli olan, tek tek okuma hakkında çeşitli bilgi parçalarını kodlar. Bir dizi bitten (0, 1) oluşturulan bir tamsayı içerir. Bu şekilde, birden fazla ikili (Evet/Hayır) soruya verilen yanıtlar, her bir bitin ayrı ayrı adreslenebileceği ve atanabileceği bir bit serisi olarak kompakt bir şekilde saklanabilir.\nAşağıdaki tablo FLAG alanında kodlanabilen farklı özelliklere genel bir bakış sunar. SAM formatı ve samtools geliştiricileri, belgelerinde farklı bitlere atıfta bulunmak için onaltılık kodlamayı kullanma eğilimindedir. Ancak, verilen bir SAM dosyasındaki FLAG alanının değeri her zaman altta yatan ikili değerlerin toplamının ondalık gösterimi olacaktır (aşağıdaki tabloda, satır 2’de gösterildiği gibi).\n\n\n\nSAM flag görseli\n\n\nSAM dosyalarının FLAG alanı, ilgili okuma hizalaması hakkındaki bilgileri tek bir ondalık sayıda saklar. Ondalık sayı, her ikili bite karşılık gelen Evet/Hayır sorularının tüm yanıtlarının toplamıdır. Onaltılık gösterim, tek tek bitlere (sorulara) atıfta bulunmak için kullanılır. İlgili durum doğruysa bir bit ayarlanır. Örneğin, bir okuma eşlenmişse, 0x1 ayarlanır ve ondalık değer 1 döndürülür. Bu nedenle, eşlenmiş okumalarla ilişkili tüm FLAG değerleri tek ondalık sayılar olmalıdır. Tersine, 0x1 biti ayarlanmamışsa (= okuma eşlenmemişse), 0x2, 0x8, 0x20, 0x40 ve 0x80 hakkında varsayımda bulunulamaz çünkü bunlar eşlenmiş okumalara atıfta bulunur.\nTek okumalarla yapılan bir çalışmada, en sık göreceğiniz bayraklar şunlardır:\n\n0: Bu okuma ileri zincire haritalanmıştır. (Bit bazlı bayrakların hiçbiri ayarlanmamıştır.)\n4: Okuma haritalanmamıştır (0x4 ayarlıdır).\n16: Okuma ters zincire haritalanmıştır (0x10 ayarlıdır)\n\n(0x100, 0x200 ve 0x400 çoğu hizalayıcı/haritalayıcı tarafından kullanılmaz, ancak prensipte tek okumalar için ayarlanabilir.) PE (eşlenmiş uç) deneyinde görebileceğiniz bazı yaygın FLAG değerleri şunları içerir:\n69 (= 1 + 4 + 64) | Okuma eşlenmiştir, çiftteki ilk okumadır ve haritalanmamıştır. |\n77 (= 1 + 4 + 8 + 64) | Okuma eşlenmiştir, çiftteki ilk okumadır, her ikisi de haritalanmamıştır. |\n83 (= 1 + 2 + 16 + 64) | Okuma eşlenmiştir, uygun bir çiftte haritalanmıştır, çiftteki ilk okumadır ve ters zincire haritalanmıştır. |\n99 (= 1 + 2 + 32 + 64) | Okuma eşlenmiştir, uygun bir çiftte haritalanmıştır, çiftteki ilk okumadır ve eşi ters zincire haritalanmıştır. |\n133 (= 1 + 4 + 128) | Okuma eşlenmiştir, çiftteki ikinci okumadır ve haritalanmamıştır. |\n137 (= 1 + 8 + 128) | Okuma eşlenmiştir, çiftteki ikinci okumadır ve eşi haritalanmamışken kendisi haritalanmıştır. |\n141 (= 1 + 4 + 8 + 128) | Okuma eşlenmiştir, çiftteki ikinci okumadır, ancak her ikisi de haritalanmamıştır. |\n147 (= 1 + 2 + 16 + 128) | Okuma eşlenmiştir, uygun bir çiftte haritalanmıştır, çiftteki ikinci okumadır ve ters zincire haritalanmıştır. |\n163 (= 1 + 2 + 32 + 128) | Okuma eşlenmiştir, uygun bir çiftte haritalanmıştır, çiftteki ikinci okumadır ve eşi ters zincire haritalanmıştır. |\nFLAG tam sayılarını yukarıda gösterilenler gibi düz İngilizce açıklamalara hızlıca çevirmek için kullanışlı bir web sitesi: https://broadinstitute.github.io/picard/explain-flags.html\n\n\n\nCIGAR, Concise Idiosyncratic Gapped Alignment Report (Özlü İdiyosinkratik Boşluklu Hizalama Raporu) anlamına gelir. SAM dosyasının bu altıncı alanı, okumayı o belirli lokusta referans sekansa haritalamak için hangi işlemlerin gerekli olduğunu gösteren bir CIGAR dizisi içerir.\nCIGAR formatında aşağıdaki işlemler tanımlanmıştır (ayrıca aşağıdaki şekle bakın):\n\nM - Hizalama (bir sekans eşleşmesi veya uyuşmazlığı olabilir!)\nI - Referansa kıyasla okumada ekleme\nD - Referansa kıyasla okumada silme\nN - Referanstan atlanan bölge. mRNA-genom hizalamaları için, N işlemi bir intronu temsil eder. Diğer hizalama türleri için, N’nin yorumu tanımlanmamıştır.\nS - Yumuşak kırpma (kırpılan sekanslar okumada mevcuttur); S’nin yalnızca H işlemleri arasında ve dizinin uçlarında olabilir\nH - Sert kırpma (kırpılan sekanslar hizalama kaydında mevcut DEĞİLDİR); yalnızca ilk ve/veya son işlem olarak mevcut olabilir\nP - Dolgu (dolgulu referanstan sessiz silme)\n= - Sekans eşleşmesi (yaygın olarak kullanılmaz)\nX - Sekans uyuşmazlığı (yaygın olarak kullanılmaz)\n\nM, I, S, =, X işlemlerinin uzunluklarının toplamı okumanın uzunluğuna eşit olmalıdır. İşte bazı örnekler:\n\n\n\nCIGAR görseli\n\n\nFriederike Dündar, Luce Skrabanek ve Paul Zumbo’nun öğreticisinden alınmıştır.\n\n\n\nOn bir zorunlu SAM dosya alanından sonra, isteğe bağlı alanlar &lt;TAG&gt;:&lt;TİP&gt;:&lt;DEĞER&gt; formatında anahtar-değer çiftleri olarak sunulur, burada TİP şunlardan biridir:\n\nA - Karakter\ni - Tamsayı\nf - Kayan noktalı sayı\nZ - Dizi\nH - Onaltılık dizi\n\nBu isteğe bağlı alanlarda saklanan bilgiler, haritalayıcıya bağlı olarak büyük ölçüde değişecektir ve yeni etiketler serbestçe eklenebilir. Ayrıca, SAM dosyası içindeki okumalar, SAM dosyasını üreten programa bağlı olarak farklı sayıda isteğe bağlı alana sahip olabilir. Yaygın olarak kullanılan isteğe bağlı etiketler şunları içerir:\n\nAS:i - Hizalama skoru\nBC:Z - Barkod sekansı\nHI:i - Eşleşme okuma için i. hit’tir\nNH:i - Sorgu sekansı için raporlanan hizalamaların sayısı\nNM:i - Sorgunun referansa göre düzenleme mesafesi\nMD:Z - Uyuşmazlıkların tam konumlarını içeren dizi (CIGAR dizisini tamamlamalıdır)\nRG:Z - Okuma grubu (başlıkta @RG mevcutsa ID’den sonraki girişle eşleşmelidir)\n\nBöylece, örneğin, referansa mükemmel şekilde haritalanan (yani uyuşmazlık içermeyen) okumaları seçmek için NM:i:0 etiketini kullanabiliriz. Yukarıda listelenen isteğe bağlı alanlar oldukça standartlaştırılmış olsa da, X, Y ve Z ile başlayan etiketler özellikle serbest kullanım için ayrılmıştır ve asla resmi SAM dosya formatı spesifikasyonlarının bir parçası olmayacaktır. Örneğin XS, TopHat (daha sonra tartışacağımız bir RNA-seq analiz aracı) tarafından zincir bilgisini kodlamak için kullanılır (örn. XS:A:+) iken Bowtie2 ve BWA, çoklu hizalamaları olan okumalar için bir sonraki en iyi skorlu hizalamanın hizalama skorunu saklamak için XS:i: kullanır (örn. XS:i:30).\n\n\n\nSAM/BAM formatının temel özelliklerinden biri, bireysel okumaları okuma grubu etiketleriyle etiketleme yeteneğidir. Bu, birden çok deneyin sonuçlarını tek bir BAM veri setinde birleştirmeye olanak tanır. Bu, downstream lojistiği önemli ölçüde basitleştirir: birden çok veri setiyle uğraşmak yerine sadece bir taneyle ilgilenebilirsiniz. Varyant çağırıcılar gibi birçok downstream analiz aracı, okuma grubu verilerini tanımak ve sonuçları okuma grubu bazında çıkarmak üzere tasarlanmıştır.\nBAM okuma gruplarının en iyi açıklamalarından biri GATK destek sitesinde bulunmaktadır. En önemli okuma grubu etiketlerini - ID, SM, LB ve PL - açıklayan iki tabloyu GATK forumundan minnetle aldık ve burada sunuyoruz:\n\n\n\nOkuma grupları görseli\n\n\nGATK forumu ayrıca aşağıdaki örneği de sunmaktadır:\n\n\n\nOkuma grubu örneği görseli\n\n\n\n\n\nSAM/BAM veri setlerini işlemek için dört ana araç setini destekliyoruz:\n\nDeepTools - derin sekanslama DNA sekanslama deneylerinden elde edilen verilerin görselleştirilmesi, kalite kontrolü ve normalizasyonu için kullanıcı dostu araçlar paketi.\nSAMtools - SAM/BAM formatındaki hizalamaları manipüle etmek için çeşitli araçlar; sıralama, birleştirme, indeksleme ve pozisyon başına hizalamaları oluşturma dahil.\nBEDtools - başlangıçta BED formatı için yazılan araç seti, BAM ve VCF veri setlerinin analizi için genişletilmiştir.\nPicard - yüksek verimli sekanslama (HTS) verilerini ve formatlarını manipüle etmek için bir dizi Java aracı.\n\n\n\n\n\n\n\nIllumina gibi teknolojiler için sekanslama kütüphanelerinin hazırlanması (en azından bu yazının yazıldığı tarihte), PCR amplifikasyonunu içerir. Bu, baz çağırıcılar tarafından güvenilir bir tespit yapılabilmesi için yeterli sayıda sekanslama şablonu oluşturmak için gereklidir. Ancak PCR’nin önyargıları vardır ve bunlar özellikle sekanslama kütüphanelerinin oluşturulması için kullanılan çoklu şablon PCR durumlarında belirgindir (Kanagawa ve ark. 2003).\n\n\n\nPCR duplikasyonları görseli\n\n\nAynı dış koordinatlarla hizalanan, en az 30’luk bir haritalama kalitesine ve en az 30nt uzunluğuna sahip moleküllerin analizi, PCR duplikasyonu başına ortalama 12.9’luk bir kapsama ve üstel/güç yasası dağılımına benzer ampirik bir kapsama dağılımı ile sonuçlanmıştır (sol üst panel). Bu, birçok molekülün yalnızca daha derin sekanslama için gözlemlendiğini, diğer moleküllerin ise daha yüksek frekanslarda mevcut olduğunu gösterir. Uzunluk (sol orta panel) ve GC içeriği (sol alt panel) modellerinin yanı sıra kombinasyonun (sağ panel) analizi, daha uzun moleküllere kıyasla %30 ila %70 arasında GC içeriğine sahip ve daha kısa moleküller için daha yüksek PCR duplikasyon sayıları gösterir. Bu etki, polimerazdan veya Illumina sekanslama için gerekli olan küme oluşturma sürecinden kaynaklanan bir amplifikasyon önyargısından kaynaklanıyor olabilir. Martin Kircher’ın doktora tezinden.\nDuplikasyonlar, dış hizalama koordinatlarına veya sekans tabanlı kümelemeye dayalı olarak tanımlanabilir. Duplike okumaları tanımlamanın yaygın yollarından biri Picard paketinden MarkDuplicates aracıdır. Hem PCR hem de optik duplikasyonları tanımlamak üzere tasarlanmıştır:\nDuplikasyonlar, bir eş çiftindeki her iki okuma için aynı 5’ pozisyonlarına (koordinat ve zincir) sahip okuma çiftleri olarak tanımlanır (ve isteğe bağlı olarak, eşleşen benzersiz moleküler tanımlayıcı okumalar; BARCODE_TAG seçeneğine bakın). Optik veya daha geniş anlamda Sekanslama duplikasyonları, sekanslama sırasında mekansal olarak kümelenmiş görünen ve optik/görüntü işleme artefaktlarından veya klonal amplifikasyon ve sekanslama sırasındaki biyo-kimyasal süreçlerden kaynaklanabilen duplikasyonlardır; bunlar READ_NAME_REGEX ve OPTICAL_DUPLICATE_PIXEL_DISTANCE seçenekleri kullanılarak tanımlanır. Aracın ana çıktısı, duplikasyonların SAM bayrakları alanında tanımlandığı veya isteğe bağlı olarak kaldırıldığı (REMOVE_DUPLICATE ve REMOVE_SEQUENCING_DUPLICATES’e bakın) ve isteğe bağlı olarak ‘DT’ isteğe bağlı özniteliğinde bir duplikasyon tipi ile işaretlendiği yeni bir SAM veya BAM dosyasıdır. Buna ek olarak, READ_PAIRS_EXAMINED, UNMAPPED_READS, UNPAIRED_READS, UNPAIRED_READ_DUPLICATES, READ_PAIR_DUPLICATES ve READ_PAIR_OPTICAL_DUPLICATES sayılarını içeren bir metrik dosyası da çıkarır.\n\n\n\nBununla birlikte, sekanslama hedefleri küçük olduğunda (örneğin, bakteriyel, viral veya organeller genomların yanı sıra amplikonların sekanslanması) duplikasyonları kaldırırken dikkatli olunmalıdır. Bunun nedeni, sekanslama hedefi küçük olduğunda, okumaların PCR amplifikasyon sorunları nedeniyle değil, tesadüfen aynı koordinatlara sahip olmasıdır. Aşağıdaki şekil, tahmini allel frekansı, kapsam ve insert boyutu varyasyonu arasındaki hassas dengeyi göstermektedir:\n\n\n\nÖrnekleme önyargısı görseli\n\n\nKapsam ve insert boyutu varyansı tarafından belirlenen Varyant Allel Frekansı (VAF) önyargısı. Okumalar eşlenmiş uçludur ve okuma uzunluğu 76’dır. Insert boyutu dağılımı, 200’de ortalama ve x ekseninde gösterilen standart sapma ile bir Gauss dağılımı olarak modellenmiştir. Gerçek VAF 0.05’tir. Her pozisyondaki koyuluk, VAF’deki önyargının büyüklüğünü gösterir. (Zhou ve ark. 2013’ten)."
  },
  {
    "objectID": "ngs-tr.html#fastq-manipülasyonu-ve-kalite-kontrolü",
    "href": "ngs-tr.html#fastq-manipülasyonu-ve-kalite-kontrolü",
    "title": "Yeni Nesil Veri Tiplerine Giriş",
    "section": "",
    "text": "FASTQ çok iyi tanımlanmamış bir formattır. Başlangıçta, çeşitli sekanslama cihazı üreticileri FASTQ’yu kendi gördükleri şekilde yorumlama özgürlüğüne sahipti, bu da birçok FASTQ çeşidinin ortaya çıkmasına neden oldu. Bu varyasyon öncelikle FASTQ için Wikipedia makalesinde açıklandığı gibi kalite değerlerinin farklı şekillerde kodlanmasından kaynaklanıyordu (kalite skorları ve anlamları hakkında aşağıda açıklama bulacaksınız). Bugün, FASTQ Sanger versiyonu formatın standart formu olarak kabul edilmektedir. Galaxy, downstream işleme araçları için tek meşru girdi olarak FASTQ Sanger’ı kullanmakta ve FASTQ dosyalarını bu forma dönüştürmek için bir dizi araç sunmaktadır (Galaxy araçlarının FASTQ Kalite Kontrolü bölümüne bakınız).\nFASTQ formatı şu şekilde görünür:\n@M02286:19:000000000-AA549:1:1101:12677:1273 1:N:0:23\nCCTACGGGTGGCAGCAGTGAGGAATATTGGTCAATGGACGGAAGTCTGAACCAGCCAAGTAGCGTGCAG\n+\nABC8C,:@F:CE8,B-,C,-6-9-C,CE9-CC--C-&lt;-C++,,+;CE&lt;,,CD,CEFC,@E9&lt;FCFCF?9\n@M02286:19:000000000-AA549:1:1101:15048:1299 1:N:0:23\nCCTACGGGTGGCTGCAGTGAGGAATATTGGACAATGGTCGGAAGACTGATCCAGCCATGCCGCGTGCAG\n+\nABC@CC77CFCEG;F9&lt;F89&lt;9--C,CE,--C-6C-,CE:++7:,CF&lt;,CEF,CFGGD8FFCFCFEGCF\n@M02286:19:000000000-AA549:1:1101:11116:1322 1:N:0:23\nCCTACGGGAGGCAGCAGTAGGGAATCTTCGGCAATGGACGGAAGTCTGACCGAGCAACGCCGCGTGAGT\n+\nAAC&lt;CCF+@@&gt;CC,C9,F9C9@9-CFFFE@7@:+CC8-C@:7,@EFE,6CF:+8F7EFEEF@EGGGEEE\nHer sekanslama okuması dört satırla temsil edilir:\n\nOkuma ID’si ve sekanslama çalışması hakkında isteğe bağlı bilgiler ile başlayan @\nSekanslanmış bazlar\n+ (isteğe bağlı olarak okuma ID’si ve bazı ek bilgilerle birlikte)\nASCII sembolleri olarak kodlanmış sekansın her bazı için kalite skorları"
  },
  {
    "objectID": "ngs-tr.html#eşlenmiş-uç-verisi-paired-end",
    "href": "ngs-tr.html#eşlenmiş-uç-verisi-paired-end",
    "title": "Yeni Nesil Veri Tiplerine Giriş",
    "section": "",
    "text": "Eşlenmiş-uç ve mate-pair sekanslama kütüphaneleri hazırlamak yaygındır. Bu, sonraki konularda tartışılan birçok uygulama için oldukça faydalıdır. Şimdilik bunların ne olduğunu ve FASTQ formunda nasıl göründüklerini kısaca tartışalım.\n\n\n\nGörsel: Eşlenmiş-uç ve mate-pair okumalar\n\n\nEşlenmiş-uç ve mate-pair okumalar. Eşlenmiş uç sekanslama işleminde (sol) oldukça kısa DNA moleküllerinin (1kb’den az) gerçek uçları belirlenirken, mate pair sekanslama için (sağ) uzun moleküllerin uçları birleştirilir ve özel sekanslama kütüphanelerinde hazırlanır. Bu mate pair protokollerinde, uzun, boyut seçimli moleküllerin uçları bir daireselleştirme reaksiyonunda dahili bir adaptör sekansı (yani bağlayıcı, sarı) ile bağlanır. Dairesel molekül daha sonra restriksiyon enzimleri veya fragmentasyon kullanılarak işlenir. Fragmentler bağlayıcı için zenginleştirilir ve dış kütüphane adaptörleri iki birleştirilmiş molekül ucunun etrafına eklenir. Dahili adaptör daha sonra aynı yönde ek bir sekanslama reaksiyonu için ikinci bir başlatma bölgesi olarak kullanılabilir veya sekanslama ikinci adaptörden, ters zincirden gerçekleştirilebilir. (Martin Kircher’ın “Understanding and improving high-throughput sequencing data production and analysis” başlıklı doktora tezinden)\nBu nedenle her iki durumda da (eşlenmiş-uç ve mate-pair) tek bir fiziksel DNA parçası (veya RNA-seq durumunda RNA) iki uçtan sekanslanır ve böylece iki okuma oluşturur. Bunlar ayrı dosyalar (birinci ve ikinci okumalar için iki FASTQ dosyası) veya her uç için okumaların iç içe geçtiği tek bir dosya olarak gösterilebilir. İşte örnekler:\n\n\nDosya 1\n@M02286:19:000000000-AA549:1:1101:12677:1273 1:N:0:23\nCCTACGGGTGGCAGCAGTGAGGAATATTGGTCAATGGACGGAAGTCT\n+\nABC8C,:@F:CE8,B-,C,-6-9-C,CE9-CC--C-&lt;-C++,,+;CE\n@M02286:19:000000000-AA549:1:1101:15048:1299 1:N:0:23\nCCTACGGGTGGCTGCAGTGAGGAATATTGGACAATGGTCGGAAGACT\n+\nABC@CC77CFCEG;F9&lt;F89&lt;9--C,CE,--C-6C-,CE:++7:,CF\nDosya 2\n@M02286:19:000000000-AA549:1:1101:12677:1273 2:N:0:23\nCACTACCCGTGTATCTAATCCTGTTTGATACCCGCACCTTCGAGCTTA\n+\n--8A,CCE+,,;,&lt;CC,,&lt;CE@,CFD,,C,CFF+@+@CCEF,,,B+C,\n@M02286:19:000000000-AA549:1:1101:15048:1299 2:N:0:23\nCACTACCGGGGTATCTAATCCTGTTCGCTCCCCACGCTTTCGTCCATC\n+\n-6AC,EE@::CF7CFF&lt;&lt;FFGGDFFF,@FGGGG?F7FEGGGDEFF&gt;FF\n\nYorum: Okuma sırası önemlidir\nİki dosyadaki okuma ID’lerinin aynı olduğuna ve aynı sırada listelendiğine dikkat edin. Bazı durumlarda birinci ve ikinci dosyadaki okuma ID’lerine sırasıyla /1 ve /2 etiketleri eklenebilir.\n\n\n\n\n@1/1\nAGGGATGTGTTAGGGTTAGGGTTAGGGTTAGGGTTAGGGTTAGGGTTA\n+\nEGGEGGGDFGEEEAEECGDEGGFEEGEFGBEEDDECFEFDD@CDD&lt;ED\n@1/2\nCCTAACCCTAACCCTAACCCTAACCCTAACCCTAACCCTAACCCTAAC\n+\nGHHHDFDFGFGEGFBGEGGEGEGGGHGFGHFHFHHHHHHHEF?EFEFF\n@2/1\nAGGGATGTGTTAGGGTTAGGGTTAGGGTTAGGGTTAGGGTTAGGGTTA\n+\nHHHHHHEGFHEEFEEHEEHHGGEGGGGEFGFGGGGHHHHFBEEEEEFG\n@2/2\nCCTAACCCTAACCCTAACCCTAACCCTAACCCTAACCCTAACCCTAAC\n+\nHHHHHHHHHHHHHGHHHHHHGHHHHHHHHHHHFHHHFHHHHHHHHHHH\nBurada birinci ve ikinci okumalar /1 ve /2 etiketleriyle tanımlanmıştır.\n\nYorum: FASTQ formatı katı kuralları olmayan bir standarttır\nFASTQ formatı katı bir şekilde tanımlanmamıştır ve varyasyonları her zaman size baş ağrısı yaratacaktır. Daha fazla bilgi için bu sayfaya bakın."
  },
  {
    "objectID": "ngs-tr.html#baz-kaliteleri-nedir",
    "href": "ngs-tr.html#baz-kaliteleri-nedir",
    "title": "Yeni Nesil Veri Tiplerine Giriş",
    "section": "",
    "text": "Yukarıda gördüğümüz gibi, FASTQ veri setleri iki tür bilgi içerir:\n\nokumanın sekansı\nokumadaki her nükleotid için baz kaliteleri.\n\nBaz kaliteleri, sekanslama okumasındaki her bazın ne kadar güvenilir olduğunu değerlendirmemize olanak tanır. Friederike Dündar, Luce Skrabanek, Paul Zumbo tarafından hazırlanan mükemmel bir öğreticiden alınan aşağıdaki alıntı baz kalitelerinin ne olduğunu açıklamaktadır:\n\nYorum: “RNA-seq kullanarak diferansiyel gen ekspresyon analizine giriş”ten\nIllumina sekanslama, büyüyen sekanslama okumasına dahil edilmeleri üzerine yayılan floresan sinyalini tanımlayarak tek tek nükleotidleri belirlemeye dayanır. Floresan yoğunlukları çıkarıldıktan ve dört harfli koda çevrildikten sonra, sekanslama sırasında elde edilen görüntülerden nükleotid sekanslarının çıkarılması genellikle baz çağırma olarak adlandırılır. Sekanslama işleminin kusurlu doğası ve optik cihazların sınırlamaları nedeniyle, baz çağırma her zaman doğal bir belirsizliğe sahip olacaktır. Bu nedenle FASTQ dosyaları, her okumanın DNA sekansını, pozisyona özgü bir kalite skoruyla birlikte saklar; bu skor hata olasılığını, yani tek bir baz çağrısının yanlış olma olasılığını temsil eder. Skora Phred skoru denir, Q, bir baz çağrısının yanlış olma olasılığı p ile orantılıdır, burada Q=−10lg(p)’dir.\n\nÖrneğin, 10’luk bir Phred skoru her on baz çağrısında bir hata anlamına gelir (Q=−10lg(0.1)), yani %90 doğruluk; 20’lik bir Phred skoru her yüz baz çağrısında bir hata, yani %99 doğruluk anlamına gelir. Dolayısıyla, daha yüksek bir Phred skoru, raporlanan baza olan güvenin daha yüksek olduğunu gösterir.\nHer baza benzersiz bir skor tanımlayıcısı atamak için (değişken uzunluktaki sayılar yerine), Phred skorları genellikle ASCII karakterleri olarak temsil edilir. http://ascii-code.com/ adresinde hangi karakterlerin hangi sayıya atandığını görebilirsiniz.\nHam okumalar için, skorların aralığı sekanslama teknolojisine ve kullanılan baz çağırıcıya bağlı olacaktır (örneğin Illumina, Bustard adlı bir araç veya daha yakın zamanda RTA kullanıyordu). Ne yazık ki, Illumina Phred skorunu nasıl hesapladıkları ve ASCII-kodladıkları konusunda tutarlı olmaktan uzak olmuştur (aşağıya bakın)! Ayrıca, Illumina artık HiSeq X’e kadar 41 maksimum skor olana kadar, baz çağrıları için 45’e kadar yüksek Phred skorlarına izin vermektedir. Bu, 41’lik bir üst limit bekleyen downstream uygulamalarla sorunlara neden olabilir.\n\n\n\nIllumina quality score.\n\n\nBaz çağrısı kalite skorları Phred aralığı ile temsil edilir. Farklı Illumina (eski adıyla Solexa) versiyonları farklı skorlar ve ASCII ofsetleri kullanmıştır. Illumina format 1.8’den başlayarak, skor artık diğer sekanslama platformları ve sekanslama arşivleri tarafından da kullanılan standart Sanger/Phred formatını temsil etmektedir.\n\n\n\nFASTQ quality score.\n\n\nIllumina tarafından kullanılan farklı Phred skoru gösterimlerinin ve orijinal Sanger yorumunun ASCII yorumlaması ve aralıkları. Sanger formatı teorik olarak 93’lük bir skora izin verse de, ham sekanslama okumaları genellikle 60’lık bir Phred skorunu aşmaz. Aslında, çoğu Illumina tabanlı sekanslama 41 ila 45’lik maksimum skorlarla sonuçlanacaktır (görsel Wikipedia’dan alınmıştır)"
  },
  {
    "objectID": "ngs-tr.html#veri-kalitesinin-değerlendirilmesi",
    "href": "ngs-tr.html#veri-kalitesinin-değerlendirilmesi",
    "title": "Yeni Nesil Veri Tiplerine Giriş",
    "section": "",
    "text": "NGS verilerinin analizindeki ilk adımlardan biri verinin gerçekte ne kadar iyi olduğunu görmektir. FastqQC, FASTQ veri setlerinin kalitesini değerlendirmenize olanak tanıyan (ve sizin için sekanslama yapanı suçlayıp suçlamama konusunda karar vermenizi sağlayan) harika bir araçtır.\n\n\n\n\n\n\n\nA. Mükemmel kalite\nB. Hmm…Tamam\n\n\n\n\n\n\n\n\n\nBurada iki veri seti için FastQC baz kalite raporlarını görebilirsiniz (araç size başka türde veriler de sunar): A ve B. A veri seti uzun okumalara (250 bp) ve hiçbir kalitenin phred skoru 30’un altına düşmediği çok iyi bir kalite profiline sahiptir. B veri seti, okumaların uçlarının phred skoru 20’nin altına düştüğü önemli ölçüde daha kötüdür. B okumalarının ileri işleme için kırpılması gerekebilir."
  },
  {
    "objectID": "ngs-tr.html#verinizi-haritalama",
    "href": "ngs-tr.html#verinizi-haritalama",
    "title": "Yeni Nesil Veri Tiplerine Giriş",
    "section": "",
    "text": "NGS okumalarının referans sekanslarına karşı haritalanması, analizin temel adımlarından biridir. Şimdi bunun pratikte nasıl yapıldığını göreceğiz. Aşağıda ana akım haritalama araçlarını vurgulayan temel yayınların bir listesi bulunmaktadır:\n\n2009 Bowtie 1 - Langmead ve ark.\n2012 Bowtie 2 - Langmead ve Salzberg\n2009 BWA - Li ve Durbin\n2010 BWA - Li ve Durbin\n2013 BWA-MEM - Li\n\n\n\nHaritalayıcılar genellikle okumaları, genom indeksi adı verilen yüksek erişilebilir bir veri yapısına dönüştürülmüş bir referans sekansa karşı karşılaştırır. Bu tür indeksler haritalama başlamadan önce oluşturulmalıdır. Galaxy örnekleri genellikle halka açık olan bir dizi genom yapısı için indeksler depolar.\n\n\n\nÖnbelleğe alınmış genom görseli\n\n\nÖrneğin, yukarıdaki görsel insan genomunun hg38 versiyonu için indeksleri göstermektedir. Aslında üç seçenek olduğunu görebilirsiniz: (1) hg38, (2) hg38 canonical ve (3) hg38 canonical female. hg38 tüm kromozomları ve yerleştirilmemiş tüm contig’leri içerir. hg38 canonical yerleştirilmemiş sekansları içermez ve sadece 1’den 22’ye kadar olan kromozomlardan, X, Y ve mitokondriyal DNA’dan oluşur. hg38 canonical female Y kromozomu hariç canonical setteki her şeyi içerir.\n\n\n\nEğer Galaxy’de haritalama yapmak istediğiniz genom mevcut değilse, genom sekansınızı FASTA dosyası olarak yükleyebilir ve aşağıda gösterildiği gibi doğrudan haritalayıcıda kullanabilirsiniz (Referans genom yükle History olarak ayarlanmıştır).\n\n\n\nYüklenmiş genom görseli\n\n\nBu durumda Galaxy önce bu veri setinden bir indeks oluşturacak ve ardından ona karşı haritalama analizi yapacaktır."
  },
  {
    "objectID": "ngs-tr.html#sambam-veri-setleri",
    "href": "ngs-tr.html#sambam-veri-setleri",
    "title": "Yeni Nesil Veri Tiplerine Giriş",
    "section": "",
    "text": "SAM/BAM formatı, hizalanmış okumaları depolamak için kabul edilen bir standarttır (hizalanmamış okumaları da depolayabilir ve BWA gibi bazı haritalayıcılar girdi olarak hizalanmamış BAM kabul eder). Formatın ikili formu (BAM) kompakttır ve (indekslenmişse) hızlıca aranabilir. Galaxy’de BAM veri setleri her zaman indekslidir (bir .bai dosyası eşlik eder) ve koordinat sırasına göre sıralanmıştır. Daha fazla bilgi için tıklayınız.\nSequence Alignment/Map (SAM) formatı, aslında sekanslama okumalarının (veya sorgu sekanslarının) bir referansa hizalanmasını tanımlayan genel bir nükleotid hizalama formatıdır. İnsan tarafından okunabilir, TAB ile ayrılmış SAM dosyaları Binary Alignment/Map formatına sıkıştırılabilir. Bu BAM dosyaları basitçe gzip’lenmiş SAM dosyalarından daha büyüktür, çünkü boyut küçültmeden ziyade hızlı rastgele erişim için optimize edilmişlerdir. Pozisyona göre sıralanmış BAM dosyaları, tüm dosyayı belleğe yüklemeden bir lokusa hizalanan tüm okumaların verimli bir şekilde alınabilmesi için indekslenebilir.\nAşağıda gösterildiği gibi, SAM dosyaları genellikle kısa bir başlık bölümü ve her satırın tek bir okuma hizalamasını temsil ettiği çok uzun bir hizalama bölümü içerir. Aşağıdaki bölümler SAM formatını biraz daha ayrıntılı olarak açıklayacaktır. En kapsamlı ve güncel bilgi için https://github.com/samtools/hts-specs adresine gidin.\n\n\n\nBAM yapısı görseli\n\n\nSAM dosyasının şematik gösterimi. İsteğe bağlı başlık bölümündeki her satır “@” ile başlar, ardından uygun kısaltma gelir (örneğin, tüm kromozom adlarını (SN) ve uzunluklarını (LN) listeleyen sekans sözlüğü için SQ). Bir SAM dosyasındaki satırların büyük çoğunluğu genellikle okuma hizalamalarına karşılık gelir; burada her okuma 11 zorunlu giriş (siyah yazı tipi) ve değişken sayıda isteğe bağlı alan (gri yazı tipi) ile tanımlanır. Friederike Dündar, Luce Skrabanek ve Paul Zumbo’nun öğreticisinden alınmıştır.\n\n\nBaşlık bölümü, hizalamanın nasıl oluşturulduğu ve saklandığı hakkında bilgi içerir. Başlık bölümündeki tüm satırlar tab ile ayrılmıştır ve “@” karakteri ile başlar, ardından etiket:değer çiftleri gelir; burada etiket, değerin içeriğini ve formatını tanımlayan iki harfli bir dizedir. Örneğin, başlık bölümündeki “@SQ” satırı, okumaların hizalandığı referans sekansların adları ve uzunlukları hakkında bilgi içerir. Her biri 1.000 bp uzunluğunda üç kromozoma sahip varsayımsal bir organizma için, SAM başlığı aşağıdaki üç satırı içermelidir:\n@SQ SN:chr1 LN:1000\n@SQ SN:chr2 LN:1000\n@SQ SN:chr3 LN:1000\n\n\n\nİsteğe bağlı başlık bölümünün ardından, her satırın bir sekanslanmış okumaya karşılık geldiği hizalama bölümü gelir. Her okuma için, her zaman aynı sırada görünen 11 zorunlu alan vardır:\n&lt;QNAME&gt; &lt;FLAG&gt; &lt;RNAME&gt; &lt;POS&gt; &lt;MAPQ&gt; &lt;CIGAR&gt; &lt;MRNM&gt; &lt;MPOS&gt; &lt;ISIZE&gt; &lt;SEQ&gt; &lt;QUAL&gt;\nİlgili bilgi mevcut değilse veya geçersizse, alan değerleri (alana bağlı olarak) ‘0’ veya ’*’ olabilir, ancak eksik olamazlar! 11 zorunlu alandan sonra, değişken sayıda isteğe bağlı alan bulunabilir. İşte gerçek bir SAM dosyasından tek bir satır örneği (yana kaydırmanız gerekebilir):\nERR458493.552967 16 chrI 140 255 12M61232N37M2S * 0 0 CCACTCGTTCACCAGGGCCGGCGGGCTGATCACTTTATCGTGCATCTTGGC BB?HHJJIGHHJIGIIJJIJGIJIJJIIIGHBJJJJJJHHHHFFDDDA1+B NH:i:1 HI:i:1 AS:i:41 nM:i:2\nAşağıdaki tablo her alanın formatını ve içeriğini açıklamaktadır. FLAG, CIGAR ve isteğe bağlı alanlar (mavi ile işaretlenmiş) aşağıda daha ayrıntılı olarak açıklanmıştır. İsteğe bağlı alanların sayısı farklı SAM dosyaları arasında ve hatta aynı dosya içindeki okumalar arasında büyük ölçüde değişebilir.\n\n\n\nSAM alanları görseli\n\n\n\n\n\nFLAG alanı, özellikle PE (eşlenmiş uç) okumalar için önemli olan, tek tek okuma hakkında çeşitli bilgi parçalarını kodlar. Bir dizi bitten (0, 1) oluşturulan bir tamsayı içerir. Bu şekilde, birden fazla ikili (Evet/Hayır) soruya verilen yanıtlar, her bir bitin ayrı ayrı adreslenebileceği ve atanabileceği bir bit serisi olarak kompakt bir şekilde saklanabilir.\nAşağıdaki tablo FLAG alanında kodlanabilen farklı özelliklere genel bir bakış sunar. SAM formatı ve samtools geliştiricileri, belgelerinde farklı bitlere atıfta bulunmak için onaltılık kodlamayı kullanma eğilimindedir. Ancak, verilen bir SAM dosyasındaki FLAG alanının değeri her zaman altta yatan ikili değerlerin toplamının ondalık gösterimi olacaktır (aşağıdaki tabloda, satır 2’de gösterildiği gibi).\n\n\n\nSAM flag görseli\n\n\nSAM dosyalarının FLAG alanı, ilgili okuma hizalaması hakkındaki bilgileri tek bir ondalık sayıda saklar. Ondalık sayı, her ikili bite karşılık gelen Evet/Hayır sorularının tüm yanıtlarının toplamıdır. Onaltılık gösterim, tek tek bitlere (sorulara) atıfta bulunmak için kullanılır. İlgili durum doğruysa bir bit ayarlanır. Örneğin, bir okuma eşlenmişse, 0x1 ayarlanır ve ondalık değer 1 döndürülür. Bu nedenle, eşlenmiş okumalarla ilişkili tüm FLAG değerleri tek ondalık sayılar olmalıdır. Tersine, 0x1 biti ayarlanmamışsa (= okuma eşlenmemişse), 0x2, 0x8, 0x20, 0x40 ve 0x80 hakkında varsayımda bulunulamaz çünkü bunlar eşlenmiş okumalara atıfta bulunur.\nTek okumalarla yapılan bir çalışmada, en sık göreceğiniz bayraklar şunlardır:\n\n0: Bu okuma ileri zincire haritalanmıştır. (Bit bazlı bayrakların hiçbiri ayarlanmamıştır.)\n4: Okuma haritalanmamıştır (0x4 ayarlıdır).\n16: Okuma ters zincire haritalanmıştır (0x10 ayarlıdır)\n\n(0x100, 0x200 ve 0x400 çoğu hizalayıcı/haritalayıcı tarafından kullanılmaz, ancak prensipte tek okumalar için ayarlanabilir.) PE (eşlenmiş uç) deneyinde görebileceğiniz bazı yaygın FLAG değerleri şunları içerir:\n69 (= 1 + 4 + 64) | Okuma eşlenmiştir, çiftteki ilk okumadır ve haritalanmamıştır. |\n77 (= 1 + 4 + 8 + 64) | Okuma eşlenmiştir, çiftteki ilk okumadır, her ikisi de haritalanmamıştır. |\n83 (= 1 + 2 + 16 + 64) | Okuma eşlenmiştir, uygun bir çiftte haritalanmıştır, çiftteki ilk okumadır ve ters zincire haritalanmıştır. |\n99 (= 1 + 2 + 32 + 64) | Okuma eşlenmiştir, uygun bir çiftte haritalanmıştır, çiftteki ilk okumadır ve eşi ters zincire haritalanmıştır. |\n133 (= 1 + 4 + 128) | Okuma eşlenmiştir, çiftteki ikinci okumadır ve haritalanmamıştır. |\n137 (= 1 + 8 + 128) | Okuma eşlenmiştir, çiftteki ikinci okumadır ve eşi haritalanmamışken kendisi haritalanmıştır. |\n141 (= 1 + 4 + 8 + 128) | Okuma eşlenmiştir, çiftteki ikinci okumadır, ancak her ikisi de haritalanmamıştır. |\n147 (= 1 + 2 + 16 + 128) | Okuma eşlenmiştir, uygun bir çiftte haritalanmıştır, çiftteki ikinci okumadır ve ters zincire haritalanmıştır. |\n163 (= 1 + 2 + 32 + 128) | Okuma eşlenmiştir, uygun bir çiftte haritalanmıştır, çiftteki ikinci okumadır ve eşi ters zincire haritalanmıştır. |\nFLAG tam sayılarını yukarıda gösterilenler gibi düz İngilizce açıklamalara hızlıca çevirmek için kullanışlı bir web sitesi: https://broadinstitute.github.io/picard/explain-flags.html\n\n\n\nCIGAR, Concise Idiosyncratic Gapped Alignment Report (Özlü İdiyosinkratik Boşluklu Hizalama Raporu) anlamına gelir. SAM dosyasının bu altıncı alanı, okumayı o belirli lokusta referans sekansa haritalamak için hangi işlemlerin gerekli olduğunu gösteren bir CIGAR dizisi içerir.\nCIGAR formatında aşağıdaki işlemler tanımlanmıştır (ayrıca aşağıdaki şekle bakın):\n\nM - Hizalama (bir sekans eşleşmesi veya uyuşmazlığı olabilir!)\nI - Referansa kıyasla okumada ekleme\nD - Referansa kıyasla okumada silme\nN - Referanstan atlanan bölge. mRNA-genom hizalamaları için, N işlemi bir intronu temsil eder. Diğer hizalama türleri için, N’nin yorumu tanımlanmamıştır.\nS - Yumuşak kırpma (kırpılan sekanslar okumada mevcuttur); S’nin yalnızca H işlemleri arasında ve dizinin uçlarında olabilir\nH - Sert kırpma (kırpılan sekanslar hizalama kaydında mevcut DEĞİLDİR); yalnızca ilk ve/veya son işlem olarak mevcut olabilir\nP - Dolgu (dolgulu referanstan sessiz silme)\n= - Sekans eşleşmesi (yaygın olarak kullanılmaz)\nX - Sekans uyuşmazlığı (yaygın olarak kullanılmaz)\n\nM, I, S, =, X işlemlerinin uzunluklarının toplamı okumanın uzunluğuna eşit olmalıdır. İşte bazı örnekler:\n\n\n\nCIGAR görseli\n\n\nFriederike Dündar, Luce Skrabanek ve Paul Zumbo’nun öğreticisinden alınmıştır.\n\n\n\nOn bir zorunlu SAM dosya alanından sonra, isteğe bağlı alanlar &lt;TAG&gt;:&lt;TİP&gt;:&lt;DEĞER&gt; formatında anahtar-değer çiftleri olarak sunulur, burada TİP şunlardan biridir:\n\nA - Karakter\ni - Tamsayı\nf - Kayan noktalı sayı\nZ - Dizi\nH - Onaltılık dizi\n\nBu isteğe bağlı alanlarda saklanan bilgiler, haritalayıcıya bağlı olarak büyük ölçüde değişecektir ve yeni etiketler serbestçe eklenebilir. Ayrıca, SAM dosyası içindeki okumalar, SAM dosyasını üreten programa bağlı olarak farklı sayıda isteğe bağlı alana sahip olabilir. Yaygın olarak kullanılan isteğe bağlı etiketler şunları içerir:\n\nAS:i - Hizalama skoru\nBC:Z - Barkod sekansı\nHI:i - Eşleşme okuma için i. hit’tir\nNH:i - Sorgu sekansı için raporlanan hizalamaların sayısı\nNM:i - Sorgunun referansa göre düzenleme mesafesi\nMD:Z - Uyuşmazlıkların tam konumlarını içeren dizi (CIGAR dizisini tamamlamalıdır)\nRG:Z - Okuma grubu (başlıkta @RG mevcutsa ID’den sonraki girişle eşleşmelidir)\n\nBöylece, örneğin, referansa mükemmel şekilde haritalanan (yani uyuşmazlık içermeyen) okumaları seçmek için NM:i:0 etiketini kullanabiliriz. Yukarıda listelenen isteğe bağlı alanlar oldukça standartlaştırılmış olsa da, X, Y ve Z ile başlayan etiketler özellikle serbest kullanım için ayrılmıştır ve asla resmi SAM dosya formatı spesifikasyonlarının bir parçası olmayacaktır. Örneğin XS, TopHat (daha sonra tartışacağımız bir RNA-seq analiz aracı) tarafından zincir bilgisini kodlamak için kullanılır (örn. XS:A:+) iken Bowtie2 ve BWA, çoklu hizalamaları olan okumalar için bir sonraki en iyi skorlu hizalamanın hizalama skorunu saklamak için XS:i: kullanır (örn. XS:i:30).\n\n\n\nSAM/BAM formatının temel özelliklerinden biri, bireysel okumaları okuma grubu etiketleriyle etiketleme yeteneğidir. Bu, birden çok deneyin sonuçlarını tek bir BAM veri setinde birleştirmeye olanak tanır. Bu, downstream lojistiği önemli ölçüde basitleştirir: birden çok veri setiyle uğraşmak yerine sadece bir taneyle ilgilenebilirsiniz. Varyant çağırıcılar gibi birçok downstream analiz aracı, okuma grubu verilerini tanımak ve sonuçları okuma grubu bazında çıkarmak üzere tasarlanmıştır.\nBAM okuma gruplarının en iyi açıklamalarından biri GATK destek sitesinde bulunmaktadır. En önemli okuma grubu etiketlerini - ID, SM, LB ve PL - açıklayan iki tabloyu GATK forumundan minnetle aldık ve burada sunuyoruz:\n\n\n\nOkuma grupları görseli\n\n\nGATK forumu ayrıca aşağıdaki örneği de sunmaktadır:\n\n\n\nOkuma grubu örneği görseli\n\n\n\n\n\nSAM/BAM veri setlerini işlemek için dört ana araç setini destekliyoruz:\n\nDeepTools - derin sekanslama DNA sekanslama deneylerinden elde edilen verilerin görselleştirilmesi, kalite kontrolü ve normalizasyonu için kullanıcı dostu araçlar paketi.\nSAMtools - SAM/BAM formatındaki hizalamaları manipüle etmek için çeşitli araçlar; sıralama, birleştirme, indeksleme ve pozisyon başına hizalamaları oluşturma dahil.\nBEDtools - başlangıçta BED formatı için yazılan araç seti, BAM ve VCF veri setlerinin analizi için genişletilmiştir.\nPicard - yüksek verimli sekanslama (HTS) verilerini ve formatlarını manipüle etmek için bir dizi Java aracı."
  },
  {
    "objectID": "ngs-tr.html#okuma-duplikasyonlarının-zorluğu",
    "href": "ngs-tr.html#okuma-duplikasyonlarının-zorluğu",
    "title": "Yeni Nesil Veri Tiplerine Giriş",
    "section": "",
    "text": "Illumina gibi teknolojiler için sekanslama kütüphanelerinin hazırlanması (en azından bu yazının yazıldığı tarihte), PCR amplifikasyonunu içerir. Bu, baz çağırıcılar tarafından güvenilir bir tespit yapılabilmesi için yeterli sayıda sekanslama şablonu oluşturmak için gereklidir. Ancak PCR’nin önyargıları vardır ve bunlar özellikle sekanslama kütüphanelerinin oluşturulması için kullanılan çoklu şablon PCR durumlarında belirgindir (Kanagawa ve ark. 2003).\n\n\n\nPCR duplikasyonları görseli\n\n\nAynı dış koordinatlarla hizalanan, en az 30’luk bir haritalama kalitesine ve en az 30nt uzunluğuna sahip moleküllerin analizi, PCR duplikasyonu başına ortalama 12.9’luk bir kapsama ve üstel/güç yasası dağılımına benzer ampirik bir kapsama dağılımı ile sonuçlanmıştır (sol üst panel). Bu, birçok molekülün yalnızca daha derin sekanslama için gözlemlendiğini, diğer moleküllerin ise daha yüksek frekanslarda mevcut olduğunu gösterir. Uzunluk (sol orta panel) ve GC içeriği (sol alt panel) modellerinin yanı sıra kombinasyonun (sağ panel) analizi, daha uzun moleküllere kıyasla %30 ila %70 arasında GC içeriğine sahip ve daha kısa moleküller için daha yüksek PCR duplikasyon sayıları gösterir. Bu etki, polimerazdan veya Illumina sekanslama için gerekli olan küme oluşturma sürecinden kaynaklanan bir amplifikasyon önyargısından kaynaklanıyor olabilir. Martin Kircher’ın doktora tezinden.\nDuplikasyonlar, dış hizalama koordinatlarına veya sekans tabanlı kümelemeye dayalı olarak tanımlanabilir. Duplike okumaları tanımlamanın yaygın yollarından biri Picard paketinden MarkDuplicates aracıdır. Hem PCR hem de optik duplikasyonları tanımlamak üzere tasarlanmıştır:\nDuplikasyonlar, bir eş çiftindeki her iki okuma için aynı 5’ pozisyonlarına (koordinat ve zincir) sahip okuma çiftleri olarak tanımlanır (ve isteğe bağlı olarak, eşleşen benzersiz moleküler tanımlayıcı okumalar; BARCODE_TAG seçeneğine bakın). Optik veya daha geniş anlamda Sekanslama duplikasyonları, sekanslama sırasında mekansal olarak kümelenmiş görünen ve optik/görüntü işleme artefaktlarından veya klonal amplifikasyon ve sekanslama sırasındaki biyo-kimyasal süreçlerden kaynaklanabilen duplikasyonlardır; bunlar READ_NAME_REGEX ve OPTICAL_DUPLICATE_PIXEL_DISTANCE seçenekleri kullanılarak tanımlanır. Aracın ana çıktısı, duplikasyonların SAM bayrakları alanında tanımlandığı veya isteğe bağlı olarak kaldırıldığı (REMOVE_DUPLICATE ve REMOVE_SEQUENCING_DUPLICATES’e bakın) ve isteğe bağlı olarak ‘DT’ isteğe bağlı özniteliğinde bir duplikasyon tipi ile işaretlendiği yeni bir SAM veya BAM dosyasıdır. Buna ek olarak, READ_PAIRS_EXAMINED, UNMAPPED_READS, UNPAIRED_READS, UNPAIRED_READ_DUPLICATES, READ_PAIR_DUPLICATES ve READ_PAIR_OPTICAL_DUPLICATES sayılarını içeren bir metrik dosyası da çıkarır.\n\n\n\nBununla birlikte, sekanslama hedefleri küçük olduğunda (örneğin, bakteriyel, viral veya organeller genomların yanı sıra amplikonların sekanslanması) duplikasyonları kaldırırken dikkatli olunmalıdır. Bunun nedeni, sekanslama hedefi küçük olduğunda, okumaların PCR amplifikasyon sorunları nedeniyle değil, tesadüfen aynı koordinatlara sahip olmasıdır. Aşağıdaki şekil, tahmini allel frekansı, kapsam ve insert boyutu varyasyonu arasındaki hassas dengeyi göstermektedir:\n\n\n\nÖrnekleme önyargısı görseli\n\n\nKapsam ve insert boyutu varyansı tarafından belirlenen Varyant Allel Frekansı (VAF) önyargısı. Okumalar eşlenmiş uçludur ve okuma uzunluğu 76’dır. Insert boyutu dağılımı, 200’de ortalama ve x ekseninde gösterilen standart sapma ile bir Gauss dağılımı olarak modellenmiştir. Gerçek VAF 0.05’tir. Her pozisyondaki koyuluk, VAF’deki önyargının büyüklüğünü gösterir. (Zhou ve ark. 2013’ten)."
  },
  {
    "objectID": "ngs-tr.html#bilgisayarınızdan",
    "href": "ngs-tr.html#bilgisayarınızdan",
    "title": "Yeni Nesil Veri Tiplerine Giriş",
    "section": "Bilgisayarınızdan",
    "text": "Bilgisayarınızdan\nBu, web tarayıcıları uzun dosya transferlerini sevmediği için küçük dosyalar için iyi çalışır:\nBilgisayarınızdan veri yükleme videosu\nVideo: Bilgisayarınızdan veri yükleme"
  },
  {
    "objectID": "ngs-tr.html#ftp-kullanarak",
    "href": "ngs-tr.html#ftp-kullanarak",
    "title": "Yeni Nesil Veri Tiplerine Giriş",
    "section": "FTP Kullanarak",
    "text": "FTP Kullanarak\nFTP (dosya transfer protokolü), büyük dosya koleksiyonlarının transferine olanak tanır:\nFTP ile yükleme videosu\nVideo: FTP ile yükleme"
  },
  {
    "objectID": "ngs-tr.html#ncbi-kısa-okuma-arşivinden",
    "href": "ngs-tr.html#ncbi-kısa-okuma-arşivinden",
    "title": "Yeni Nesil Veri Tiplerine Giriş",
    "section": "NCBI kısa okuma arşivinden",
    "text": "NCBI kısa okuma arşivinden\nSon olarak, veri setleri doğrudan NCBI’nin kısa okuma arşivinden yüklenebilir:\nSRA’dan yükleme videosu\nVideo: SRA’dan yükleme\n\nYorum\nBu öğreticide bu son yaklaşımı, NCBI SRA’dan veri almayı kullanacağız."
  },
  {
    "objectID": "ngs-tr.html#srada-gerekli-verileri-bulma",
    "href": "ngs-tr.html#srada-gerekli-verileri-bulma",
    "title": "Yeni Nesil Veri Tiplerine Giriş",
    "section": "SRA’da gerekli verileri bulma",
    "text": "SRA’da gerekli verileri bulma\nİlk olarak oynamak için iyi bir veri seti bulmamız gerekiyor. Sequence Read Archive (SRA), ABD Ulusal Sağlık Enstitüleri (NIH) tarafından işletilen birleştirilmemiş okumaların birincil arşividir. SRA, yayınların ve çalışmaların temelini oluşturan sekanslama verilerini almak için harika bir yerdir. Hadi bunu yapalım:\n\nUygulama: NCBI SRA’dan Metadata Alma\n\nTarayıcınızı https://www.ncbi.nlm.nih.gov/sra adresine yönlendirerek NCBI’nin SRA sayfasına gidin\nArama kutusuna SARS-CoV-2 Patient Sequencing From Partners / MGH girin: [Find data görseli] (Alternatif olarak, veriye doğrudan bağlantıya tıklayabilirsiniz)\nWeb sayfası çok sayıda SRA veri seti gösterecektir (yazı yazıldığı sırada 2,223 tane vardı). Bu, Boston bölgesindeki SARS-CoV-2 analizini açıklayan bir çalışmadan alınan verilerdir.\nBu veri setlerini açıklayan metadatayı şu şekilde indirin:\n\nSend to: açılır menüsüne tıklayın\nFile seçeneğini seçin\nFormat’ı RunInfo olarak değiştirin\nCreate file’a tıklayın İşte nasıl görünmeli: [RunInfo’yu SRA’dan alma görseli]\n\nBu, Downloads klasörünüzde oldukça büyük bir SraRunInfo.csv dosyası oluşturacaktır.\n\n\n\nYorum\nAz önce indirdiğimiz dosyanın sekanslama verisinin kendisi olmadığını unutmayın. Daha ziyade, sekanslama okumalarının özelliklerini tanımlayan metadata’dır. Bu listeyi, bu öğreticinin geri kalanında kullanılacak sadece birkaç erişim numarasına kadar filtreleyeceğiz."
  },
  {
    "objectID": "ngs-tr.html#galaxyde-sraruninfo.csv-dosyasını-işleme-ve-filtreleme",
    "href": "ngs-tr.html#galaxyde-sraruninfo.csv-dosyasını-işleme-ve-filtreleme",
    "title": "Yeni Nesil Veri Tiplerine Giriş",
    "section": "Galaxy’de SraRunInfo.csv dosyasını işleme ve filtreleme",
    "text": "Galaxy’de SraRunInfo.csv dosyasını işleme ve filtreleme\n\nUygulama: SraRunInfo.csv dosyasını Galaxy’ye yükleme\n\nUseGalaxy.* örnekleri veya başka herhangi biri gibi tercih ettiğiniz Galaxy örneğine gidin. (Bu öğretici usegalaxy.org’u kullanır).\nUpload Data (Veri Yükle) düğmesine tıklayın: [Veri yükleme düğmesi görseli]\nGörünecek iletişim kutusunda “Choose local files” (Yerel dosyaları seç) düğmesine tıklayın: [Yerel dosyaları seç düğmesi görseli]\nBilgisayarınızdan SraRunInfo.csv dosyasını bulun ve seçin\nStart (Başlat) düğmesine tıklayın\nClose (Kapat) düğmesine basarak iletişim kutusunu kapatın\nArtık dosyanın içeriğine galaxy-eye (göz) simgesine tıklayarak bakabilirsiniz. Bu dosyanın tek tek SRA erişim numaraları hakkında çok bilgi içerdiğini göreceksiniz. Bu çalışmada her erişim numarası, örnekleri sekanslanan bir hastaya karşılık gelir.\n\n\n\nYorum: Kesmelere Dikkat\nAşağıdaki bölüm Cut aracını kullanır. Galaxy’de tarihi nedenlerle iki cut aracı vardır. Bu örnek tam adı Cut columns from a table (cut) olan aracı kullanır. Ancak, aynı mantık diğer araç için de geçerlidir. Sadece biraz farklı bir arayüze sahiptir.\n\n\nUygulama: Verinin bir alt kümesini oluşturma\n\nAraç panelinin Filter and Sort bölümünde Select lines that match an expression (İfadeye uyan satırları seç) aracını bulun. param-file “Select lines from” (Satırları seçin) araç formu alanında az önce yüklediğimiz SraRunInfo.csv veri setinin listelendiğinden emin olun. “the pattern” (desen) alanına aşağıdaki ifadeyi girin → SRR12733957|SRR11954102. Bunlar boru sembolü | ile ayrılmış bulmak istediğimiz iki erişim numarasıdır. | VEYA anlamına gelir: SRR12733957 VEYA SRR11954102 içeren satırları bul. Run Tool (Aracı Çalıştır) düğmesine tıklayın. Bu, iki satır içeren bir dosya oluşturacaktır (aslında… bir satır da başlık olarak kullanılır, bu yüzden dosyanın üç satır içerdiği görünecektir. Bu normaldir.)\n\nAraç panelinin Text Manipulation bölümünde bulacağınız Advanced Cut (Galaxy sürüm 1.1.0) aracını kullanarak dosyanın ilk sütununu kesin. Araç formunun “File to cut” (Kesilecek dosya) alanında önceki adımdan üretilen veri setinin seçili olduğundan emin olun. “Delimited by”i (Ayraç) Comma (Virgül) olarak değiştirin “List of fields”de (Alan listesi) Column: 1’i seçin. Run Tool’a basın. Bu, sadece iki satır içeren bir metin dosyası üretecektir:\nSRR12733957\nSRR11954102\n\nİstediğimiz veri setlerinin tanımlayıcılarına sahip olduğumuza göre, gerçek sekanslama verisini indirmemiz gerekiyor. Ayrıca bu videoyu da izleyebilirsiniz."
  },
  {
    "objectID": "ngs-tr.html#sekanslama-verisini-indirme",
    "href": "ngs-tr.html#sekanslama-verisini-indirme",
    "title": "Yeni Nesil Veri Tiplerine Giriş",
    "section": "Sekanslama verisini indirme",
    "text": "Sekanslama verisini indirme\n\nUygulama: SRA’dan veri alma\n\nAşağıdaki parametrelerle Faster Download and Extract Reads in FASTQ (Galaxy sürüm 2.10.9+galaxy0) aracını çalıştırın:\n\n“select input type”:\nList of SRA accession, one per line\n\nparam-file “sra accession list” parametresi önceki adımdaki “Advanced Cut” aracının çıktısını göstermelidir.\n\nRun Tool düğmesine Tıklayın. Bu, aracı çalıştıracak ve SRA veri setinde listelenen çalışmalar için sekans okuma veri setlerini getirecektir. Bu biraz zaman alabilir. Bu, ara vermek için iyi bir zaman olabilir.\n\nBu işi gönderdiğinizde geçmiş panelinizde birkaç giriş oluşturulur:\n\nPair-end data (fasterq-dump): Eşlenmiş-uç veri setlerini içerir (varsa)\nSingle-end data (fasterq-dump) Tek-uç veri setlerini içerir (varsa)\nOther data (fasterq-dump) Eşlenmemiş veri setlerini içerir (varsa)\nfasterq-dump log Araç çalışması hakkında bilgi içerir\n\n\n\nİlk üç öğe aslında veri setlerinin koleksiyonlarıdır. Galaxy’deki Koleksiyonlar, veri setleri arasındaki anlamsal ilişkileri deney/analiz içinde yansıtan mantıksal gruplandırmalardır. Bu durumda araç, eşlenmiş-uç okumalar, tek okumalar ve diğer için ayrı koleksiyonlar oluşturur. Daha fazla bilgi için Koleksiyonlar öğreticisine bakın ve (“Dataset Collections” ile başlayan adlara sahip) videoları izleyin.\nKoleksiyonları geçmiş panelindeki koleksiyon adına tıklayarak keşfedin. Bu sizi koleksiyonun içine götürür ve içindeki veri setlerini gösterir. Daha sonra geçmişinizin dış seviyesine geri dönebilirsiniz.\nfasterq veri aktarımını bitirdiğinde (tüm kutular yeşil/tamamlanmış), analiz için hazırız."
  },
  {
    "objectID": "ngs-tr.html#sonraki-adımları",
    "href": "ngs-tr.html#sonraki-adımları",
    "title": "Yeni Nesil Veri Tiplerine Giriş",
    "section": "Sonraki adımları",
    "text": "Sonraki adımları\nArtık alınan veriyi Galaxy’deki herhangi bir sekans analiz aracı ve iş akışı kullanarak analiz edebilirsiniz. SRA, akla gelebilecek her türlü *-seq deneyinin destekleyici verilerini tutar.\nBu öğreticiyi çalıştırdıysanız, ancak ilgilendiğiniz veri setlerini aldıysanız, Galaxy’de nasıl analiz yapılacağına dair fikirler için GTN kütüphanesinin geri kalanına bakın.\nBununla birlikte, bu öğreticinin örneklerinde kullanılan veri setlerini aldıysanız, aşağıdaki SARS-CoV-2 varyant analizini çalıştırmaya hazırsınız.\nÖğreticinin bu bölümünde, yukarıda indirilen veri setleri üzerinde varyant çağırma ve temel analiz gerçekleştireceğiz. Wuhan-Hu-1 SARS-CoV-2 referans sekansını indirerek başlayacağız, ardından adaptör kırpma, hizalama ve varyant çağırma işlemlerini yapacağız.\n\nYorum: usegalaxy.COVID-19 analiz projesi\nBu öğretici, covid19.galaxyproject.org’daki Varyasyon Analizi bölümünün verilerinin bir alt kümesini kullanmaktadır. covid19.galaxyproject.org için veriler, yeni veri setleri halka açık hale geldikçe sürekli olarak güncellenmektedir."
  },
  {
    "objectID": "ders4.html",
    "href": "ders4.html",
    "title": "Yeni Nesil Dizileme Giriş",
    "section": "",
    "text": "NGS data logistics isimli Galaxy eğitimi materyalinden uyarlanmıştır."
  },
  {
    "objectID": "ders4.html#fastq-manipülasyonu-ve-kalite-kontrolü",
    "href": "ders4.html#fastq-manipülasyonu-ve-kalite-kontrolü",
    "title": "Yeni Nesil Dizileme Giriş",
    "section": "FASTQ manipülasyonu ve kalite kontrolü",
    "text": "FASTQ manipülasyonu ve kalite kontrolü\nFASTQ çok iyi tanımlanmamış bir formattır. Başlangıçta, çeşitli sekanslama cihazı üreticileri FASTQ’yu kendi gördükleri şekilde yorumlama özgürlüğüne sahipti, bu da birçok FASTQ çeşidinin ortaya çıkmasına neden oldu. Bu varyasyon öncelikle FASTQ için Wikipedia makalesinde açıklandığı gibi kalite değerlerinin farklı şekillerde kodlanmasından kaynaklanıyordu (kalite skorları ve anlamları hakkında aşağıda açıklama bulacaksınız). Bugün, FASTQ Sanger versiyonu formatın standart formu olarak kabul edilmektedir. Galaxy, downstream işleme araçları için tek meşru girdi olarak FASTQ Sanger’ı kullanmakta ve FASTQ dosyalarını bu forma dönüştürmek için bir dizi araç sunmaktadır (Galaxy araçlarının FASTQ Kalite Kontrolü bölümüne bakınız).\nFASTQ formatı şu şekilde görünür:\n@M02286:19:000000000-AA549:1:1101:12677:1273 1:N:0:23\nCCTACGGGTGGCAGCAGTGAGGAATATTGGTCAATGGACGGAAGTCTGAACCAGCCAAGTAGCGTGCAG\n+\nABC8C,:@F:CE8,B-,C,-6-9-C,CE9-CC--C-&lt;-C++,,+;CE&lt;,,CD,CEFC,@E9&lt;FCFCF?9\n@M02286:19:000000000-AA549:1:1101:15048:1299 1:N:0:23\nCCTACGGGTGGCTGCAGTGAGGAATATTGGACAATGGTCGGAAGACTGATCCAGCCATGCCGCGTGCAG\n+\nABC@CC77CFCEG;F9&lt;F89&lt;9--C,CE,--C-6C-,CE:++7:,CF&lt;,CEF,CFGGD8FFCFCFEGCF\n@M02286:19:000000000-AA549:1:1101:11116:1322 1:N:0:23\nCCTACGGGAGGCAGCAGTAGGGAATCTTCGGCAATGGACGGAAGTCTGACCGAGCAACGCCGCGTGAGT\n+\nAAC&lt;CCF+@@&gt;CC,C9,F9C9@9-CFFFE@7@:+CC8-C@:7,@EFE,6CF:+8F7EFEEF@EGGGEEE\nHer sekanslama okuması dört satırla temsil edilir:\n\nOkuma ID’si ve sekanslama çalışması hakkında isteğe bağlı bilgiler ile başlayan @\nSekanslanmış bazlar\n+ (isteğe bağlı olarak okuma ID’si ve bazı ek bilgilerle birlikte)\nASCII sembolleri olarak kodlanmış sekansın her bazı için kalite skorları"
  },
  {
    "objectID": "ders4.html#eşlenmiş-uç-verisi-paired-end",
    "href": "ders4.html#eşlenmiş-uç-verisi-paired-end",
    "title": "Yeni Nesil Dizileme Giriş",
    "section": "Eşlenmiş uç verisi (Paired End)",
    "text": "Eşlenmiş uç verisi (Paired End)\nEşlenmiş-uç ve mate-pair sekanslama kütüphaneleri hazırlamak yaygındır. Bu, sonraki konularda tartışılan birçok uygulama için oldukça faydalıdır. Şimdilik bunların ne olduğunu ve FASTQ formunda nasıl göründüklerini kısaca tartışalım.\n\n\n\nGörsel: Eşlenmiş-uç ve mate-pair okumalar\n\n\nEşlenmiş-uç ve mate-pair okumalar. Eşlenmiş uç sekanslama işleminde (sol) oldukça kısa DNA moleküllerinin (1kb’den az) gerçek uçları belirlenirken, mate pair sekanslama için (sağ) uzun moleküllerin uçları birleştirilir ve özel sekanslama kütüphanelerinde hazırlanır. Bu mate pair protokollerinde, uzun, boyut seçimli moleküllerin uçları bir daireselleştirme reaksiyonunda dahili bir adaptör sekansı (yani bağlayıcı, sarı) ile bağlanır. Dairesel molekül daha sonra restriksiyon enzimleri veya fragmentasyon kullanılarak işlenir. Fragmentler bağlayıcı için zenginleştirilir ve dış kütüphane adaptörleri iki birleştirilmiş molekül ucunun etrafına eklenir. Dahili adaptör daha sonra aynı yönde ek bir sekanslama reaksiyonu için ikinci bir başlatma bölgesi olarak kullanılabilir veya sekanslama ikinci adaptörden, ters zincirden gerçekleştirilebilir. (Martin Kircher’ın “Understanding and improving high-throughput sequencing data production and analysis” başlıklı doktora tezinden)\nBu nedenle her iki durumda da (eşlenmiş-uç ve mate-pair) tek bir fiziksel DNA parçası (veya RNA-seq durumunda RNA) iki uçtan sekanslanır ve böylece iki okuma oluşturur. Bunlar ayrı dosyalar (birinci ve ikinci okumalar için iki FASTQ dosyası) veya her uç için okumaların iç içe geçtiği tek bir dosya olarak gösterilebilir. İşte örnekler:\n\nİki ayrı dosya\nDosya 1\n@M02286:19:000000000-AA549:1:1101:12677:1273 1:N:0:23\nCCTACGGGTGGCAGCAGTGAGGAATATTGGTCAATGGACGGAAGTCT\n+\nABC8C,:@F:CE8,B-,C,-6-9-C,CE9-CC--C-&lt;-C++,,+;CE\n@M02286:19:000000000-AA549:1:1101:15048:1299 1:N:0:23\nCCTACGGGTGGCTGCAGTGAGGAATATTGGACAATGGTCGGAAGACT\n+\nABC@CC77CFCEG;F9&lt;F89&lt;9--C,CE,--C-6C-,CE:++7:,CF\nDosya 2\n@M02286:19:000000000-AA549:1:1101:12677:1273 2:N:0:23\nCACTACCCGTGTATCTAATCCTGTTTGATACCCGCACCTTCGAGCTTA\n+\n--8A,CCE+,,;,&lt;CC,,&lt;CE@,CFD,,C,CFF+@+@CCEF,,,B+C,\n@M02286:19:000000000-AA549:1:1101:15048:1299 2:N:0:23\nCACTACCGGGGTATCTAATCCTGTTCGCTCCCCACGCTTTCGTCCATC\n+\n-6AC,EE@::CF7CFF&lt;&lt;FFGGDFFF,@FGGGG?F7FEGGGDEFF&gt;FF\n\nYorum: Okuma sırası önemlidir\nİki dosyadaki okuma ID’lerinin aynı olduğuna ve aynı sırada listelendiğine dikkat edin. Bazı durumlarda birinci ve ikinci dosyadaki okuma ID’lerine sırasıyla /1 ve /2 etiketleri eklenebilir.\n\n\n\nİç içe geçmiş dosya (Interleaved)\n@1/1\nAGGGATGTGTTAGGGTTAGGGTTAGGGTTAGGGTTAGGGTTAGGGTTA\n+\nEGGEGGGDFGEEEAEECGDEGGFEEGEFGBEEDDECFEFDD@CDD&lt;ED\n@1/2\nCCTAACCCTAACCCTAACCCTAACCCTAACCCTAACCCTAACCCTAAC\n+\nGHHHDFDFGFGEGFBGEGGEGEGGGHGFGHFHFHHHHHHHEF?EFEFF\n@2/1\nAGGGATGTGTTAGGGTTAGGGTTAGGGTTAGGGTTAGGGTTAGGGTTA\n+\nHHHHHHEGFHEEFEEHEEHHGGEGGGGEFGFGGGGHHHHFBEEEEEFG\n@2/2\nCCTAACCCTAACCCTAACCCTAACCCTAACCCTAACCCTAACCCTAAC\n+\nHHHHHHHHHHHHHGHHHHHHGHHHHHHHHHHHFHHHFHHHHHHHHHHH\nBurada birinci ve ikinci okumalar /1 ve /2 etiketleriyle tanımlanmıştır.\n\nYorum: FASTQ formatı katı kuralları olmayan bir standarttır\nFASTQ formatı katı bir şekilde tanımlanmamıştır ve varyasyonları her zaman size baş ağrısı yaratacaktır. Daha fazla bilgi için bu sayfaya bakın."
  },
  {
    "objectID": "ders4.html#baz-kaliteleri-nedir",
    "href": "ders4.html#baz-kaliteleri-nedir",
    "title": "Yeni Nesil Dizileme Giriş",
    "section": "Baz kaliteleri nedir?",
    "text": "Baz kaliteleri nedir?\nYukarıda gördüğümüz gibi, FASTQ veri setleri iki tür bilgi içerir:\n\nokumanın sekansı\nokumadaki her nükleotid için baz kaliteleri.\n\nBaz kaliteleri, sekanslama okumasındaki her bazın ne kadar güvenilir olduğunu değerlendirmemize olanak tanır. Friederike Dündar, Luce Skrabanek, Paul Zumbo tarafından hazırlanan mükemmel bir öğreticiden alınan aşağıdaki alıntı baz kalitelerinin ne olduğunu açıklamaktadır:\n\nYorum: “RNA-seq kullanarak diferansiyel gen ekspresyon analizine giriş”ten\nIllumina sekanslama, büyüyen sekanslama okumasına dahil edilmeleri üzerine yayılan floresan sinyalini tanımlayarak tek tek nükleotidleri belirlemeye dayanır. Floresan yoğunlukları çıkarıldıktan ve dört harfli koda çevrildikten sonra, sekanslama sırasında elde edilen görüntülerden nükleotid sekanslarının çıkarılması genellikle baz çağırma olarak adlandırılır. Sekanslama işleminin kusurlu doğası ve optik cihazların sınırlamaları nedeniyle, baz çağırma her zaman doğal bir belirsizliğe sahip olacaktır. Bu nedenle FASTQ dosyaları, her okumanın DNA sekansını, pozisyona özgü bir kalite skoruyla birlikte saklar; bu skor hata olasılığını, yani tek bir baz çağrısının yanlış olma olasılığını temsil eder. Skora Phred skoru denir, Q, bir baz çağrısının yanlış olma olasılığı p ile orantılıdır, burada Q=−10lg(p)’dir.\n\nÖrneğin, 10’luk bir Phred skoru her on baz çağrısında bir hata anlamına gelir (Q=−10lg(0.1)), yani %90 doğruluk; 20’lik bir Phred skoru her yüz baz çağrısında bir hata, yani %99 doğruluk anlamına gelir. Dolayısıyla, daha yüksek bir Phred skoru, raporlanan baza olan güvenin daha yüksek olduğunu gösterir.\nHer baza benzersiz bir skor tanımlayıcısı atamak için (değişken uzunluktaki sayılar yerine), Phred skorları genellikle ASCII karakterleri olarak temsil edilir. http://ascii-code.com/ adresinde hangi karakterlerin hangi sayıya atandığını görebilirsiniz.\nHam okumalar için, skorların aralığı sekanslama teknolojisine ve kullanılan baz çağırıcıya bağlı olacaktır (örneğin Illumina, Bustard adlı bir araç veya daha yakın zamanda RTA kullanıyordu). Ne yazık ki, Illumina Phred skorunu nasıl hesapladıkları ve ASCII-kodladıkları konusunda tutarlı olmaktan uzak olmuştur (aşağıya bakın)! Ayrıca, Illumina artık HiSeq X’e kadar 41 maksimum skor olana kadar, baz çağrıları için 45’e kadar yüksek Phred skorlarına izin vermektedir. Bu, 41’lik bir üst limit bekleyen downstream uygulamalarla sorunlara neden olabilir.\n\n\n\nIllumina quality score\n\n\nBaz çağrısı kalite skorları Phred aralığı ile temsil edilir. Farklı Illumina (eski adıyla Solexa) versiyonları farklı skorlar ve ASCII ofsetleri kullanmıştır. Illumina format 1.8’den başlayarak, skor artık diğer sekanslama platformları ve sekanslama arşivleri tarafından da kullanılan standart Sanger/Phred formatını temsil etmektedir.\n\n\n\nFASTQ quality score\n\n\nIllumina tarafından kullanılan farklı Phred skoru gösterimlerinin ve orijinal Sanger yorumunun ASCII yorumlaması ve aralıkları. Sanger formatı teorik olarak 93’lük bir skora izin verse de, ham sekanslama okumaları genellikle 60’lık bir Phred skorunu aşmaz. Aslında, çoğu Illumina tabanlı sekanslama 41 ila 45’lik maksimum skorlarla sonuçlanacaktır (görsel Wikipedia’dan alınmıştır)"
  },
  {
    "objectID": "ders4.html#veri-kalitesinin-değerlendirilmesi",
    "href": "ders4.html#veri-kalitesinin-değerlendirilmesi",
    "title": "Yeni Nesil Dizileme Giriş",
    "section": "Veri kalitesinin değerlendirilmesi",
    "text": "Veri kalitesinin değerlendirilmesi\nNGS verilerinin analizindeki ilk adımlardan biri verinin gerçekte ne kadar iyi olduğunu görmektir. FastqQC, FASTQ veri setlerinin kalitesini değerlendirmenize olanak tanıyan (ve sizin için sekanslama yapanı suçlayıp suçlamama konusunda karar vermenizi sağlayan) harika bir araçtır.\n\n\n\n\n\n\n\nA. Mükemmel kalite\nB. Hmm…Tamam\n\n\n\n\n\n\n\n\n\nBurada iki veri seti için FastQC baz kalite raporlarını görebilirsiniz (araç size başka türde veriler de sunar): A ve B. A veri seti uzun okumalara (250 bp) ve hiçbir kalitenin phred skoru 30’un altına düşmediği çok iyi bir kalite profiline sahiptir. B veri seti, okumaların uçlarının phred skoru 20’nin altına düştüğü önemli ölçüde daha kötüdür. B okumalarının ileri işleme için kırpılması gerekebilir."
  },
  {
    "objectID": "ders4.html#verinizi-haritalama",
    "href": "ders4.html#verinizi-haritalama",
    "title": "Yeni Nesil Dizileme Giriş",
    "section": "Verinizi Haritalama",
    "text": "Verinizi Haritalama\nNGS okumalarının referans sekanslarına karşı haritalanması, analizin temel adımlarından biridir. Şimdi bunun pratikte nasıl yapıldığını göreceğiz. Aşağıda ana akım haritalama araçlarını vurgulayan temel yayınların bir listesi bulunmaktadır:\n\n2009 Bowtie 1 - Langmead ve ark.\n2012 Bowtie 2 - Langmead ve Salzberg\n2009 BWA - Li ve Durbin\n2010 BWA - Li ve Durbin\n2013 BWA-MEM - Li\n\n\nÖnceden hesaplanmış genom indeksine karşı haritalama\nHaritalayıcılar genellikle okumaları, genom indeksi adı verilen yüksek erişilebilir bir veri yapısına dönüştürülmüş bir referans sekansa karşı karşılaştırır. Bu tür indeksler haritalama başlamadan önce oluşturulmalıdır. Galaxy örnekleri genellikle halka açık olan bir dizi genom yapısı için indeksler depolar.\n\n\n\nÖnbelleğe alınmış genom görseli\n\n\nÖrneğin, yukarıdaki görsel insan genomunun hg38 versiyonu için indeksleri göstermektedir. Aslında üç seçenek olduğunu görebilirsiniz: (1) hg38, (2) hg38 canonical ve (3) hg38 canonical female. hg38 tüm kromozomları ve yerleştirilmemiş tüm contig’leri içerir. hg38 canonical yerleştirilmemiş sekansları içermez ve sadece 1’den 22’ye kadar olan kromozomlardan, X, Y ve mitokondriyal DNA’dan oluşur. hg38 canonical female Y kromozomu hariç canonical setteki her şeyi içerir.\n\n\nÖnceden hesaplanmış indeks mevcut değilse ne olur?\nEğer Galaxy’de haritalama yapmak istediğiniz genom mevcut değilse, genom sekansınızı FASTA dosyası olarak yükleyebilir ve aşağıda gösterildiği gibi doğrudan haritalayıcıda kullanabilirsiniz (Referans genom yükle History olarak ayarlanmıştır).\n\n\n\nYüklenmiş genom görseli\n\n\nBu durumda Galaxy önce bu veri setinden bir indeks oluşturacak ve ardından ona karşı haritalama analizi yapacaktır."
  },
  {
    "objectID": "ders4.html#sambam-veri-setleri",
    "href": "ders4.html#sambam-veri-setleri",
    "title": "Yeni Nesil Dizileme Giriş",
    "section": "SAM/BAM veri setleri",
    "text": "SAM/BAM veri setleri\nSAM/BAM formatı, hizalanmış okumaları depolamak için kabul edilen bir standarttır (hizalanmamış okumaları da depolayabilir ve BWA gibi bazı haritalayıcılar girdi olarak hizalanmamış BAM kabul eder). Formatın ikili formu (BAM) kompakttır ve (indekslenmişse) hızlıca aranabilir. Galaxy’de BAM veri setleri her zaman indekslidir (bir .bai dosyası eşlik eder) ve koordinat sırasına göre sıralanmıştır. Daha fazla bilgi için tıklayınız.\nSequence Alignment/Map (SAM) formatı, aslında sekanslama okumalarının (veya sorgu sekanslarının) bir referansa hizalanmasını tanımlayan genel bir nükleotid hizalama formatıdır. İnsan tarafından okunabilir, TAB ile ayrılmış SAM dosyaları Binary Alignment/Map formatına sıkıştırılabilir. Bu BAM dosyaları basitçe gzip’lenmiş SAM dosyalarından daha büyüktür, çünkü boyut küçültmeden ziyade hızlı rastgele erişim için optimize edilmişlerdir. Pozisyona göre sıralanmış BAM dosyaları, tüm dosyayı belleğe yüklemeden bir lokusa hizalanan tüm okumaların verimli bir şekilde alınabilmesi için indekslenebilir.\nAşağıda gösterildiği gibi, SAM dosyaları genellikle kısa bir başlık bölümü ve her satırın tek bir okuma hizalamasını temsil ettiği çok uzun bir hizalama bölümü içerir. Aşağıdaki bölümler SAM formatını biraz daha ayrıntılı olarak açıklayacaktır. En kapsamlı ve güncel bilgi için https://github.com/samtools/hts-specs adresine gidin.\n\n\n\nBAM yapısı görseli\n\n\nSAM dosyasının şematik gösterimi. İsteğe bağlı başlık bölümündeki her satır “@” ile başlar, ardından uygun kısaltma gelir (örneğin, tüm kromozom adlarını (SN) ve uzunluklarını (LN) listeleyen sekans sözlüğü için SQ). Bir SAM dosyasındaki satırların büyük çoğunluğu genellikle okuma hizalamalarına karşılık gelir; burada her okuma 11 zorunlu giriş (siyah yazı tipi) ve değişken sayıda isteğe bağlı alan (gri yazı tipi) ile tanımlanır. Friederike Dündar, Luce Skrabanek ve Paul Zumbo’nun öğreticisinden alınmıştır.\n\nSAM Başlığı\nBaşlık bölümü, hizalamanın nasıl oluşturulduğu ve saklandığı hakkında bilgi içerir. Başlık bölümündeki tüm satırlar tab ile ayrılmıştır ve “@” karakteri ile başlar, ardından etiket:değer çiftleri gelir; burada etiket, değerin içeriğini ve formatını tanımlayan iki harfli bir dizedir. Örneğin, başlık bölümündeki “@SQ” satırı, okumaların hizalandığı referans sekansların adları ve uzunlukları hakkında bilgi içerir. Her biri 1.000 bp uzunluğunda üç kromozoma sahip varsayımsal bir organizma için, SAM başlığı aşağıdaki üç satırı içermelidir:\n@SQ SN:chr1 LN:1000\n@SQ SN:chr2 LN:1000\n@SQ SN:chr3 LN:1000\n\n\nSAM hizalama bölümü\nİsteğe bağlı başlık bölümünün ardından, her satırın bir sekanslanmış okumaya karşılık geldiği hizalama bölümü gelir. Her okuma için, her zaman aynı sırada görünen 11 zorunlu alan vardır:\n&lt;QNAME&gt; &lt;FLAG&gt; &lt;RNAME&gt; &lt;POS&gt; &lt;MAPQ&gt; &lt;CIGAR&gt; &lt;MRNM&gt; &lt;MPOS&gt; &lt;ISIZE&gt; &lt;SEQ&gt; &lt;QUAL&gt;\nİlgili bilgi mevcut değilse veya geçersizse, alan değerleri (alana bağlı olarak) ‘0’ veya ’*’ olabilir, ancak eksik olamazlar! 11 zorunlu alandan sonra, değişken sayıda isteğe bağlı alan bulunabilir. İşte gerçek bir SAM dosyasından tek bir satır örneği (yana kaydırmanız gerekebilir):\nERR458493.552967 16 chrI 140 255 12M61232N37M2S * 0 0 CCACTCGTTCACCAGGGCCGGCGGGCTGATCACTTTATCGTGCATCTTGGC BB?HHJJIGHHJIGIIJJIJGIJIJJIIIGHBJJJJJJHHHHFFDDDA1+B NH:i:1 HI:i:1 AS:i:41 nM:i:2\nAşağıdaki tablo her alanın formatını ve içeriğini açıklamaktadır. FLAG, CIGAR ve isteğe bağlı alanlar (mavi ile işaretlenmiş) aşağıda daha ayrıntılı olarak açıklanmıştır. İsteğe bağlı alanların sayısı farklı SAM dosyaları arasında ve hatta aynı dosya içindeki okumalar arasında büyük ölçüde değişebilir.\n\n\n\nSAM alanları görseli\n\n\n\n\nFLAG alanı\nFLAG alanı, özellikle PE (eşlenmiş uç) okumalar için önemli olan, tek tek okuma hakkında çeşitli bilgi parçalarını kodlar. Bir dizi bitten (0, 1) oluşturulan bir tamsayı içerir. Bu şekilde, birden fazla ikili (Evet/Hayır) soruya verilen yanıtlar, her bir bitin ayrı ayrı adreslenebileceği ve atanabileceği bir bit serisi olarak kompakt bir şekilde saklanabilir.\nAşağıdaki tablo FLAG alanında kodlanabilen farklı özelliklere genel bir bakış sunar. SAM formatı ve samtools geliştiricileri, belgelerinde farklı bitlere atıfta bulunmak için onaltılık kodlamayı kullanma eğilimindedir. Ancak, verilen bir SAM dosyasındaki FLAG alanının değeri her zaman altta yatan ikili değerlerin toplamının ondalık gösterimi olacaktır (aşağıdaki tabloda, satır 2’de gösterildiği gibi).\n\n\n\nSAM flag görseli\n\n\nSAM dosyalarının FLAG alanı, ilgili okuma hizalaması hakkındaki bilgileri tek bir ondalık sayıda saklar. Ondalık sayı, her ikili bite karşılık gelen Evet/Hayır sorularının tüm yanıtlarının toplamıdır. Onaltılık gösterim, tek tek bitlere (sorulara) atıfta bulunmak için kullanılır. İlgili durum doğruysa bir bit ayarlanır. Örneğin, bir okuma eşlenmişse, 0x1 ayarlanır ve ondalık değer 1 döndürülür. Bu nedenle, eşlenmiş okumalarla ilişkili tüm FLAG değerleri tek ondalık sayılar olmalıdır. Tersine, 0x1 biti ayarlanmamışsa (= okuma eşlenmemişse), 0x2, 0x8, 0x20, 0x40 ve 0x80 hakkında varsayımda bulunulamaz çünkü bunlar eşlenmiş okumalara atıfta bulunur.\nTek okumalarla yapılan bir çalışmada, en sık göreceğiniz bayraklar şunlardır:\n\n0: Bu okuma ileri zincire haritalanmıştır. (Bit bazlı bayrakların hiçbiri ayarlanmamıştır.)\n4: Okuma haritalanmamıştır (0x4 ayarlıdır).\n16: Okuma ters zincire haritalanmıştır (0x10 ayarlıdır)\n\n(0x100, 0x200 ve 0x400 çoğu hizalayıcı/haritalayıcı tarafından kullanılmaz, ancak prensipte tek okumalar için ayarlanabilir.) PE (eşlenmiş uç) deneyinde görebileceğiniz bazı yaygın FLAG değerleri şunları içerir:\n69 (= 1 + 4 + 64) | Okuma eşlenmiştir, çiftteki ilk okumadır ve haritalanmamıştır. |\n77 (= 1 + 4 + 8 + 64) | Okuma eşlenmiştir, çiftteki ilk okumadır, her ikisi de haritalanmamıştır. |\n83 (= 1 + 2 + 16 + 64) | Okuma eşlenmiştir, uygun bir çiftte haritalanmıştır, çiftteki ilk okumadır ve ters zincire haritalanmıştır. |\n99 (= 1 + 2 + 32 + 64) | Okuma eşlenmiştir, uygun bir çiftte haritalanmıştır, çiftteki ilk okumadır ve eşi ters zincire haritalanmıştır. |\n133 (= 1 + 4 + 128) | Okuma eşlenmiştir, çiftteki ikinci okumadır ve haritalanmamıştır. |\n137 (= 1 + 8 + 128) | Okuma eşlenmiştir, çiftteki ikinci okumadır ve eşi haritalanmamışken kendisi haritalanmıştır. |\n141 (= 1 + 4 + 8 + 128) | Okuma eşlenmiştir, çiftteki ikinci okumadır, ancak her ikisi de haritalanmamıştır. |\n147 (= 1 + 2 + 16 + 128) | Okuma eşlenmiştir, uygun bir çiftte haritalanmıştır, çiftteki ikinci okumadır ve ters zincire haritalanmıştır. |\n163 (= 1 + 2 + 32 + 128) | Okuma eşlenmiştir, uygun bir çiftte haritalanmıştır, çiftteki ikinci okumadır ve eşi ters zincire haritalanmıştır. |\nFLAG tam sayılarını yukarıda gösterilenler gibi düz İngilizce açıklamalara hızlıca çevirmek için kullanışlı bir web sitesi: https://broadinstitute.github.io/picard/explain-flags.html\n\n\nCIGAR dizisi\nCIGAR, Concise Idiosyncratic Gapped Alignment Report (Özlü İdiyosinkratik Boşluklu Hizalama Raporu) anlamına gelir. SAM dosyasının bu altıncı alanı, okumayı o belirli lokusta referans sekansa haritalamak için hangi işlemlerin gerekli olduğunu gösteren bir CIGAR dizisi içerir.\nCIGAR formatında aşağıdaki işlemler tanımlanmıştır (ayrıca aşağıdaki şekle bakın):\n\nM - Hizalama (bir sekans eşleşmesi veya uyuşmazlığı olabilir!)\nI - Referansa kıyasla okumada ekleme\nD - Referansa kıyasla okumada silme\nN - Referanstan atlanan bölge. mRNA-genom hizalamaları için, N işlemi bir intronu temsil eder. Diğer hizalama türleri için, N’nin yorumu tanımlanmamıştır.\nS - Yumuşak kırpma (kırpılan sekanslar okumada mevcuttur); S’nin yalnızca H işlemleri arasında ve dizinin uçlarında olabilir\nH - Sert kırpma (kırpılan sekanslar hizalama kaydında mevcut DEĞİLDİR); yalnızca ilk ve/veya son işlem olarak mevcut olabilir\nP - Dolgu (dolgulu referanstan sessiz silme)\n= - Sekans eşleşmesi (yaygın olarak kullanılmaz)\nX - Sekans uyuşmazlığı (yaygın olarak kullanılmaz)\n\nM, I, S, =, X işlemlerinin uzunluklarının toplamı okumanın uzunluğuna eşit olmalıdır. İşte bazı örnekler:\n\n\n\nCIGAR görseli\n\n\nFriederike Dündar, Luce Skrabanek ve Paul Zumbo’nun eğitim materyalinzden alınmıştır.\n\n\nİsteğe bağlı alanlar\nOn bir zorunlu SAM dosya alanından sonra, isteğe bağlı alanlar &lt;TAG&gt;:&lt;TİP&gt;:&lt;DEĞER&gt; formatında anahtar-değer çiftleri olarak sunulur, burada TİP şunlardan biridir:\n\nA - Karakter\ni - Tamsayı\nf - Ondalıklı sayı\nZ - Dizi\nH - Onaltılık dizi\n\nBu isteğe bağlı alanlarda saklanan bilgiler, haritalayıcıya bağlı olarak büyük ölçüde değişecektir ve yeni etiketler serbestçe eklenebilir. Ayrıca, SAM dosyası içindeki okumalar, SAM dosyasını üreten programa bağlı olarak farklı sayıda isteğe bağlı alana sahip olabilir. Yaygın olarak kullanılan isteğe bağlı etiketler şunları içerir:\n\nAS:i - Hizalama skoru\nBC:Z - Barkod sekansı\nHI:i - Eşleşme okuma için i. hit’tir\nNH:i - Sorgu sekansı için raporlanan hizalamaların sayısı\nNM:i - Sorgunun referansa göre düzenleme mesafesi\nMD:Z - Uyuşmazlıkların tam konumlarını içeren dizi (CIGAR dizisini tamamlamalıdır)\nRG:Z - Okuma grubu (başlıkta @RG mevcutsa ID’den sonraki girişle eşleşmelidir)\n\nBöylece, örneğin, referansa mükemmel şekilde haritalanan (yani uyuşmazlık içermeyen) okumaları seçmek için NM:i:0 etiketini kullanabiliriz. Yukarıda listelenen isteğe bağlı alanlar oldukça standartlaştırılmış olsa da, X, Y ve Z ile başlayan etiketler özellikle serbest kullanım için ayrılmıştır ve asla resmi SAM dosya formatı spesifikasyonlarının bir parçası olmayacaktır. Örneğin XS, TopHat (daha sonra tartışacağımız bir RNA-seq analiz aracı) tarafından zincir bilgisini kodlamak için kullanılır (örn. XS:A:+) iken Bowtie2 ve BWA, çoklu hizalamaları olan okumalar için bir sonraki en iyi skorlu hizalamanın hizalama skorunu saklamak için XS:i: kullanır (örn. XS:i:30).\n\n\nOkuma Grupları\nSAM/BAM formatının temel özelliklerinden biri, bireysel okumaları okuma grubu etiketleriyle etiketleme yeteneğidir. Bu, birden çok deneyin sonuçlarını tek bir BAM veri setinde birleştirmeye olanak tanır. Bu, downstream lojistiği önemli ölçüde basitleştirir: birden çok veri setiyle uğraşmak yerine sadece bir taneyle ilgilenebilirsiniz. Varyant çağırıcılar gibi birçok downstream analiz aracı, okuma grubu verilerini tanımak ve sonuçları okuma grubu bazında çıkarmak üzere tasarlanmıştır.\nBAM okuma gruplarının en iyi açıklamalarından biri GATK destek sitesinde bulunmaktadır. En önemli okuma grubu etiketlerini - ID, SM, LB ve PL - açıklayan iki tabloyu GATK forumundan minnetle aldık ve burada sunuyoruz:\n\n\n\nOkuma grupları görseli\n\n\nGATK forumu ayrıca aşağıdaki örneği de sunmaktadır:\n\n\n\nOkuma grubu örneği görseli\n\n\n\n\nSAM/BAM veri setlerinin işlenmesi\nSAM/BAM veri setlerini işlemek için dört ana araç setini destekliyoruz:\n\nDeepTools - derin sekanslama DNA sekanslama deneylerinden elde edilen verilerin görselleştirilmesi, kalite kontrolü ve normalizasyonu için kullanıcı dostu araçlar paketi.\nSAMtools - SAM/BAM formatındaki hizalamaları manipüle etmek için çeşitli araçlar; sıralama, birleştirme, indeksleme ve pozisyon başına hizalamaları oluşturma dahil.\nBEDtools - başlangıçta BED formatı için yazılan araç seti, BAM ve VCF veri setlerinin analizi için genişletilmiştir.\nPicard - yüksek verimli sekanslama (HTS) verilerini ve formatlarını manipüle etmek için bir dizi Java aracı."
  },
  {
    "objectID": "ders4.html#okuma-duplikasyonlarının-zorluğu",
    "href": "ders4.html#okuma-duplikasyonlarının-zorluğu",
    "title": "Yeni Nesil Dizileme Giriş",
    "section": "Okuma duplikasyonlarının zorluğu",
    "text": "Okuma duplikasyonlarının zorluğu\n\nPCR duplikasyonları\nIllumina gibi teknolojiler için sekanslama kütüphanelerinin hazırlanması (en azından bu yazının yazıldığı tarihte), PCR amplifikasyonunu içerir. Bu, baz çağırıcılar tarafından güvenilir bir tespit yapılabilmesi için yeterli sayıda sekanslama şablonu oluşturmak için gereklidir. Ancak PCR’nin önyargıları vardır ve bunlar özellikle sekanslama kütüphanelerinin oluşturulması için kullanılan çoklu şablon PCR durumlarında belirgindir (Kanagawa ve ark. 2003).\n\n\n\nPCR duplikasyonları görseli\n\n\nAynı dış koordinatlarla hizalanan, en az 30’luk bir haritalama kalitesine ve en az 30nt uzunluğuna sahip moleküllerin analizi, PCR duplikasyonu başına ortalama 12.9’luk bir kapsama ve üstel/güç yasası dağılımına benzer ampirik bir kapsama dağılımı ile sonuçlanmıştır (sol üst panel). Bu, birçok molekülün yalnızca daha derin sekanslama için gözlemlendiğini, diğer moleküllerin ise daha yüksek frekanslarda mevcut olduğunu gösterir. Uzunluk (sol orta panel) ve GC içeriği (sol alt panel) modellerinin yanı sıra kombinasyonun (sağ panel) analizi, daha uzun moleküllere kıyasla %30 ila %70 arasında GC içeriğine sahip ve daha kısa moleküller için daha yüksek PCR duplikasyon sayıları gösterir. Bu etki, polimerazdan veya Illumina sekanslama için gerekli olan küme oluşturma sürecinden kaynaklanan bir amplifikasyon önyargısından kaynaklanıyor olabilir. Martin Kircher’ın doktora tezinden.\nDuplikasyonlar, dış hizalama koordinatlarına veya sekans tabanlı kümelemeye dayalı olarak tanımlanabilir. Duplike okumaları tanımlamanın yaygın yollarından biri Picard paketinden MarkDuplicates aracıdır. Hem PCR hem de optik duplikasyonları tanımlamak üzere tasarlanmıştır:\nDuplikasyonlar, bir eş çiftindeki her iki okuma için aynı 5’ pozisyonlarına (koordinat ve zincir) sahip okuma çiftleri olarak tanımlanır (ve isteğe bağlı olarak, eşleşen benzersiz moleküler tanımlayıcı okumalar; BARCODE_TAG seçeneğine bakın). Optik veya daha geniş anlamda Sekanslama duplikasyonları, sekanslama sırasında mekansal olarak kümelenmiş görünen ve optik/görüntü işleme artefaktlarından veya klonal amplifikasyon ve sekanslama sırasındaki biyo-kimyasal süreçlerden kaynaklanabilen duplikasyonlardır; bunlar READ_NAME_REGEX ve OPTICAL_DUPLICATE_PIXEL_DISTANCE seçenekleri kullanılarak tanımlanır. Aracın ana çıktısı, duplikasyonların SAM bayrakları alanında tanımlandığı veya isteğe bağlı olarak kaldırıldığı (REMOVE_DUPLICATE ve REMOVE_SEQUENCING_DUPLICATES’e bakın) ve isteğe bağlı olarak ‘DT’ isteğe bağlı özniteliğinde bir duplikasyon tipi ile işaretlendiği yeni bir SAM veya BAM dosyasıdır. Buna ek olarak, READ_PAIRS_EXAMINED, UNMAPPED_READS, UNPAIRED_READS, UNPAIRED_READ_DUPLICATES, READ_PAIR_DUPLICATES ve READ_PAIR_OPTICAL_DUPLICATES sayılarını içeren bir metrik dosyası da çıkarır.\n\n\nÖrnekleme tesadüf duplikasyonları\nBununla birlikte, sekanslama hedefleri küçük olduğunda (örneğin, bakteriyel, viral veya organeller genomların yanı sıra amplikonların sekanslanması) duplikasyonları kaldırırken dikkatli olunmalıdır. Bunun nedeni, sekanslama hedefi küçük olduğunda, okumaların PCR amplifikasyon sorunları nedeniyle değil, tesadüfen aynı koordinatlara sahip olmasıdır. Aşağıdaki şekil, tahmini allel frekansı, kapsam ve insert boyutu varyasyonu arasındaki hassas dengeyi göstermektedir:\n\n\n\nÖrnekleme önyargısı görseli\n\n\nKapsam ve insert boyutu varyansı tarafından belirlenen Varyant Allel Frekansı (VAF) önyargısı. Okumalar eşlenmiş uçludur ve okuma uzunluğu 76’dır. Insert boyutu dağılımı, 200’de ortalama ve x ekseninde gösterilen standart sapma ile bir Gauss dağılımı olarak modellenmiştir. Gerçek VAF 0.05’tir. Her pozisyondaki koyuluk, VAF’deki önyargının büyüklüğünü gösterir. (Zhou ve ark. 2013’ten)."
  },
  {
    "objectID": "ders4.html#bilgisayarınızdan",
    "href": "ders4.html#bilgisayarınızdan",
    "title": "Yeni Nesil Dizileme Giriş",
    "section": "Bilgisayarınızdan",
    "text": "Bilgisayarınızdan\nBu, web tarayıcıları uzun dosya transferlerini sevmediği için küçük dosyalar için iyi çalışır:\nBilgisayarınızdan veri yükleme videosu\nVideo: Bilgisayarınızdan veri yükleme"
  },
  {
    "objectID": "ders4.html#ftp-kullanarak",
    "href": "ders4.html#ftp-kullanarak",
    "title": "Yeni Nesil Dizileme Giriş",
    "section": "FTP Kullanarak",
    "text": "FTP Kullanarak\nFTP (dosya transfer protokolü), büyük dosya koleksiyonlarının transferine olanak tanır:"
  },
  {
    "objectID": "ders4.html#ncbi-kısa-okuma-arşivinden",
    "href": "ders4.html#ncbi-kısa-okuma-arşivinden",
    "title": "Yeni Nesil Dizileme Giriş",
    "section": "NCBI kısa okuma arşivinden",
    "text": "NCBI kısa okuma arşivinden\nSon olarak, veri setleri doğrudan NCBI’nin kısa okuma arşivinden yüklenebilir:\nSRA’dan yükleme videosu\nVideo: SRA’dan yükleme\n\nYorum\nBu öğreticide bu son yaklaşımı, NCBI SRA’dan veri almayı kullanacağız."
  },
  {
    "objectID": "ders4.html#srada-gerekli-verileri-bulma",
    "href": "ders4.html#srada-gerekli-verileri-bulma",
    "title": "Yeni Nesil Dizileme Giriş",
    "section": "SRA’da gerekli verileri bulma",
    "text": "SRA’da gerekli verileri bulma\nİlk olarak oynamak için iyi bir veri seti bulmamız gerekiyor. Sequence Read Archive (SRA), ABD Ulusal Sağlık Enstitüleri (NIH) tarafından işletilen birleştirilmemiş okumaların birincil arşividir. SRA, yayınların ve çalışmaların temelini oluşturan sekanslama verilerini almak için harika bir yerdir. Hadi bunu yapalım:\n\nUygulama: NCBI SRA’dan Metadata Alma\n\nTarayıcınızı https://www.ncbi.nlm.nih.gov/sra adresine yönlendirerek NCBI’nin SRA sayfasına gidin\nArama kutusuna SARS-CoV-2 Patient Sequencing From Partners / MGH girin: [Find data görseli] (Alternatif olarak, veriye doğrudan bağlantıya tıklayabilirsiniz)\nWeb sayfası çok sayıda SRA veri seti gösterecektir (yazı yazıldığı sırada 2,223 tane vardı). Bu, Boston bölgesindeki SARS-CoV-2 analizini açıklayan bir çalışmadan alınan verilerdir.\nBu veri setlerini açıklayan metadatayı şu şekilde indirin:\n\nSend to: açılır menüsüne tıklayın\nFile seçeneğini seçin\nFormat’ı RunInfo olarak değiştirin\nCreate file’a tıklayın İşte nasıl görünmeli: [RunInfo’yu SRA’dan alma görseli]\n\nBu, Downloads klasörünüzde oldukça büyük bir SraRunInfo.csv dosyası oluşturacaktır.\n\n\n\nYorum\nAz önce indirdiğimiz dosyanın sekanslama verisinin kendisi olmadığını unutmayın. Daha ziyade, sekanslama okumalarının özelliklerini tanımlayan metadata’dır. Bu listeyi, bu öğreticinin geri kalanında kullanılacak sadece birkaç erişim numarasına kadar filtreleyeceğiz."
  },
  {
    "objectID": "ders4.html#galaxyde-sraruninfo.csv-dosyasını-işleme-ve-filtreleme",
    "href": "ders4.html#galaxyde-sraruninfo.csv-dosyasını-işleme-ve-filtreleme",
    "title": "Yeni Nesil Dizileme Giriş",
    "section": "Galaxy’de SraRunInfo.csv dosyasını işleme ve filtreleme",
    "text": "Galaxy’de SraRunInfo.csv dosyasını işleme ve filtreleme\n\nUygulama: SraRunInfo.csv dosyasını Galaxy’ye yükleme\n\nUseGalaxy.* örnekleri veya başka herhangi biri gibi tercih ettiğiniz Galaxy örneğine gidin. (Bu öğretici usegalaxy.org’u kullanır).\nUpload Data (Veri Yükle) düğmesine tıklayın: [Veri yükleme düğmesi görseli]\nGörünecek iletişim kutusunda “Choose local files” (Yerel dosyaları seç) düğmesine tıklayın: [Yerel dosyaları seç düğmesi görseli]\nBilgisayarınızdan SraRunInfo.csv dosyasını bulun ve seçin\nStart (Başlat) düğmesine tıklayın\nClose (Kapat) düğmesine basarak iletişim kutusunu kapatın\nArtık dosyanın içeriğine galaxy-eye (göz) simgesine tıklayarak bakabilirsiniz. Bu dosyanın tek tek SRA erişim numaraları hakkında çok bilgi içerdiğini göreceksiniz. Bu çalışmada her erişim numarası, örnekleri sekanslanan bir hastaya karşılık gelir.\n\n\n\nYorum: Kesmelere Dikkat\nAşağıdaki bölüm Cut aracını kullanır. Galaxy’de tarihi nedenlerle iki cut aracı vardır. Bu örnek tam adı Cut columns from a table (cut) olan aracı kullanır. Ancak, aynı mantık diğer araç için de geçerlidir. Sadece biraz farklı bir arayüze sahiptir.\n\n\nUygulama: Verinin bir alt kümesini oluşturma\n\nAraç panelinin Filter and Sort bölümünde Select lines that match an expression (İfadeye uyan satırları seç) aracını bulun. param-file “Select lines from” (Satırları seçin) araç formu alanında az önce yüklediğimiz SraRunInfo.csv veri setinin listelendiğinden emin olun. “the pattern” (desen) alanına aşağıdaki ifadeyi girin → SRR12733957|SRR11954102. Bunlar boru sembolü | ile ayrılmış bulmak istediğimiz iki erişim numarasıdır. | VEYA anlamına gelir: SRR12733957 VEYA SRR11954102 içeren satırları bul. Run Tool (Aracı Çalıştır) düğmesine tıklayın. Bu, iki satır içeren bir dosya oluşturacaktır (aslında… bir satır da başlık olarak kullanılır, bu yüzden dosyanın üç satır içerdiği görünecektir. Bu normaldir.)\n\nAraç panelinin Text Manipulation bölümünde bulacağınız Advanced Cut (Galaxy sürüm 1.1.0) aracını kullanarak dosyanın ilk sütununu kesin. Araç formunun “File to cut” (Kesilecek dosya) alanında önceki adımdan üretilen veri setinin seçili olduğundan emin olun. “Delimited by”i (Ayraç) Comma (Virgül) olarak değiştirin “List of fields”de (Alan listesi) Column: 1’i seçin. Run Tool’a basın. Bu, sadece iki satır içeren bir metin dosyası üretecektir:\nSRR12733957\nSRR11954102\n\nİstediğimiz veri setlerinin tanımlayıcılarına sahip olduğumuza göre, gerçek sekanslama verisini indirmemiz gerekiyor. Ayrıca bu videoyu da izleyebilirsiniz."
  },
  {
    "objectID": "ders4.html#sekanslama-verisini-indirme",
    "href": "ders4.html#sekanslama-verisini-indirme",
    "title": "Yeni Nesil Dizileme Giriş",
    "section": "Sekanslama verisini indirme",
    "text": "Sekanslama verisini indirme\n\nUygulama: SRA’dan veri alma\n\nAşağıdaki parametrelerle Faster Download and Extract Reads in FASTQ (Galaxy sürüm 2.10.9+galaxy0) aracını çalıştırın:\n\n“select input type”:\nList of SRA accession, one per line\n\nparam-file “sra accession list” parametresi önceki adımdaki “Advanced Cut” aracının çıktısını göstermelidir.\n\nRun Tool düğmesine Tıklayın. Bu, aracı çalıştıracak ve SRA veri setinde listelenen çalışmalar için sekans okuma veri setlerini getirecektir. Bu biraz zaman alabilir. Bu, ara vermek için iyi bir zaman olabilir.\n\nBu işi gönderdiğinizde geçmiş panelinizde birkaç giriş oluşturulur:\n\nPair-end data (fasterq-dump): Eşlenmiş-uç veri setlerini içerir (varsa)\nSingle-end data (fasterq-dump) Tek-uç veri setlerini içerir (varsa)\nOther data (fasterq-dump) Eşlenmemiş veri setlerini içerir (varsa)\nfasterq-dump log Araç çalışması hakkında bilgi içerir\n\n\n\nİlk üç öğe aslında veri setlerinin koleksiyonlarıdır. Galaxy’deki Koleksiyonlar, veri setleri arasındaki anlamsal ilişkileri deney/analiz içinde yansıtan mantıksal gruplandırmalardır. Bu durumda araç, eşlenmiş-uç okumalar, tek okumalar ve diğer için ayrı koleksiyonlar oluşturur. Daha fazla bilgi için Koleksiyonlar öğreticisine bakın ve (“Dataset Collections” ile başlayan adlara sahip) videoları izleyin.\nKoleksiyonları geçmiş panelindeki koleksiyon adına tıklayarak keşfedin. Bu sizi koleksiyonun içine götürür ve içindeki veri setlerini gösterir. Daha sonra geçmişinizin dış seviyesine geri dönebilirsiniz.\nfasterq veri aktarımını bitirdiğinde (tüm kutular yeşil/tamamlanmış), analiz için hazırız."
  },
  {
    "objectID": "ders4.html#sonraki-adımları",
    "href": "ders4.html#sonraki-adımları",
    "title": "Yeni Nesil Dizileme Giriş",
    "section": "Sonraki adımları",
    "text": "Sonraki adımları\nArtık alınan veriyi Galaxy’deki herhangi bir sekans analiz aracı ve iş akışı kullanarak analiz edebilirsiniz. SRA, akla gelebilecek her türlü *-seq deneyinin destekleyici verilerini tutar.\nBu öğreticiyi çalıştırdıysanız, ancak ilgilendiğiniz veri setlerini aldıysanız, Galaxy’de nasıl analiz yapılacağına dair fikirler için GTN kütüphanesinin geri kalanına bakın.\nBununla birlikte, bu öğreticinin örneklerinde kullanılan veri setlerini aldıysanız, aşağıdaki SARS-CoV-2 varyant analizini çalıştırmaya hazırsınız.\nÖğreticinin bu bölümünde, yukarıda indirilen veri setleri üzerinde varyant çağırma ve temel analiz gerçekleştireceğiz. Wuhan-Hu-1 SARS-CoV-2 referans sekansını indirerek başlayacağız, ardından adaptör kırpma, hizalama ve varyant çağırma işlemlerini yapacağız.\n\nYorum: usegalaxy.COVID-19 analiz projesi\nBu öğretici, covid19.galaxyproject.org’daki Varyasyon Analizi bölümünün verilerinin bir alt kümesini kullanmaktadır. covid19.galaxyproject.org için veriler, yeni veri setleri halka açık hale geldikçe sürekli olarak güncellenmektedir."
  },
  {
    "objectID": "ders4.html#bilgisayarınızdan-veri-yükleme",
    "href": "ders4.html#bilgisayarınızdan-veri-yükleme",
    "title": "Yeni Nesil Dizileme Giriş",
    "section": "Bilgisayarınızdan veri yükleme",
    "text": "Bilgisayarınızdan veri yükleme\nBu, web tarayıcıları ile küçük dosyalar yüklemek için uygundur:"
  },
  {
    "objectID": "ders4.html#ncbi-sra-kısa-okuma-arşivinden",
    "href": "ders4.html#ncbi-sra-kısa-okuma-arşivinden",
    "title": "Yeni Nesil Dizileme Giriş",
    "section": "NCBI SRA kısa okuma arşivinden",
    "text": "NCBI SRA kısa okuma arşivinden\nSon olarak, veri setleri doğrudan NCBI’nin kısa okuma arşivinden yüklenebilir:\n\n\n\nYorum\nBu öğreticide bu son yaklaşımı, NCBI SRA’dan veri almayı kullanacağız."
  }
]